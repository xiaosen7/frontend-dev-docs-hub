{"version":3,"sources":["./src/styles.scss","./node_modules/@angular/material/badge/_badge-theme.scss","./node_modules/@angular/material/core/typography/_typography.scss","./node_modules/@angular/material/core/typography/_typography-utils.scss","./node_modules/@angular/material/bottom-sheet/_bottom-sheet-theme.scss","./node_modules/@angular/material/button/_button-theme.scss","./node_modules/@angular/material/button-toggle/_button-toggle-theme.scss","./node_modules/@angular/material/card/_card-theme.scss","./node_modules/@angular/material/checkbox/_checkbox-theme.scss","./node_modules/@angular/material/chips/_chips-theme.scss","./node_modules/@angular/material/table/_table-theme.scss","./node_modules/@angular/material/datepicker/_datepicker-theme.scss","./node_modules/@angular/material/dialog/_dialog-theme.scss","./node_modules/@angular/material/expansion/_expansion-theme.scss","./node_modules/@angular/material/form-field/_form-field-theme.scss","./node_modules/@angular/material/form-field/_form-field-legacy-theme.scss","./node_modules/@angular/material/form-field/_form-field-fill-theme.scss","./node_modules/@angular/material/form-field/_form-field-outline-theme.scss","./node_modules/@angular/material/grid-list/_grid-list-theme.scss","./node_modules/@angular/material/core/style/_list-common.scss","./node_modules/@angular/material/input/_input-theme.scss","./node_modules/@angular/material/menu/_menu-theme.scss","./node_modules/@angular/material/paginator/_paginator-theme.scss","./node_modules/@angular/material/radio/_radio-theme.scss","./node_modules/@angular/material/select/_select-theme.scss","./node_modules/@angular/material/slide-toggle/_slide-toggle-theme.scss","./node_modules/@angular/material/slider/_slider-theme.scss","./node_modules/@angular/material/stepper/_stepper-theme.scss","./node_modules/@angular/material/tabs/_tabs-theme.scss","./node_modules/@angular/material/toolbar/_toolbar-theme.scss","./node_modules/@angular/material/tooltip/_tooltip-theme.scss","./node_modules/@angular/material/list/_list-theme.scss","./node_modules/@angular/material/core/option/_option-theme.scss","./node_modules/@angular/material/core/option/_optgroup-theme.scss","./node_modules/@angular/material/snack-bar/_snack-bar-theme.scss","./node_modules/@angular/material/tree/_tree-theme.scss","./node_modules/@angular/material/core/ripple/_ripple.scss","./node_modules/@angular/cdk/a11y/_index.scss","./node_modules/@angular/cdk/overlay/_index.scss","./node_modules/@angular/cdk/text-field/_index.scss","./node_modules/@angular/material/core/focus-indicators/_focus-indicators.scss","./node_modules/@angular/material/core/_core.scss","./node_modules/@angular/material/core/ripple/_ripple-theme.scss","./node_modules/@angular/material/core/selection/pseudo-checkbox/_pseudo-checkbox-theme.scss","./node_modules/@angular/material/core/_core-theme.scss","./node_modules/@angular/material/core/style/_elevation.scss","./node_modules/@angular/material/autocomplete/_autocomplete-theme.scss","./node_modules/@angular/material/divider/_divider-theme.scss","./node_modules/@angular/material/expansion/_expansion-mixins.scss","./node_modules/@angular/material/core/style/_form-common.scss","./node_modules/@angular/material/form-field/_form-field-standard-theme.scss","./node_modules/@angular/material/icon/_icon-theme.scss","./node_modules/@angular/material/core/style/_vendor-prefixes.scss","./node_modules/@angular/material/progress-bar/_progress-bar-theme.scss","./node_modules/@angular/material/progress-spinner/_progress-spinner-theme.scss","./node_modules/@angular/material/sidenav/_sidenav-theme.scss","./node_modules/@angular/material/sort/_sort-theme.scss","./src/styles/_mixins.scss","./src/styles/0-base/_base-dir.scss","./src/styles/0-base/_typography.scss","./src/styles/_constants.scss","./src/styles/1-layouts/_layouts-dir.scss","./src/styles/1-layouts/_api-page.scss","./src/styles/1-layouts/_content-layout.scss","./src/styles/1-layouts/_doc-viewer.scss","./src/styles/1-layouts/_footer.scss","./src/styles/1-layouts/_layout-global.scss","./src/styles/1-layouts/_marketing-layout.scss","./src/styles/1-layouts/_not-found.scss","./src/styles/1-layouts/_sidenav.scss","./src/styles/1-layouts/_table-of-contents.scss","./src/styles/1-layouts/_top-menu.scss","./src/styles/1-layouts/_print-layout.scss","./src/styles/2-modules/_modules-dir.scss","./src/styles/2-modules/_alert.scss","./src/styles/2-modules/_api-pages.scss","./src/styles/2-modules/_api-list.scss","./src/styles/2-modules/_buttons.scss","./src/styles/2-modules/_callout.scss","./src/styles/2-modules/_card.scss","./src/styles/2-modules/_code.scss","./src/styles/2-modules/_contribute.scss","./src/styles/2-modules/_contributor.scss","./src/styles/2-modules/_details.scss","./src/styles/2-modules/_edit-page-cta.scss","./src/styles/2-modules/_features.scss","./src/styles/2-modules/_filetree.scss","./src/styles/2-modules/_heading-anchors.scss","./src/styles/2-modules/_hr.scss","./src/styles/2-modules/_images.scss","./src/styles/2-modules/_progress-bar.scss","./src/styles/2-modules/_table.scss","./src/styles/2-modules/_presskit.scss","./src/styles/2-modules/_resources.scss","./src/styles/2-modules/_scrollbar.scss","./src/styles/2-modules/_search-results.scss","./src/styles/2-modules/_subsection.scss","./src/styles/2-modules/_toc.scss","./src/styles/2-modules/_select-menu.scss","./src/styles/2-modules/_deploy-theme.scss","./src/styles/2-modules/_notification.scss","./src/styles/2-modules/_label.scss","./src/styles/_translator.scss"],"sourcesContent":["/* You can add global styles to this file, and also import other style files */\n@import './styles/rxjs-theme';\n@import './styles/main.scss';\n","// This contains all of the styles for the badge\n// rather than just the color/theme because of\n// no style sheet support for directives.\n@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../../cdk/a11y';\n\n$font-size: 12px;\n$font-weight: 600;\n$default-size: 22px !default;\n$small-size: $default-size - 6;\n$large-size: $default-size + 6;\n$_badge-structure-emitted: false !default;\n\n// Mixin for building offset given different sizes\n@mixin _badge-size($size) {\n  // This mixin isn't used in the context of a theme so we can disable the ampersand check.\n  // stylelint-disable material/no-ampersand-beyond-selector-start\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n  }\n\n  &.mat-badge-above {\n    .mat-badge-content {\n      top: math.div(-$size, 2);\n    }\n  }\n\n  &.mat-badge-below {\n    .mat-badge-content {\n      bottom: math.div(-$size, 2);\n    }\n  }\n\n  &.mat-badge-before {\n    .mat-badge-content {\n      left: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-before {\n    .mat-badge-content {\n      left: auto;\n      right: -$size;\n    }\n  }\n\n  &.mat-badge-after {\n    .mat-badge-content {\n      right: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-after {\n    .mat-badge-content {\n      right: auto;\n      left: -$size;\n    }\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before {\n      .mat-badge-content {\n        left: math.div(-$size, 2);\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-before {\n      .mat-badge-content {\n        left: auto;\n        right: math.div(-$size, 2);\n      }\n    }\n\n    &.mat-badge-after {\n      .mat-badge-content {\n        right: math.div(-$size, 2);\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-after {\n      .mat-badge-content {\n        right: auto;\n        left: math.div(-$size, 2);\n      }\n    }\n  }\n  // stylelint-enable\n}\n\n// Structural styles for the badge. They have to be included as a part of the theme,\n// because the badge is a directive and we have no other way of attaching styles to it.\n@mixin _badge-structure {\n  .mat-badge {\n    position: relative;\n  }\n\n  // The badge should make sure its host is overflow visible so that the badge content\n  // can be rendered outside of the element. Some components such as <mat-icon> explicitly\n  // style `overflow: hidden` so this requires extra specificity so that it does not\n  // depend on style load order.\n  .mat-badge.mat-badge {\n    overflow: visible;\n  }\n\n  .mat-badge-hidden {\n    .mat-badge-content {\n      display: none;\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _badge-size($small-size);\n  }\n\n  .mat-badge-medium {\n    @include _badge-size($default-size);\n  }\n\n  .mat-badge-large {\n    @include _badge-size($large-size);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $primary: map.get($config, primary);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-badge-content {\n    color: theming.get-color-from-palette($primary, default-contrast);\n    background: theming.get-color-from-palette($primary);\n\n    @include a11y.high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-accent {\n    .mat-badge-content {\n      background: theming.get-color-from-palette($accent);\n      color: theming.get-color-from-palette($accent, default-contrast);\n    }\n  }\n\n  .mat-badge-warn {\n    .mat-badge-content {\n      color: theming.get-color-from-palette($warn, default-contrast);\n      background: theming.get-color-from-palette($warn);\n    }\n  }\n\n  .mat-badge-disabled {\n    .mat-badge-content {\n      $app-background: theming.get-color-from-palette($background, 'background');\n      $badge-color: theming.get-color-from-palette($foreground, disabled-button);\n\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\n      // on top of something else, it won't look good if it's opaque. If it is a color *type*,\n      // we convert it into a solid color by taking the opacity from the rgba value and using\n      // the value to determine the percentage of the background to put into foreground when\n      // mixing the colors together.\n      @if (meta.type-of($badge-color) == color and meta.type-of($app-background) == color) {\n        $badge-opacity: opacity($badge-color);\n        background: color.mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\n      }\n      @else {\n        background: $badge-color;\n      }\n\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-badge-content {\n    font-weight: $font-weight;\n    font-size: $font-size;\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-badge-small .mat-badge-content {\n    // Set the font size to 75% of the original.\n    font-size: $font-size * 0.75;\n  }\n\n  .mat-badge-large .mat-badge-content {\n    font-size: $font-size * 2;\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-badge') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    // Try to reduce the number of times that the structural styles are emitted.\n    @if not $_badge-structure-emitted {\n      @include _badge-structure;\n\n      // Only flip the flag if the mixin is included at the top level. Otherwise the first\n      // inclusion might be inside of a theme class which will exclude the structural styles\n      // from all other themes.\n      @if not & {\n        $_badge-structure-emitted: true !global;\n      }\n    }\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'typography-utils';\n@use '../theming/theming';\n\n/// Defines a typography level from the Material Design spec.\n/// @param {String} $font-size The font-size for this level.\n/// @param {String | Number} $line-height The line-height for this level.\n/// @param {String | Number} $font-weight The font-weight for this level.\n/// @param {String} $font-family The font-family for this level.\n/// @param {String} $letter-spacing The letter-spacing for this level.\n/// @returns {Map} A map representing the definition of this typographic level.\n@function define-typography-level(\n  $font-size,\n  $line-height: $font-size,\n  $font-weight: 400,\n  $font-family: null,\n  $letter-spacing: normal) {\n\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight,\n    font-family: $font-family,\n    letter-spacing: $letter-spacing\n  );\n}\n\n/// Defines a collection of typography levels to configure typography for an application.\n/// Any level not specified defaults to the values defined in the Material Design specification:\n/// https://material.io/guidelines/style/typography.html.\n///\n/// Note that the Material Design specification does not describe explicit letter-spacing values.\n/// The values here come from reverse engineering the Material Design examples.\n/// @param {String} $font-family Default font-family for levels that don't specify font-family.\n/// @param {Map} $display-4 Configuration for the \"display-4\" typographic level.\n/// @param {Map} $display-3 Configuration for the \"display-3\" typographic level.\n/// @param {Map} $display-2 Configuration for the \"display-2\" typographic level.\n/// @param {Map} $display-1 Configuration for the \"display-1\" typographic level.\n/// @param {Map} $headline Configuration for the \"headline\" typographic level.\n/// @param {Map} $title Configuration for the \"title\" typographic level.\n/// @param {Map} $subheading-2 Configuration for the \"subheading-2\" typographic level.\n/// @param {Map} $subheading-1 Configuration for the \"subheading-1\" typographic level.\n/// @param {Map} $body-2 Configuration for the \"body-2\" typographic level.\n/// @param {Map} $body-1 Configuration for the \"body-1\" typographic level.\n/// @param {Map} $caption Configuration for the \"caption\" typographic level.\n/// @param {Map} $button Configuration for the \"button\" typographic level.\n/// @param {Map} $input Configuration for the \"input\" typographic level.\n/// @returns {Map} A typography config for the application.\n@function define-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     define-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\n  $display-3:     define-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\n  $display-2:     define-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\n  $display-1:     define-typography-level(34px, 40px, 400),\n  $headline:      define-typography-level(24px, 32px, 400),\n  $title:         define-typography-level(20px, 32px, 500),\n  $subheading-2:  define-typography-level(16px, 28px, 400),\n  $subheading-1:  define-typography-level(15px, 24px, 400),\n  $body-2:        define-typography-level(14px, 24px, 500),\n  $body-1:        define-typography-level(14px, 20px, 400),\n  $caption:       define-typography-level(12px, 20px, 400),\n  $button:        define-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         define-typography-level(inherit, 1.125, 400)\n) {\n\n  // Declare an initial map with all of the levels.\n  $config: (\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\n  @each $key, $level in $config {\n    @if map.get($level, font-family) == null {\n      $new-level: map.merge($level, (font-family: $font-family));\n      $config: map.merge($config, ($key: $new-level));\n    }\n  }\n\n  // Add the base font family to the config.\n  @return map.merge($config, (font-family: $font-family));\n}\n\n// Whether a config is for the Material Design 2018 typography system.\n@function private-typography-is-2018-config($config) {\n  @return map.get($config, headline-1) != null;\n}\n\n// Whether a config is for the Material Design 2014 typography system.\n@function private-typography-is-2014-config($config) {\n  @return map.get($config, headline) != null;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2014 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n//\n// Components using this function should be migrated to normalize to the 2018 style config instead.\n// New components should not use this function.\n@function private-typography-to-2014-config($config) {\n  @if $config == null {\n    @return null;\n  }\n  @if not private-typography-is-2014-config($config) {\n    $args: (\n        display-4: map.get($config, headline-1),\n        display-3: map.get($config, headline-2),\n        display-2: map.get($config, headline-3),\n        display-1: map.get($config, headline-4),\n        headline: map.get($config, headline-5),\n        title: map.get($config, headline-6),\n        subheading-2: map.get($config, subtitle-1),\n        subheading-1: map.get($config, subtitle-2),\n        body-2: map.get($config, body-1),\n        body-1: map.get($config, body-2),\n        button: map.get($config, button),\n        caption: map.get($config, caption),\n    );\n    $non-null-args: ();\n    @each $key, $value in $args {\n      @if $value != null {\n        $non-null-args: map.merge($non-null-args, ($key: $value));\n      }\n    }\n    @return define-typography-config($non-null-args...);\n  }\n  @return $config;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2018 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n@function private-typography-to-2018-config($config) {\n  @if $config == null {\n    @return null;\n  }\n  @if not private-typography-is-2018-config($config) {\n    @return (\n        headline-1: map.get($config, display-4),\n        headline-2: map.get($config, display-3),\n        headline-3: map.get($config, display-2),\n        headline-4: map.get($config, display-1),\n        headline-5: map.get($config, headline),\n        headline-6: map.get($config, title),\n        subtitle-1: map.get($config, subheading-2),\n\n        // These mappings are odd, but body-2 in the 2014 system actually looks closer to subtitle-2\n        // in the 2018 system, and subeading-1 in the 2014 system looks more like body-1 in the 2018\n        // system.\n        subtitle-2: map.get($config, body-2),\n        body-1: map.get($config, subheading-1),\n\n        body-2: map.get($config, body-1),\n        button: map.get($config, button),\n        caption: map.get($config, caption),\n        overline: if(map.get($config, overline), map.get($config, overline),\n            define-typography-level(12px, 32px, 500)\n        )\n    );\n  }\n  @return $config;\n}\n\n/// Emits baseline typographic styles based on a given config.\n/// @param {Map} $config-or-theme A typography config for an entire theme.\n/// @param {String} $selector Ancestor selector under which native elements, such as h1, will\n///     be styled.\n@mixin typography-hierarchy($config-or-theme, $selector: '.mat-typography') {\n  $config: private-typography-to-2014-config(theming.get-typography-config($config-or-theme));\n\n  // Note that it seems redundant to prefix the class rules with the `$selector`, however it's\n  // necessary if we want to allow people to overwrite the tag selectors. This is due to\n  // selectors like `#{$selector} h1` being more specific than ones like `.mat-title`.\n  .mat-h1,\n  .mat-headline,\n  #{$selector} .mat-h1,\n  #{$selector} .mat-headline,\n  #{$selector} h1 {\n    @include typography-utils.typography-level($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2,\n  .mat-title,\n  #{$selector} .mat-h2,\n  #{$selector} .mat-title,\n  #{$selector} h2 {\n    @include typography-utils.typography-level($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3,\n  .mat-subheading-2,\n  #{$selector} .mat-h3,\n  #{$selector} .mat-subheading-2,\n  #{$selector} h3 {\n    @include typography-utils.typography-level($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4,\n  .mat-subheading-1,\n  #{$selector} .mat-h4,\n  #{$selector} .mat-subheading-1,\n  #{$selector} h4 {\n    @include typography-utils.typography-level($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5,\n  #{$selector} .mat-h5,\n  #{$selector} h5 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-1)} * 0.83),\n      typography-utils.font-weight($config, body-1),\n      typography-utils.line-height($config, body-1),\n      typography-utils.font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6,\n  #{$selector} .mat-h6,\n  #{$selector} h6 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-1)} * 0.67),\n      typography-utils.font-weight($config, body-1),\n      typography-utils.line-height($config, body-1),\n      typography-utils.font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong,\n  .mat-body-2,\n  #{$selector} .mat-body-strong,\n  #{$selector} .mat-body-2 {\n    @include typography-utils.typography-level($config, body-2);\n  }\n\n  .mat-body,\n  .mat-body-1,\n  #{$selector} .mat-body,\n  #{$selector} .mat-body-1,\n  #{$selector} {\n    @include typography-utils.typography-level($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small,\n  .mat-caption,\n  #{$selector} .mat-small,\n  #{$selector} .mat-caption {\n    @include typography-utils.typography-level($config, caption);\n  }\n\n  .mat-display-4,\n  #{$selector} .mat-display-4 {\n    @include typography-utils.typography-level($config, display-4);\n    margin: 0 0 56px;\n  }\n\n  .mat-display-3,\n  #{$selector} .mat-display-3 {\n    @include typography-utils.typography-level($config, display-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-2,\n  #{$selector} .mat-display-2 {\n    @include typography-utils.typography-level($config, display-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-1,\n  #{$selector} .mat-display-1 {\n    @include typography-utils.typography-level($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use 'sass:string';\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map.get(map.get($config, $level), $name);\n}\n\n/// Gets the font size for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n/// Gets the line height for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n/// Gets the font weight for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n/// Gets the letter spacing for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n/// Gets the font-family from a typography config and removes the quotes around it.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-family($config, $level: null) {\n  $font-family: map.get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(meta.type-of($font-family) == string, string.unquote($font-family), $font-family);\n}\n\n/// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n/// the individual properties if a value that isn't allowed in the shorthand is passed in.\n/// @param {String} $font-size The font-size value.\n/// @param {String | Number} $font-weight The font-weight value.\n/// @param {String | Number} $line-height The line-height value.\n/// @param {String} $font-family The font-family value.\n/// @returns {String} The `font` shorthand value combining the given parts.\n@mixin font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes.\n    font: $font-weight list.slash($font-size, $line-height) $font-family;\n  }\n}\n\n/// Emits CSS styles for the given typography level.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@mixin typography-level($config, $level) {\n  $font-size: font-size($config, $level);\n  $font-weight: font-weight($config, $level);\n  $line-height: line-height($config, $level);\n  $font-family: font-family($config, $level);\n\n  @include font-shorthand($font-size, $font-weight, $line-height, $font-family);\n  letter-spacing: letter-spacing($config, $level);\n}\n\n/// Coerce a value to `em` if it is a unitless number, otherwise returns\n/// the value provided.\n@function private-coerce-unitless-to-em($value) {\n  @return if(math.is-unitless($value), 1em * $value, $value);\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-bottom-sheet-container {\n    @include private.private-theme-elevation(16, $config);\n    background: theming.get-color-from-palette($background, dialog);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-bottom-sheet-container {\n    @include typography-utils.typography-level($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-bottom-sheet') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$_ripple-opacity: 0.1;\n\n// Applies a focus style to an mat-button element for each of the supported palettes.\n@mixin _focus-overlay-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($primary);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($accent);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($warn);\n  }\n\n  &.mat-button-disabled .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n// Applies the background color for a ripple. If the value provided is not a Sass color,\n// we assume that we've been given a CSS variable. Since we can't perform alpha-blending\n// on a CSS variable, we instead add the opacity directly to the ripple element.\n@mixin _ripple-background($palette, $hue, $opacity) {\n  $background-color: theming.get-color-from-palette($palette, $hue, $opacity);\n  background-color: $background-color;\n  @if (meta.type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _ripple-color($theme, $hue, $opacity: $_ripple-opacity) {\n  $primary: map.get($theme, primary);\n  $accent: map.get($theme, accent);\n  $warn: map.get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    @include _ripple-background($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    @include _ripple-background($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    @include _ripple-background($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an mat-button element for each of the supported palettes.\n@mixin _theme-property($theme, $property, $hue) {\n  $primary: map.get($theme, primary);\n  $accent: map.get($theme, accent);\n  $warn: map.get($theme, warn);\n  $background: map.get($theme, background);\n  $foreground: map.get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: theming.get-color-from-palette($primary, $hue);\n  }\n  &.mat-accent {\n    #{$property}: theming.get-color-from-palette($accent, $hue);\n  }\n  &.mat-warn {\n    #{$property}: theming.get-color-from-palette($warn, $hue);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &.mat-button-disabled {\n    &.mat-button-disabled {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: theming.get-color-from-palette($palette, disabled-button);\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-button, .mat-icon-button, .mat-stroked-button {\n    // Buttons without a background color should inherit the font color. This is necessary to\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\n    // that those buttons are always placed inside of containers with the default background\n    // color of the theme (e.g. themed toolbars).\n    color: inherit;\n    background: transparent;\n\n    @include _theme-property($config, 'color', text);\n    @include _focus-overlay-color($config);\n\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\n    // are matching with the current theme palette and are in contrast to the background color\n    // (e.g in themed toolbars).\n    .mat-ripple-element {\n      opacity: $_ripple-opacity;\n      background-color: currentColor;\n    }\n  }\n\n  .mat-button-focus-overlay {\n    background: map.get($foreground, base);\n  }\n\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\n  // order of the theme styles and the button reset may end up resetting this as well.\n  .mat-stroked-button:not(.mat-button-disabled) {\n    border-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default font and background color when not using any color palette.\n    color: theming.get-color-from-palette($foreground, text);\n    background-color: theming.get-color-from-palette($background, raised-button);\n\n    @include _theme-property($config, 'color', default-contrast);\n    @include _theme-property($config, 'background-color', default);\n    @include _ripple-color($config, default-contrast);\n  }\n\n  .mat-stroked-button, .mat-flat-button {\n    @include private.private-theme-overridable-elevation(0, $config);\n  }\n\n  .mat-raised-button {\n    @include private.private-theme-overridable-elevation(2, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include private.private-theme-overridable-elevation(8, $config);\n    }\n\n    &.mat-button-disabled {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-fab, .mat-mini-fab {\n    @include private.private-theme-overridable-elevation(6, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include private.private-theme-overridable-elevation(12, $config);\n    }\n\n    &.mat-button-disabled {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\n    font: {\n      family: typography-utils.font-family($config, button);\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './button-toggle-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $divider-color: theming.get-color-from-palette($foreground, divider);\n  $theme-divider-color: map.get($foreground, divider);\n\n  // By default the theme usually has an rgba color for the dividers, which can\n  // stack up with the background of a button toggle. This can cause the border\n  // of a selected toggle to look different from an deselected one. We use a solid\n  // color to ensure that the border always stays the same.\n  $divider-color: if(type-of($theme-divider-color) == color,\n    theming.private-rgba-to-hex($theme-divider-color, map.get($background, card)),\n    $theme-divider-color\n  );\n\n  .mat-button-toggle-standalone,\n  .mat-button-toggle-group {\n    @include private.private-theme-overridable-elevation(2, $config);\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    &:not([class*='mat-elevation-z']) {\n      box-shadow: none;\n    }\n  }\n\n  .mat-button-toggle {\n    color: theming.get-color-from-palette($foreground, hint-text);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: theming.get-color-from-palette($background, focused-button);\n    }\n  }\n\n  .mat-button-toggle-appearance-standard {\n    color: theming.get-color-from-palette($foreground, text);\n    background: theming.get-color-from-palette($background, card);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: theming.get-color-from-palette($background, focused-button, 1);\n    }\n  }\n\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: solid 1px $divider-color;\n  }\n\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: none;\n    border-right: solid 1px $divider-color;\n  }\n\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\n    .mat-button-toggle + .mat-button-toggle {\n      border-left: none;\n      border-right: none;\n      border-top: solid 1px $divider-color;\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: theming.get-color-from-palette($background, selected-button);\n    color: theming.get-color-from-palette($foreground, secondary-text);\n\n    &.mat-button-toggle-appearance-standard {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n  }\n\n  .mat-button-toggle-disabled {\n    color: theming.get-color-from-palette($foreground, disabled-button);\n    background-color: theming.get-color-from-palette($background, disabled-button-toggle);\n\n    &.mat-button-toggle-appearance-standard {\n      background: theming.get-color-from-palette($background, card);\n    }\n\n    &.mat-button-toggle-checked {\n      background-color: theming.get-color-from-palette($background, selected-disabled-button);\n    }\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    border: solid 1px $divider-color;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-button-toggle {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $standard-height: compatibility.private-density-prop-value(\n      button-toggle-variables.$standard-density-config, $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n      line-height: $standard-height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button-toggle') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-card {\n    @include private.private-theme-overridable-elevation(1, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    // Needs extra specificity to be able to override the elevation selectors.\n    &.mat-card-flat {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-card-subtitle {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-card {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-card-title {\n    font: {\n      size: typography-utils.font-size($config, headline);\n      weight: typography-utils.font-weight($config, title);\n    }\n  }\n\n  .mat-card-header .mat-card-title {\n    font-size: typography-utils.font-size($config, title);\n  }\n\n  .mat-card-subtitle,\n  .mat-card-content {\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-card') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: theming.get-color-from-palette($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an\n    // attribute on the SVG in order for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked,\n    &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n\n    .mat-checkbox-label {\n      color: theming.get-color-from-palette($foreground, disabled);\n    }\n  }\n\n  // Switch this to a solid color since we're using `opacity`\n  // to control how opaque the ripple should be.\n  .mat-checkbox .mat-ripple-element {\n    background-color: map.get(map.get($config, foreground), base);\n  }\n\n  .mat-checkbox-checked:not(.mat-checkbox-disabled),\n  .mat-checkbox:active:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-ripple-element {\n      background: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent .mat-ripple-element {\n      background: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn .mat-ripple-element {\n      background: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-checkbox {\n    font-family: typography-utils.font-family($config);\n  }\n\n  // TODO(kara): Remove this style when fixing vertical baseline\n  .mat-checkbox-layout .mat-checkbox-label {\n    line-height: typography-utils.line-height($config, body-2);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$chip-remove-font-size: 18px;\n\n@mixin _element-color($foreground, $background) {\n  background-color: $background;\n  color: $foreground;\n\n  .mat-chip-remove {\n    color: $foreground;\n    opacity: 0.4;\n  }\n}\n\n\n// Applies the background color for a ripple element.\n// If the color value provided is not a Sass color,\n// we assume that we've been given a CSS variable.\n// Since we can't perform alpha-blending on a CSS variable,\n// we instead add the opacity directly to the ripple element.\n@mixin _ripple-background($palette, $default-contrast, $opacity) {\n  $background-color: theming.get-color-from-palette($palette, $default-contrast, $opacity);\n  background-color: $background-color;\n  @if (meta.type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _palette-styles($palette) {\n  @include _element-color(theming.get-color-from-palette($palette, default-contrast),\n    theming.get-color-from-palette($palette));\n\n  .mat-ripple-element {\n    @include _ripple-background($palette, default-contrast, 0.1);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $unselected-background: theming.get-color-from-palette($background, unselected-chip);\n  $unselected-foreground: theming.get-color-from-palette($foreground, text);\n\n  .mat-chip.mat-standard-chip {\n    @include _element-color($unselected-foreground, $unselected-background);\n\n    &:not(.mat-chip-disabled) {\n      &:active {\n        @include private.private-theme-elevation(3, $config);\n      }\n\n      .mat-chip-remove:hover {\n        opacity: 0.54;\n      }\n    }\n\n    &.mat-chip-disabled {\n      opacity: 0.4;\n    }\n\n    &::after {\n      background: map.get($foreground, base);\n    }\n  }\n\n  .mat-chip.mat-standard-chip.mat-chip-selected {\n    &.mat-primary {\n      @include _palette-styles($primary);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($warn);\n    }\n\n    &.mat-accent {\n      @include _palette-styles($accent);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-chip {\n    font-size: typography-utils.font-size($config, body-2);\n    font-weight: typography-utils.font-weight($config, body-2);\n\n    .mat-chip-trailing-icon.mat-icon,\n    .mat-chip-remove.mat-icon {\n      font-size: $chip-remove-font-size;\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-chips') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-table {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\n  mat-header-row, mat-row, mat-footer-row,\n  [mat-header-row], [mat-row], [mat-footer-row],\n  .mat-table-sticky {\n    background: inherit;\n  }\n\n  mat-row, mat-header-row, mat-footer-row,\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n    border-bottom-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-header-cell {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-table {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-header-cell {\n    font-size: typography-utils.font-size($config, caption);\n    font-weight: typography-utils.font-weight($config, body-2);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-table') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n$selected-today-box-shadow-width: 1px;\n$selected-fade-amount: 0.6;\n$range-fade-amount: 0.2;\n$today-fade-amount: 0.2;\n$calendar-body-font-size: 13px !default;\n$calendar-weekday-table-font-size: 11px !default;\n\n@mixin _color($palette) {\n  @include date-range-colors(\n    theming.get-color-from-palette($palette, default, $range-fade-amount));\n\n  .mat-calendar-body-selected {\n    background-color: theming.get-color-from-palette($palette);\n    color: theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    $background: theming.get-color-from-palette($palette);\n\n    @if (meta.type-of($background) == color) {\n      background-color: color.adjust($background, $alpha: -$selected-fade-amount);\n    }\n    @else {\n      // If we couldn't resolve to background to a color (e.g. it's a CSS variable),\n      // fall back to fading the content out via `opacity`.\n      opacity: $today-fade-amount;\n    }\n  }\n\n  .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 $selected-today-box-shadow-width\n                theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .cdk-keyboard-focused .mat-calendar-body-active,\n  .cdk-program-focused .mat-calendar-body-active {\n    @include _highlighted-cell($palette);\n  }\n\n  @media (hover: hover) {\n    .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover {\n      @include _highlighted-cell($palette);\n    }\n  }\n}\n\n// Utility mixin to target cells that aren't selected. Used to make selector easier to follow.\n@mixin _unselected-cell {\n  &:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    @content;\n  }\n}\n\n// Styles for a highlighted calendar cell (e.g. hovered or focused).\n@mixin _highlighted-cell($palette) {\n  & > .mat-calendar-body-cell-content {\n    @include _unselected-cell {\n      background-color: theming.get-color-from-palette($palette, 0.3);\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n\n  .mat-calendar-arrow {\n    fill: theming.get-color-from-palette($foreground, icon);\n  }\n\n  // The prev/next buttons need a bit more specificity to\n  // avoid being overwritten by the .mat-icon-button.\n  .mat-datepicker-toggle,\n  .mat-datepicker-content .mat-calendar-next-button,\n  .mat-datepicker-content .mat-calendar-previous-button {\n    color: theming.get-color-from-palette($foreground, icon);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-calendar-table-header,\n  .mat-calendar-body-label {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content,\n  .mat-date-range-input-separator {\n    color: theming.get-color-from-palette($foreground, text);\n    border-color: transparent;\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content {\n    @include _unselected-cell {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-form-field-disabled .mat-date-range-input-separator {\n    color: $disabled-color;\n  }\n\n  .mat-calendar-body-in-preview {\n    $divider-color: theming.get-color-from-palette($foreground, divider);\n\n    @if meta.type-of($divider-color) == color {\n      // The divider color is set under the assumption that it'll be used\n      // for a solid border, but because we're using a dashed border for the\n      // preview range, we need to bump its opacity to ensure that it's visible.\n      color: rgba($divider-color, math.min(opacity($divider-color) * 2, 1));\n    }\n    @else {\n      color: $divider-color;\n    }\n  }\n\n  .mat-calendar-body-today {\n    @include _unselected-cell {\n      // Note: though it's not text, the border is a hint about the fact that this is today's date,\n      // so we use the hint color.\n      border-color: theming.get-color-from-palette($foreground, hint-text);\n    }\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today {\n    @include _unselected-cell {\n      $color: theming.get-color-from-palette($foreground, hint-text);\n\n      @if (meta.type-of($color) == color) {\n        border-color: color.adjust($color, $alpha: -$today-fade-amount);\n      }\n      @else {\n        // If the color didn't resolve to a color value, but something like a CSS variable, we can't\n        // fade it out so we fall back to reducing the element opacity. Note that we don't use the\n        // $mat-datepicker-today-fade-amount, because hint text usually has some opacity applied\n        // to it already and we don't want them to stack on top of each other.\n        opacity: 0.5;\n      }\n    }\n  }\n\n  @include _color(map.get($config, primary));\n\n  .mat-datepicker-content {\n    @include private.private-theme-elevation(4, $config);\n    background-color: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-accent {\n      @include _color(map.get($config, accent));\n    }\n\n    &.mat-warn {\n      @include _color(map.get($config, warn));\n    }\n  }\n\n  .mat-datepicker-content-touch {\n    @include private.private-theme-elevation(24, $config);\n  }\n\n  .mat-datepicker-toggle-active {\n    color: theming.get-color-from-palette(map.get($config, primary), text);\n\n    &.mat-accent {\n      color: theming.get-color-from-palette(map.get($config, accent), text);\n    }\n\n    &.mat-warn {\n      color: theming.get-color-from-palette(map.get($config, warn), text);\n    }\n  }\n\n  .mat-date-range-input-inner[disabled] {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-calendar {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $calendar-weekday-table-font-size;\n      weight: typography-utils.font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin date-range-colors(\n  $range-color,\n  $comparison-color: rgba(#f9ab00, $range-fade-amount),\n  $overlap-color: #a8dab5,\n  $overlap-selected-color: color.adjust($overlap-color, $lightness: -30%)) {\n\n  .mat-calendar-body-in-range::before {\n    background: $range-color;\n  }\n\n  .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range::before {\n    background: $comparison-color;\n  }\n\n  .mat-calendar-body-comparison-bridge-start::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-end::before {\n    background: linear-gradient(to right, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-comparison-bridge-end::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-start::before {\n    background: linear-gradient(to left, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n    background: $overlap-color;\n  }\n\n  .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n  .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n    background: $overlap-selected-color;\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-datepicker') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-dialog-container {\n    @include private.private-theme-elevation(24, $config);\n    background: theming.get-color-from-palette($background, dialog);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-dialog-title {\n    @include typography-utils.typography-level($config, title);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-dialog') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './expansion-variables';\n@use './expansion-mixins';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-expansion-panel {\n    @include private.private-theme-overridable-elevation(2, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-action-row {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  @include expansion-mixins.private-expansion-focus {\n    background: theming.get-color-from-palette($background, hover);\n  }\n\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\n  // `@media (hover)` above, because the desktop support browser support isn't great.\n  @media (hover: none) {\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n      .mat-expansion-panel-header:hover {\n      background: theming.get-color-from-palette($background, card);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description,\n  .mat-expansion-indicator::after {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-expansion-panel-header[aria-disabled='true'] {\n    color: theming.get-color-from-palette($foreground, disabled-button);\n\n    .mat-expansion-panel-header-title,\n    .mat-expansion-panel-header-description {\n      color: inherit;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-expansion-panel-header {\n    font: {\n      family: typography-utils.font-family($config, subheading-1);\n      size: typography-utils.font-size($config, subheading-1);\n      weight: typography-utils.font-weight($config, subheading-1);\n    }\n  }\n\n  .mat-expansion-panel-content {\n    @include typography-utils.typography-level($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $expanded-height: compatibility.private-density-prop-value(\n        expansion-variables.$header-density-config, $density-scale, expanded-height);\n  $collapsed-height: compatibility.private-density-prop-value(\n      expansion-variables.$header-density-config, $density-scale, collapsed-height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-expansion-panel-header {\n      height: $collapsed-height;\n\n      &.mat-expanded {\n        height: $expanded-height;\n      }\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-expansion') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@use './form-field-fill-theme.scss';\n@use './form-field-legacy-theme.scss';\n@use './form-field-outline-theme.scss';\n@use './form-field-standard-theme.scss';\n\n// Color styles that apply to all appearances of the form-field.\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  // Label colors. Required is used for the `*` star shown in the label.\n  $label-color:\n    theming.get-color-from-palette($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\n  $focused-label-color: theming.get-color-from-palette($primary, text);\n  $required-label-color: theming.get-color-from-palette($accent, text);\n\n  // Underline colors.\n  $underline-color-base:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $underline-color-accent: theming.get-color-from-palette($accent, text);\n  $underline-color-warn: theming.get-color-from-palette($warn, text);\n  $underline-focused-color: theming.get-color-from-palette($primary, text);\n\n  .mat-form-field-label {\n    color: $label-color;\n  }\n\n  .mat-hint {\n    color: $label-color;\n  }\n\n  .mat-form-field.mat-focused .mat-form-field-label {\n    color: $focused-label-color;\n\n    &.mat-accent {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $underline-color-warn;\n    }\n  }\n\n  .mat-focused .mat-form-field-required-marker {\n    color: $required-label-color;\n  }\n\n  .mat-form-field-ripple {\n    background-color: $underline-color-base;\n  }\n\n  .mat-form-field.mat-focused {\n    .mat-form-field-ripple {\n      background-color: $underline-focused-color;\n\n      &.mat-accent {\n        background-color: $underline-color-accent;\n      }\n\n      &.mat-warn {\n        background-color: $underline-color-warn;\n      }\n    }\n  }\n\n  .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) {\n    .mat-form-field-infix::after {\n      color: $underline-focused-color;\n    }\n\n    &.mat-accent .mat-form-field-infix::after {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn .mat-form-field-infix::after {\n      color: $underline-color-warn;\n    }\n  }\n\n  // Styling for the error state of the form field. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-form-field.mat-form-field-invalid {\n    .mat-form-field-label {\n      color: $underline-color-warn;\n\n      &.mat-accent,\n      .mat-form-field-required-marker {\n        color: $underline-color-warn;\n      }\n    }\n\n    .mat-form-field-ripple,\n    .mat-form-field-ripple.mat-accent {\n      background-color: $underline-color-warn;\n    }\n  }\n\n  .mat-error {\n    color: $underline-color-warn;\n  }\n\n  @include form-field-legacy-theme.legacy-color($config);\n  @include form-field-standard-theme.standard-color($config);\n  @include form-field-fill-theme.fill-color($config);\n  @include form-field-outline-theme.outline-color($config);\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $dedupe)\n             scale($font-scale);\n  width: math.div(100%, $font-scale) + $dedupe;\n\n  $dedupe: $dedupe + 0.00001 !global;\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount to scale the font for the prefix and suffix icons.\n  $prefix-suffix-icon-font-scale: 1.5;\n\n  // The padding on the infix. Mocks show half of the text size.\n  $infix-padding: 0.5em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  // If the line-height is given as a unitless number, coerce it to `em`.\n  $infix-margin-top: $subscript-font-scale *\n      typography-utils.private-coerce-unitless-to-em($line-height);\n  // Font size to use for the label and subscript text.\n  $subscript-font-size: $subscript-font-scale * 100%;\n  // Font size to use for the for the prefix and suffix icons.\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: math.div(0.5em, $subscript-font-scale);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field {\n    @include typography-utils.typography-level($config, input);\n  }\n\n  .mat-form-field-wrapper {\n    padding-bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    // Allow icons in a prefix or suffix to adapt to the correct size.\n    .mat-icon {\n      font-size: $prefix-suffix-icon-font-size;\n      line-height: $line-height;\n    }\n\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\n    .mat-icon-button {\n      height: $prefix-suffix-icon-font-scale * 1em;\n      width: $prefix-suffix-icon-font-scale * 1em;\n\n      .mat-icon {\n        height: typography-utils.private-coerce-unitless-to-em($line-height);\n        line-height: $line-height;\n      }\n    }\n  }\n\n  .mat-form-field-infix {\n    padding: $infix-padding 0;\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\n    border-top: $infix-margin-top solid transparent;\n  }\n\n  .mat-form-field-can-float {\n    &.mat-form-field-should-float .mat-form-field-label,\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n\n    // Server-side rendered matInput with a label attribute but label not shown\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\n    .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n      @include _label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-form-field-label-wrapper {\n    top: -$infix-margin-top;\n    padding-top: $infix-margin-top;\n  }\n\n  .mat-form-field-label {\n    top: $infix-margin-top + $infix-padding;\n  }\n\n  .mat-form-field-underline {\n    // We want the underline to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount.\n    bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-subscript-wrapper {\n    font-size: $subscript-font-size;\n    margin-top: $subscript-margin-top;\n\n    // We want the subscript to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount (adjusted for the smaller font size);\n    top: calc(100% - #{math.div($wrapper-padding-bottom, $subscript-font-scale)});\n  }\n\n  @include form-field-legacy-theme.legacy-typography($config);\n  @include form-field-standard-theme.standard-typography($config);\n  @include form-field-fill-theme.fill-typography($config);\n  @include form-field-outline-theme.outline-typography($config);\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  @include form-field-legacy-theme.private-form-field-legacy-density($density-scale);\n  @include form-field-standard-theme.private-form-field-standard-density($density-scale);\n  @include form-field-fill-theme.private-form-field-fill-density($density-scale);\n  @include form-field-outline-theme.private-form-field-outline-density($density-scale);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the legacy appearance of the form-field.\n\n@mixin legacy-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $label-color: theming.get-color-from-palette($foreground, secondary-text);\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-label {\n      color: $label-color;\n    }\n\n    .mat-hint {\n      color: $label-color;\n    }\n\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include form-common.private-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$legacy-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  // We use perspective to fix the text blurriness as described here:\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\n  translateZ(0.001px + $legacy-dedupe);\n  width: math.div(100%, $font-scale) + $legacy-dedupe;\n\n  $legacy-dedupe: $legacy-dedupe + 0.00001 !global;\n}\n\n// Same as mixin above, but omits the translateZ for printing purposes.\n@mixin _label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding + $legacy-dedupe)\n                  scale($font-scale);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  $legacy-dedupe: $legacy-dedupe + 0.00001 !global;\n}\n\n@mixin legacy-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: math.div($line-height - 1, 2);\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\n  $infix-padding: 0.5em - $line-spacing;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  // If the line-height is given as a unitless number, coerce it to `em`.\n  $infix-margin-top:\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\n  // text, not the  edge of the line.\n  $subscript-margin-top: math.div(0.5em, $subscript-font-scale) - ($line-spacing * 2);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-wrapper {\n      padding-bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-infix {\n      padding: $infix-padding 0;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n    }\n\n    .mat-form-field-underline {\n      // We want the underline to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount.\n      bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-subscript-wrapper {\n      margin-top: $subscript-margin-top;\n\n      // We want the subscript to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount (adjusted for the smaller font size);\n      top: calc(100% - #{math.div($wrapper-padding-bottom, $subscript-font-scale)});\n    }\n  }\n\n  // translateZ causes the label to not appear while printing, so we override it to not\n  // apply translateZ while printing\n  @media print {\n    .mat-form-field-appearance-legacy {\n      &.mat-form-field-can-float {\n        &.mat-form-field-should-float .mat-form-field-label,\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // Server-side rendered matInput with a label attribute but label not shown\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\n        .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n      }\n    }\n  }\n}\n\n@mixin private-form-field-legacy-density($config-or-theme) {}\n\n@mixin legacy-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-legacy') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include legacy-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-legacy-density($density);\n    }\n    @if $typography != null {\n      @include legacy-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the fill appearance of the form-field.\n\n@mixin fill-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $fill-background:\n    theming.get-color-from-palette($foreground, base, if($is-dark-theme, 0.1, 0.04));\n  $fill-disabled-background:\n    theming.get-color-from-palette($foreground, base, if($is-dark-theme, 0.05, 0.02));\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.5, 0.42));\n  $label-disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-flex {\n      background-color: $fill-background;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-flex {\n      background-color: $fill-disabled-background;\n    }\n\n    .mat-form-field-underline::before {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-underline::before {\n        background-color: transparent;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$fill-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $fill-dedupe)\n             scale($font-scale);\n  width: math.div(100%, $font-scale) + $fill-dedupe;\n\n  $fill-dedupe: $fill-dedupe + 0.00001 !global;\n}\n\n@mixin fill-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding on top of the infix.\n  $infix-padding-top: 0.25em;\n  // The padding below the infix.\n  $infix-padding-bottom: 0.75em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top:\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\n  // The amount we offset the label from the input text in the fill appearance.\n  $fill-appearance-label-offset: -0.5em;\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-infix {\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding-top;\n      margin-top: $fill-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n@mixin private-form-field-fill-density($config-or-theme) {}\n\n@mixin fill-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-fill') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include fill-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-fill-density($density);\n    }\n    @if $typography != null {\n      @include fill-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the outline appearance of the form-field.\n\n@mixin outline-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $label-disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n  $outline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.3, 0.12));\n  $outline-color-hover:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $outline-color-primary: theming.get-color-from-palette($primary);\n  $outline-color-accent: theming.get-color-from-palette($accent);\n  $outline-color-warn: theming.get-color-from-palette($warn);\n  $outline-color-disabled:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.15, 0.06));\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-outline {\n      color: $outline-color;\n    }\n\n    .mat-form-field-outline-thick {\n      color: $outline-color-hover;\n    }\n\n    &.mat-focused {\n      .mat-form-field-outline-thick {\n        color: $outline-color-primary;\n      }\n\n      &.mat-accent .mat-form-field-outline-thick {\n        color: $outline-color-accent;\n      }\n\n      &.mat-warn .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    // Class repeated so that rule is specific enough to override focused accent color case.\n    &.mat-form-field-invalid.mat-form-field-invalid {\n      .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-outline {\n        color: $outline-color-disabled;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$outline-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $outline-dedupe)\n  scale($font-scale);\n  width: math.div(100%, $font-scale) + $outline-dedupe;\n\n  $outline-dedupe: $outline-dedupe + 0.00001 !global;\n}\n\n@mixin outline-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding above and below the infix.\n  $infix-padding: 1em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top:\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: math.div(0.5em, $subscript-font-scale);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n  // The amount we offset the label from the input text in the outline appearance.\n  $outline-appearance-label-offset: -0.25em;\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-infix {\n      padding: $infix-padding 0 $infix-padding 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n      margin-top: $outline-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n@mixin private-form-field-outline-density($config-or-theme) {}\n\n@mixin outline-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-outline') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include outline-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-outline-density($density);\n    }\n    @if $typography != null {\n      @include outline-typography($typography);\n    }\n  }\n}\n\n","@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/list-common';\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin color($config-or-theme) {}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include list-common.base(typography-utils.font-size($config, caption));\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-grid-list') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin base($secondary-font-size) {\n  .mat-line {\n    @include truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin wrapper-base() {\n  @include normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  flex: auto;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/palette';\n@use '../core/theming/theming';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/vendor-prefixes';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $foreground: map.get($config, foreground);\n\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-input-element:disabled,\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  .mat-input-element {\n    caret-color: theming.get-color-from-palette($primary, text);\n\n    @include vendor-prefixes.input-placeholder {\n      color: form-common.private-control-placeholder-color($config);\n    }\n\n    // On dark themes we set the native `select` color to some shade of white,\n    // however the color propagates to all of the `option` elements, which are\n    // always on a white background inside the dropdown, causing them to blend in.\n    // Since we can't change background of the dropdown, we need to explicitly\n    // reset the color of the options to something dark.\n    @if (map.get($config, is-dark)) {\n      &:not(.mat-native-select-inline) {\n        option {\n          color: palette.$dark-primary-text;\n        }\n\n        option:disabled {\n          color: palette.$dark-disabled-text;\n        }\n      }\n    }\n  }\n\n  .mat-form-field.mat-accent .mat-input-element {\n    caret-color: theming.get-color-from-palette($accent, text);\n  }\n\n  .mat-form-field.mat-warn .mat-input-element,\n  .mat-form-field-invalid .mat-input-element {\n    caret-color: theming.get-color-from-palette($warn, text);\n  }\n\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($warn, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: math.div($line-height - 1, 2);\n\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\n  input.mat-input-element {\n    margin-top: typography-utils.private-coerce-unitless-to-em(-$line-spacing);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-input') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-menu-panel {\n    @include private.private-theme-overridable-elevation(4, $config);\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: theming.get-color-from-palette($foreground, 'text');\n\n    &[disabled] {\n      &,\n      .mat-menu-submenu-icon,\n      .mat-icon-no-color {\n        color: theming.get-color-from-palette($foreground, 'disabled');\n      }\n    }\n  }\n\n  .mat-menu-item .mat-icon-no-color,\n  .mat-menu-submenu-icon {\n    color: theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-menu-item:hover,\n  .mat-menu-item.cdk-program-focused,\n  .mat-menu-item.cdk-keyboard-focused,\n  .mat-menu-item-highlighted {\n    &:not([disabled]) {\n      background: theming.get-color-from-palette($background, 'hover');\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-menu-item {\n    font: {\n      family: typography-utils.font-family($config, body-1);\n      size: typography-utils.font-size($config, body-1);\n      weight: typography-utils.font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-menu') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './paginator-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n\n  .mat-paginator {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-paginator-decrement,\n  .mat-paginator-increment {\n    border-top: 2px solid theming.get-color-from-palette($foreground, 'icon');\n    border-right: 2px solid theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-paginator-first,\n  .mat-paginator-last {\n    border-top: 2px solid theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-icon-button[disabled] {\n    .mat-paginator-decrement,\n    .mat-paginator-increment,\n    .mat-paginator-first,\n    .mat-paginator-last {\n      border-color: theming.get-color-from-palette($foreground, 'disabled');\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    font: {\n      family: typography-utils.font-family($config, caption);\n      size: typography-utils.font-size($config, caption);\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(paginator-variables.$density-config,\n    $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-paginator-container {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-paginator') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _color($palette) {\n  &.mat-radio-checked .mat-radio-outer-circle {\n    border-color: theming.get-color-from-palette($palette);\n  }\n\n  .mat-radio-inner-circle,\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n  &.mat-radio-checked .mat-radio-persistent-ripple,\n  &:active .mat-radio-persistent-ripple {\n    background-color: theming.get-color-from-palette($palette);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-radio-button {\n    &.mat-primary {\n      @include _color($primary);\n    }\n\n    &.mat-accent {\n      @include _color($accent);\n    }\n\n    &.mat-warn {\n      @include _color($warn);\n    }\n\n    // This needs extra specificity, because the classes above are combined\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\n    &.mat-radio-disabled {\n      &.mat-radio-checked .mat-radio-outer-circle,\n      .mat-radio-outer-circle {\n        border-color: theming.get-color-from-palette($foreground, disabled);\n      }\n\n      .mat-radio-ripple .mat-ripple-element,\n      .mat-radio-inner-circle {\n        background-color: theming.get-color-from-palette($foreground, disabled);\n      }\n\n      .mat-radio-label-content {\n        color: theming.get-color-from-palette($foreground, disabled);\n      }\n    }\n\n    // Switch this to a solid color since we're using `opacity`\n    // to control how opaque the ripple should be.\n    .mat-ripple-element {\n      background-color: map.get($foreground, base);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-radio-button {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-radio') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-select-value {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-select-placeholder {\n    color: form-common.private-control-placeholder-color($config);\n  }\n\n  .mat-select-disabled .mat-select-value {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  .mat-select-arrow {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-select-panel {\n    background: theming.get-color-from-palette($background, card);\n    @include private.private-theme-overridable-elevation(4, $config);\n\n    .mat-option.mat-selected:not(.mat-option-multiple) {\n      background: theming.get-color-from-palette($background, hover, 0.12);\n    }\n  }\n\n  .mat-form-field {\n    &.mat-focused {\n      &.mat-primary .mat-select-arrow {\n        color: theming.get-color-from-palette($primary, text);\n      }\n\n      &.mat-accent .mat-select-arrow {\n        color: theming.get-color-from-palette($accent, text);\n      }\n\n      &.mat-warn .mat-select-arrow {\n        color: theming.get-color-from-palette($warn, text);\n      }\n    }\n\n    .mat-select.mat-select-invalid .mat-select-arrow {\n      color: theming.get-color-from-palette($warn, text);\n    }\n\n    .mat-select.mat-select-disabled .mat-select-arrow {\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  .mat-select {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-select-trigger {\n    height: typography-utils.private-coerce-unitless-to-em($line-height);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-select') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/palette';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _checked-color($palette, $thumb-checked-hue) {\n  &.mat-checked {\n    .mat-slide-toggle-thumb {\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      // Opacity is determined from the specs for the selection controls.\n      // See: https://material.io/design/components/selection-controls.html#specs\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue, 0.54);\n    }\n\n    .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue);\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\n  // information for dark themed switches, we partially keep the old behavior that is based on\n  // the previous specifications. For the checked color we always use the `default` hue because\n  // that follows MDC and also makes it easier for people to create a custom theme without needing\n  // to specify each hue individually.\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: default;\n\n  $bar-unchecked-color: theming.get-color-from-palette($foreground, disabled);\n  $ripple-unchecked-color: theming.get-color-from-palette($foreground, base);\n\n  .mat-slide-toggle {\n    @include _checked-color($accent, $thumb-checked-hue);\n\n    &.mat-primary {\n      @include _checked-color($primary, $thumb-checked-hue);\n    }\n\n    &.mat-warn {\n      @include _checked-color($warn, $thumb-checked-hue);\n    }\n\n    &:not(.mat-checked) .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: $ripple-unchecked-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    @include private.private-theme-elevation(1, $config);\n    background-color: theming.get-color-from-palette(palette.$grey-palette, $thumb-unchecked-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-unchecked-color;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-slide-toggle-content {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slide-toggle') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: theming.get-color-from-palette($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .mat-slider-focus-ring {\n    $opacity: 0.2;\n    $color: theming.get-color-from-palette($palette, default, $opacity);\n    background-color: $color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($color) != color) {\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $mat-slider-off-color: theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-off-focused-color: theming.get-color-from-palette($foreground, slider-off-active);\n  $mat-slider-disabled-color: theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-labeled-min-value-thumb-color:\n    theming.get-color-from-palette($foreground, slider-min);\n  $mat-slider-labeled-min-value-thumb-label-color:\n    theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-tick-opacity: 0.7;\n  $mat-slider-tick-color:\n    theming.get-color-from-palette($foreground, base, $mat-slider-tick-opacity);\n  $mat-slider-tick-size: 2px;\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-slider {\n    &.mat-primary {\n      @include _inner-content-theme($primary);\n    }\n\n    &.mat-accent {\n      @include _inner-content-theme($accent);\n    }\n\n    &.mat-warn {\n      @include _inner-content-theme($warn);\n    }\n  }\n\n  .mat-slider:hover,\n  .mat-slider.cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider.mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider.mat-slider-min-value {\n    .mat-slider-focus-ring {\n      $opacity: 0.12;\n      $color: theming.get-color-from-palette($foreground, base, $opacity);\n      background-color: $color;\n\n      // `mat-color` uses `rgba` for the opacity which won't work with\n      // CSS variables so we need to use `opacity` as a fallback.\n      @if (meta.type-of($color) != color) {\n        opacity: $opacity;\n      }\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\n    border-color: $mat-slider-tick-color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-horizontal .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n    // Firefox doesn't draw the gradient correctly with 'to right'\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-vertical .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-slider-thumb-label-text {\n    font: {\n      family: typography-utils.font-family($config);\n      size: typography-utils.font-size($config, caption);\n      weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slider') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './stepper-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-step-header {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused,\n    &:hover:not([aria-disabled]),\n    &:hover[aria-disabled='false'] {\n      background-color: theming.get-color-from-palette($background, hover);\n    }\n\n    &:hover[aria-disabled='true'] {\n      cursor: default;\n    }\n\n    // On touch devices the :hover state will linger on the element after a tap.\n    // Reset it via `@media` after the declaration, because the media query isn't\n    // supported by all browsers yet.\n    @media (hover: none) {\n      &:hover {\n        background: none;\n      }\n    }\n\n    .mat-step-label,\n    .mat-step-optional {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      color: theming.get-color-from-palette($foreground, secondary-text);\n    }\n\n    .mat-step-icon {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      background-color: theming.get-color-from-palette($foreground, secondary-text);\n      color: theming.get-color-from-palette($primary, default-contrast);\n    }\n\n    .mat-step-icon-selected,\n    .mat-step-icon-state-done,\n    .mat-step-icon-state-edit {\n      background-color: theming.get-color-from-palette($primary);\n      color: theming.get-color-from-palette($primary, default-contrast);\n    }\n\n    &.mat-accent {\n      .mat-step-icon {\n        color: theming.get-color-from-palette($accent, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: theming.get-color-from-palette($accent);\n        color: theming.get-color-from-palette($accent, default-contrast);\n      }\n    }\n\n    &.mat-warn {\n      .mat-step-icon {\n        color: theming.get-color-from-palette($warn, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: theming.get-color-from-palette($warn);\n        color: theming.get-color-from-palette($warn, default-contrast);\n      }\n    }\n\n    .mat-step-icon-state-error {\n      background-color: transparent;\n      color: theming.get-color-from-palette($warn, text);\n    }\n\n    .mat-step-label.mat-step-label-active {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-step-label.mat-step-label-error {\n      color: theming.get-color-from-palette($warn, text);\n    }\n  }\n\n  .mat-stepper-horizontal, .mat-stepper-vertical {\n    background-color: theming.get-color-from-palette($background, card);\n  }\n\n  .mat-stepper-vertical-line::before {\n    border-left-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-horizontal-stepper-header::before,\n  .mat-horizontal-stepper-header::after,\n  .mat-stepper-horizontal-line {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-stepper-vertical, .mat-stepper-horizontal {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-step-label {\n    font: {\n      size: typography-utils.font-size($config, body-1);\n      weight: typography-utils.font-weight($config, body-1);\n    };\n  }\n\n  .mat-step-sub-label-error {\n    font-weight: normal;\n  }\n\n  .mat-step-label-error {\n    font-size: typography-utils.font-size($config, body-2);\n  }\n\n  .mat-step-label-selected {\n    font: {\n      size: typography-utils.font-size($config, body-2);\n      weight: typography-utils.font-weight($config, body-2);\n    };\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(stepper-variables.$density-config,\n    $density-scale, height);\n  $vertical-padding: math.div($height - stepper-variables.$label-header-height, 2);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-horizontal-stepper-header {\n      height: $height;\n    }\n\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n    .mat-vertical-stepper-header {\n      padding: $vertical-padding stepper-variables.$side-gap;\n    }\n\n    // Ensures that the vertical lines for the step content exceed into the step\n    // headers with a given distance (`$mat-stepper-line-gap`) to the step icon.\n    .mat-stepper-vertical-line::before {\n      top: stepper-variables.$line-gap - $vertical-padding;\n      bottom: stepper-variables.$line-gap - $vertical-padding;\n    }\n\n    // Ensures that the horizontal lines for the step header are centered vertically.\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header {\n      &::after, &::before {\n        top: $vertical-padding + math.div(stepper-variables.$label-header-height, 2);\n      }\n    }\n\n    // Ensures that the horizontal line for the step content is aligned centered vertically.\n    .mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n      top: $vertical-padding + math.div(stepper-variables.$label-header-height, 2);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-stepper') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n  $header-border: 1px solid theming.get-color-from-palette($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-tab-disabled {\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n\n  .mat-tab-header-pagination-chevron {\n    border-color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  // Remove header border when there is a background color\n  .mat-tab-group[class*='mat-background-'] > .mat-tab-header,\n  .mat-tab-nav-bar[class*='mat-background-'] {\n    border-bottom: none;\n    border-top: none;\n  }\n\n  .mat-tab-group, .mat-tab-nav-bar {\n    $theme-colors: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn\n    );\n\n    @each $name, $color in $theme-colors {\n      // Set the foreground color of the tabs\n      &.mat-#{$name} {\n        @include _label-focus-color($color);\n        @include _ink-bar-color($color);\n\n        // Override ink bar when background color is the same\n        &.mat-background-#{$name} {\n          > .mat-tab-header, > .mat-tab-link-container {\n            @include _ink-bar-color($color, default-contrast);\n          }\n        }\n      }\n    }\n\n    @each $name, $color in $theme-colors {\n      // Set background color of the tabs and override focus color\n      &.mat-background-#{$name} {\n        @include _label-focus-color($color);\n        @include _tabs-background($color);\n      }\n    }\n  }\n}\n\n@mixin _ink-bar-color($color, $hue: default) {\n  .mat-ink-bar {\n    background-color: theming.get-color-from-palette($color, $hue);\n  }\n}\n\n@mixin _label-focus-color($tab-focus-color) {\n  .mat-tab-label,\n  .mat-tab-link {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n      &:not(.mat-tab-disabled) {\n        background-color: theming.get-color-from-palette($tab-focus-color, lighter, 0.3);\n      }\n    }\n  }\n}\n\n@mixin _tabs-background($background-color) {\n  // Note that these selectors target direct descendants so\n  // that the styles don't apply to any nested tab groups.\n\n  // Set background color for the tab group\n  > .mat-tab-header, > .mat-tab-link-container, > .mat-tab-header-pagination {\n    background-color: theming.get-color-from-palette($background-color);\n  }\n\n  // Set labels to contrast against background\n  > .mat-tab-header .mat-tab-label, > .mat-tab-link-container .mat-tab-link {\n    color: theming.get-color-from-palette($background-color, default-contrast);\n\n    &.mat-tab-disabled {\n      color: theming.get-color-from-palette($background-color, default-contrast, 0.4);\n    }\n  }\n\n  // Set pagination chevrons to contrast background\n  > .mat-tab-header .mat-tab-header-pagination-chevron,\n  > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n  > .mat-tab-link-container .mat-focus-indicator::before,\n  > .mat-tab-header .mat-focus-indicator::before {\n    border-color: theming.get-color-from-palette($background-color, default-contrast);\n  }\n\n  > .mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,\n  > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    // Set the color opacity via `opacity`, rather than `rgba`, because it may be a CSS variable.\n    border-color: theming.get-color-from-palette($background-color, default-contrast, 1);\n    opacity: 0.4;\n  }\n\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\n  // color will be based on the app background color.\n  > .mat-tab-header .mat-ripple-element,\n  > .mat-tab-link-container .mat-ripple-element,\n  > .mat-tab-header-pagination .mat-ripple-element {\n    // Set the color opacity via `opacity`, rather than `rgba`, because it may be a CSS variable.\n    background-color: theming.get-color-from-palette($background-color, default-contrast, 1);\n    opacity: 0.12;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tab-group {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    font: {\n      family: typography-utils.font-family($config, button);\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tabs') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/style/variables';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './toolbar-variables';\n\n@mixin _height($height) {\n  .mat-toolbar-multiple-rows {\n    min-height: $height;\n  }\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: $height;\n  }\n}\n\n@mixin _palette-styles($palette) {\n  background: theming.get-color-from-palette($palette);\n  color: theming.get-color-from-palette($palette, default-contrast);\n}\n\n@mixin _form-field-overrides {\n  .mat-form-field-underline,\n  .mat-form-field-ripple,\n  .mat-focused .mat-form-field-ripple {\n    background-color: currentColor;\n  }\n\n  .mat-form-field-label,\n  .mat-focused .mat-form-field-label,\n  .mat-select-value,\n  .mat-select-arrow,\n  .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit;\n  }\n\n  .mat-input-element {\n    caret-color: currentColor;\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-toolbar {\n    background: theming.get-color-from-palette($background, app-bar);\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-primary {\n      @include _palette-styles($primary);\n    }\n\n    &.mat-accent {\n      @include _palette-styles($accent);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($warn);\n    }\n\n    @include _form-field-overrides;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include typography-utils.typography-level($config, title);\n    margin: 0;\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height-desktop: compatibility.private-density-prop-value(\n      toolbar-variables.$desktop-density-config, $density-scale, height);\n  $height-mobile: compatibility.private-density-prop-value(\n      toolbar-variables.$mobile-density-config, $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    // Set the default height for the toolbar.\n    @include _height($height-desktop);\n\n    // As per specs, toolbars should have a different height in mobile devices. This has been\n    // specified in the old guidelines and is still observable in the new specifications by\n    // looking at the spec images. See: https://material.io/design/components/app-bars-top.html#anatomy\n    @media (variables.$xsmall) {\n      @include _height($height-mobile);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-toolbar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$target-height: 22px;\n$font-size: 10px;\n$vertical-padding: math.div($target-height - $font-size, 2);\n\n$handset-target-height: 30px;\n$handset-font-size: 14px;\n$handset-vertical-padding: math.div($handset-target-height - $handset-font-size, 2);\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n\n  .mat-tooltip {\n    background: theming.get-color-from-palette($background, tooltip, 0.9);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tooltip {\n    font-family: typography-utils.font-family($config);\n    font-size: $font-size;\n    padding-top: $vertical-padding;\n    padding-bottom: $vertical-padding;\n  }\n\n  .mat-tooltip-handset {\n    font-size: $handset-font-size;\n    padding-top: $handset-vertical-padding;\n    padding-bottom: $handset-vertical-padding;\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tooltip') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/list-common';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-list-base {\n    .mat-list-item {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-list-option {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-subheader {\n      color: theming.get-color-from-palette($foreground, secondary-text);\n    }\n\n    .mat-list-item-disabled {\n      background-color: theming.get-color-from-palette($background, disabled-list-option);\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n\n  .mat-list-option,\n  .mat-nav-list .mat-list-item,\n  .mat-action-list .mat-list-item {\n    &:hover, &:focus {\n      background: theming.get-color-from-palette($background, 'hover');\n    }\n  }\n\n  .mat-list-single-selected-option {\n    &, &:hover, &:focus {\n      background: theming.get-color-from-palette($background, hover, 0.12);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  $font-family: typography-utils.font-family($config);\n\n  .mat-list-item {\n    font-family: $font-family;\n  }\n\n  .mat-list-option {\n    font-family: $font-family;\n  }\n\n  // Default list\n  .mat-list-base {\n    .mat-list-item {\n      font-size: typography-utils.font-size($config, subheading-2);\n      @include list-common.base(typography-utils.font-size($config, body-1));\n    }\n\n    .mat-list-option {\n      font-size: typography-utils.font-size($config, subheading-2);\n      @include list-common.base(typography-utils.font-size($config, body-1));\n    }\n\n    .mat-subheader {\n      font-family: typography-utils.font-family($config, body-2);\n      font-size: typography-utils.font-size($config, body-2);\n      font-weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n\n  // Dense list\n  .mat-list-base[dense] {\n    .mat-list-item {\n      font-size: typography-utils.font-size($config, caption);\n      @include list-common.base(typography-utils.font-size($config, caption));\n    }\n\n    .mat-list-option {\n      font-size: typography-utils.font-size($config, caption);\n      @include list-common.base(typography-utils.font-size($config, caption));\n    }\n\n    .mat-subheader {\n      font-family: $font-family;\n      font-size: typography-utils.font-size($config, caption);\n      font-weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-list') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../theming/theming';\n@use '../typography/typography';\n@use '../typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-option {\n    color: theming.get-color-from-palette($foreground, text);\n\n    &:hover:not(.mat-option-disabled),\n    &:focus:not(.mat-option-disabled) {\n      background: theming.get-color-from-palette($background, hover);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n      background: theming.get-color-from-palette($background, hover);\n    }\n\n    &.mat-active {\n      background: theming.get-color-from-palette($background, hover);\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: theming.get-color-from-palette($foreground, hint-text);\n    }\n  }\n\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($primary, text);\n  }\n\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($accent, text);\n  }\n\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($warn, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-option {\n    font: {\n      family: typography-utils.font-family($config);\n      size: typography-utils.font-size($config, subheading-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-option') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../theming/theming';\n@use '../typography/typography';\n@use '../typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n\n  .mat-optgroup-label {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-optgroup-disabled .mat-optgroup-label {\n    color: theming.get-color-from-palette($foreground, hint-text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-optgroup-label {\n    @include typography-utils.typography-level($config, body-2);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-optgroup') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/theming/theming';\n@use '../core/theming/palette';\n@use '../core/style/private';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $accent: map.get($config, accent);\n\n  .mat-snack-bar-container {\n    // Use the primary text on the dark theme, even though the lighter one uses\n    // a secondary, because the contrast on the light primary text is poor.\n    color: if($is-dark-theme, palette.$dark-primary-text, palette.$light-secondary-text);\n    background: if($is-dark-theme, map.get(palette.$grey-palette, 50), #323232);\n\n    @include private.private-theme-elevation(6, $config);\n  }\n\n  .mat-simple-snackbar-action {\n    color: if($is-dark-theme, inherit, theming.get-color-from-palette($accent, text));\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-simple-snackbar {\n    font: {\n      family: typography-utils.font-family($config, body-1);\n      size: typography-utils.font-size($config, body-1);\n    }\n  }\n\n  .mat-simple-snackbar-action {\n    line-height: 1;\n    font: {\n      family: inherit;\n      size: inherit;\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-snack-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './tree-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-tree {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tree {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: typography-utils.font-weight($config, body-1);\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(tree-variables.$density-config,\n    $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-tree-node {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tree') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use '../../../cdk/a11y';\n\n@mixin ripple() {\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n    transform: scale(0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include a11y.high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n","/// Emits a CSS class, `.cdk-visually-hidden`. This class can be applied to an element\n/// to make that element visually hidden while remaining available to assistive technology.\n@mixin a11y-visually-hidden() {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\n    white-space: nowrap;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n\n    // We need at least one of top/bottom/left/right in order to prevent cases where the\n    // absolute-positioned element is pushed down and can affect scrolling (see #24597).\n    // `left` was chosen here, because it's the least likely to break overrides where the\n    // element might have been positioned (e.g. `mat-checkbox`).\n    left: 0;\n\n    [dir='rtl'] & {\n      left: auto;\n      right: 0;\n    }\n  }\n}\n\n/// @deprecated Use `a11y-visually-hidden`.\n@mixin a11y() {\n  @include a11y-visually-hidden;\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param {String} selector-context The selector under which to nest the mixin's content.\n@mixin _optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param {String} target Type of high contrast setting to target. Defaults to `active`, can be\n///     `white-on-black` or `black-on-white`.\n/// @param {String} encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      // Note that if this selector is updated, the same change has to be made inside\n      // `_overlay.scss` which can't depend on this mixin due to some infrastructure limitations.\n      .cdk-high-contrast-#{$target} {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n","// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$overlay-container-z-index: 1000 !default;\n$overlay-z-index: 1000 !default;\n$overlay-backdrop-z-index: 1000 !default;\n\n// Background color for all of the backdrops\n$overlay-backdrop-color: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n/// Emits structural styles required for cdk/overlay to function.\n@mixin overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $overlay-container-z-index;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $overlay-z-index;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $overlay-z-index;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $overlay-backdrop-z-index;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // Note that we can't import and use the `high-contrast` mixin from `_a11y.scss`, because\n      // this file will be copied to the top-level `cdk` package when putting together the files\n      // for npm. Any relative import paths we use here will become invalid once the file is copied.\n      .cdk-high-contrast-active & {\n        // In high contrast mode the rgba background will become solid\n        // so we need to fall back to making it opaque using `opacity`.\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $overlay-backdrop-color;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Define a transition on the visibility so that the `transitionend` event can fire immediately.\n    transition: visibility 1ms linear, opacity 1ms linear;\n    visibility: hidden;\n    opacity: 1;\n\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n      visibility: visible;\n    }\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $overlay-z-index;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n","// Structural styles for the autosize text fields.\n@mixin text-field-autosize() {\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    @include _autosize-measuring-base;\n    height: auto !important;\n    overflow: hidden !important;\n  }\n\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\n  textarea.cdk-textarea-autosize-measuring-firefox {\n    @include _autosize-measuring-base;\n    height: 0 !important;\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin text-field-autofill() {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n}\n\n@mixin _autosize-measuring-base {\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n  // measurement. We just have to account for it later and subtract it off the final result.\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  $autofill-color-frame-count: $autofill-color-frame-count + 1 !global;\n}\n\n// @deprecated Use `autosize` and `autofill` instead.\n@mixin text-field {\n  @include text-field-autosize();\n  @include text-field-autofill();\n}\n","@use 'sass:map';\n@use '../style/layout-common';\n\n/// Mixin that turns on strong focus indicators.\n///\n/// @example\n///   .my-app {\n///     @include mat-strong-focus-indicators($config);\n///   }\n@mixin strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n    border-style: solid,\n    border-width: 3px,\n    border-radius: 4px,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n  $border-style: map.get($config, border-style);\n  $border-width: map.get($config, border-width);\n  $border-radius: map.get($config, border-radius);\n\n  // Base styles for focus indicators.\n  .mat-focus-indicator::before {\n    @include layout-common.fill();\n    box-sizing: border-box;\n    pointer-events: none;\n    border: $border-width $border-style transparent;\n    border-radius: $border-radius;\n\n    .cdk-high-contrast-active & {\n      display: none;\n    }\n  }\n\n  // By default, all focus indicators are flush with the bounding box of their\n  // host element. For particular elements (listed below), default inset/offset\n  // values are necessary to ensure that the focus indicator is sufficiently\n  // contrastive and renders appropriately.\n\n  .mat-focus-indicator.mat-flat-button::before,\n  .mat-focus-indicator.mat-raised-button::before,\n  .mat-focus-indicator.mat-fab::before,\n  .mat-focus-indicator.mat-mini-fab::before,\n  .mat-focus-indicator.mat-chip::before,\n  .mat-focus-indicator.mat-sort-header-container::before {\n    margin: -($border-width + 2px);\n  }\n\n  .mat-focus-indicator.mat-stroked-button::before,\n  .mat-focus-indicator.mat-calendar-body-cell-content::before {\n    margin: -($border-width + 3px);\n  }\n\n  .mat-focus-indicator.mat-tab-link::before,\n  .mat-focus-indicator.mat-tab-label::before {\n    margin: 5px;\n  }\n\n  // Render the focus indicator on focus. Defining a pseudo element's\n  // content will cause it to render.\n\n  // Checkboxes, radios, and slide toggles render focus indicators when the\n  // associated visually-hidden input is focused.\n  .mat-checkbox-input:focus ~ .mat-focus-indicator::before,\n  .mat-radio-input:focus ~ .mat-focus-indicator::before,\n  .mat-slide-toggle-input:focus ~ .mat-slide-toggle-thumb-container .mat-focus-indicator::before,\n\n  // For options, render the focus indicator when the class .mat-active\n  // is present.\n  .mat-focus-indicator.mat-option.mat-active::before,\n\n  // For calendar cells, render the focus indicator when the parent cell is\n  // focused.\n  .mat-calendar-body-cell:focus .mat-focus-indicator::before,\n\n  // Stepper headers have the focus indicator as a descendant,\n  // because `::before` is used for other styling.\n  .mat-step-header:focus .mat-focus-indicator::before,\n\n  // For all other components, render the focus indicator on focus.\n  .mat-focus-indicator:focus::before {\n    content: '';\n  }\n}\n\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\n// pseudo element within is positioned relative to the host. Private mixin included within\n// `mat-core`.\n@mixin private-strong-focus-indicators-positioning() {\n  .mat-focus-indicator {\n    position: relative;\n  }\n}\n","@use '../../cdk/overlay';\n@use '../../cdk/a11y';\n@use '../../cdk/text-field';\n\n// Core styles that can be used to apply material design treatments to any element.\n@use './ripple/ripple';\n@use './focus-indicators/focus-indicators';\n@use './typography/all-typography';\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin core($typography-config: null) {\n  @include all-typography.all-component-typographies($typography-config);\n  @include ripple.ripple();\n  @include a11y.a11y-visually-hidden();\n  @include overlay.overlay();\n  @include text-field.text-field-autosize();\n  @include text-field.text-field-autofill();\n\n  @include focus-indicators.private-strong-focus-indicators-positioning();\n  @include _mdc-core();\n}\n\n// Mixin that renders all of the core MDC styles. Private mixin included with `mat-core`.\n@mixin _mdc-core() {\n  @include _mdc-strong-focus-indicators-positioning();\n}\n\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\n// pseudo element within is positioned relative to the host. Private mixin included within\n// `_mat-mdc-core`.\n@mixin _mdc-strong-focus-indicators-positioning() {\n  .mat-mdc-focus-indicator {\n    position: relative;\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../theming/theming';\n\n// Colors for the ripple elements.\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $foreground-base: map.get($foreground, base);\n  $color-opacity: 0.1;\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (meta.type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $color-opacity;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-ripple') {\n    $color: theming.get-color-config($theme);\n    @if $color != null {\n      @include color($color);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox {\n    color: theming.get-color-from-palette(map.get($config, foreground), secondary-text);\n\n    &::after {\n      color: theming.get-color-from-palette($background, background);\n    }\n  }\n\n  .mat-pseudo-checkbox-disabled {\n    color: $disabled-color;\n  }\n\n  .mat-primary .mat-pseudo-checkbox-checked,\n  .mat-primary .mat-pseudo-checkbox-indeterminate {\n    background: theming.get-color-from-palette(map.get($config, primary));\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate,\n  .mat-accent .mat-pseudo-checkbox-checked,\n  .mat-accent .mat-pseudo-checkbox-indeterminate {\n    background: theming.get-color-from-palette(map.get($config, accent));\n  }\n\n  .mat-warn .mat-pseudo-checkbox-checked,\n  .mat-warn .mat-pseudo-checkbox-indeterminate {\n    background: theming.get-color-from-palette(map.get($config, warn));\n  }\n\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-disabled {\n      background: $disabled-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'theming/theming';\n@use './style/private';\n@use './ripple/ripple-theme';\n@use './option/option-theme';\n@use './option/optgroup-theme';\n@use './selection/pseudo-checkbox/pseudo-checkbox-theme';\n@use './style/elevation';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map.get($config, background);\n    $foreground: map.get($config, foreground);\n\n    background-color: theming.get-color-from-palette($background, background);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .#{elevation.$prefix}#{$zValue} {\n      @include private.private-theme-elevation($zValue, $config);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-core') {\n    @include ripple-theme.theme($theme);\n    @include option-theme.theme($theme);\n    @include optgroup-theme.theme($theme);\n    @include pseudo-checkbox-theme.theme($theme);\n\n    $color: theming.get-color-config($theme);\n    @if $color != null {\n      @include color($color);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use 'variables';\n\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://material.io/design/environment/elevation.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\n// space completely obscured by an object relative to its light source), one for penumbra (the\n// space partially obscured by an object), and one for ambient (the space which contains the object\n// itself). For a further explanation of these terms and their meanings, see\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\n\n// Maps for the different shadow sets and their values within each z-space. These values were\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\n// all of the values between them.\n\n@function _get-umbra-map($color, $opacity) {\n  $shadow-color: if(meta.type-of($color) == color, rgba($color, $opacity * 0.2), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 2px 1px -1px #{$shadow-color}',\n    2: '0px 3px 1px -2px #{$shadow-color}',\n    3: '0px 3px 3px -2px #{$shadow-color}',\n    4: '0px 2px 4px -1px #{$shadow-color}',\n    5: '0px 3px 5px -1px #{$shadow-color}',\n    6: '0px 3px 5px -1px #{$shadow-color}',\n    7: '0px 4px 5px -2px #{$shadow-color}',\n    8: '0px 5px 5px -3px #{$shadow-color}',\n    9: '0px 5px 6px -3px #{$shadow-color}',\n    10: '0px 6px 6px -3px #{$shadow-color}',\n    11: '0px 6px 7px -4px #{$shadow-color}',\n    12: '0px 7px 8px -4px #{$shadow-color}',\n    13: '0px 7px 8px -4px #{$shadow-color}',\n    14: '0px 7px 9px -4px #{$shadow-color}',\n    15: '0px 8px 9px -5px #{$shadow-color}',\n    16: '0px 8px 10px -5px #{$shadow-color}',\n    17: '0px 8px 11px -5px #{$shadow-color}',\n    18: '0px 9px 11px -5px #{$shadow-color}',\n    19: '0px 9px 12px -6px #{$shadow-color}',\n    20: '0px 10px 13px -6px #{$shadow-color}',\n    21: '0px 10px 13px -6px #{$shadow-color}',\n    22: '0px 10px 14px -6px #{$shadow-color}',\n    23: '0px 11px 14px -7px #{$shadow-color}',\n    24: '0px 11px 15px -7px #{$shadow-color}'\n  );\n}\n\n@function _get-penumbra-map($color, $opacity) {\n  $shadow-color: if(meta.type-of($color) == color, rgba($color, $opacity * 0.14), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 1px 0px #{$shadow-color}',\n    2: '0px 2px 2px 0px #{$shadow-color}',\n    3: '0px 3px 4px 0px #{$shadow-color}',\n    4: '0px 4px 5px 0px #{$shadow-color}',\n    5: '0px 5px 8px 0px #{$shadow-color}',\n    6: '0px 6px 10px 0px #{$shadow-color}',\n    7: '0px 7px 10px 1px #{$shadow-color}',\n    8: '0px 8px 10px 1px #{$shadow-color}',\n    9: '0px 9px 12px 1px #{$shadow-color}',\n    10: '0px 10px 14px 1px #{$shadow-color}',\n    11: '0px 11px 15px 1px #{$shadow-color}',\n    12: '0px 12px 17px 2px #{$shadow-color}',\n    13: '0px 13px 19px 2px #{$shadow-color}',\n    14: '0px 14px 21px 2px #{$shadow-color}',\n    15: '0px 15px 22px 2px #{$shadow-color}',\n    16: '0px 16px 24px 2px #{$shadow-color}',\n    17: '0px 17px 26px 2px #{$shadow-color}',\n    18: '0px 18px 28px 2px #{$shadow-color}',\n    19: '0px 19px 29px 2px #{$shadow-color}',\n    20: '0px 20px 31px 3px #{$shadow-color}',\n    21: '0px 21px 33px 3px #{$shadow-color}',\n    22: '0px 22px 35px 3px #{$shadow-color}',\n    23: '0px 23px 36px 3px #{$shadow-color}',\n    24: '0px 24px 38px 3px #{$shadow-color}'\n  );\n}\n\n@function _get-ambient-map($color, $opacity) {\n  $shadow-color: if(meta.type-of($color) == color, rgba($color, $opacity * 0.12), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 3px 0px #{$shadow-color}',\n    2: '0px 1px 5px 0px #{$shadow-color}',\n    3: '0px 1px 8px 0px #{$shadow-color}',\n    4: '0px 1px 10px 0px #{$shadow-color}',\n    5: '0px 1px 14px 0px #{$shadow-color}',\n    6: '0px 1px 18px 0px #{$shadow-color}',\n    7: '0px 2px 16px 1px #{$shadow-color}',\n    8: '0px 3px 14px 2px #{$shadow-color}',\n    9: '0px 3px 16px 2px #{$shadow-color}',\n    10: '0px 4px 18px 3px #{$shadow-color}',\n    11: '0px 4px 20px 3px #{$shadow-color}',\n    12: '0px 5px 22px 4px #{$shadow-color}',\n    13: '0px 5px 24px 4px #{$shadow-color}',\n    14: '0px 5px 26px 4px #{$shadow-color}',\n    15: '0px 6px 28px 5px #{$shadow-color}',\n    16: '0px 6px 30px 5px #{$shadow-color}',\n    17: '0px 6px 32px 5px #{$shadow-color}',\n    18: '0px 7px 34px 6px #{$shadow-color}',\n    19: '0px 7px 36px 6px #{$shadow-color}',\n    20: '0px 8px 38px 7px #{$shadow-color}',\n    21: '0px 8px 40px 7px #{$shadow-color}',\n    22: '0px 8px 42px 7px #{$shadow-color}',\n    23: '0px 9px 44px 8px #{$shadow-color}',\n    24: '0px 9px 46px 8px #{$shadow-color}'\n  );\n}\n\n// The default duration value for elevation transitions.\n$transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$transition-timing-function: variables.$fast-out-slow-in-timing-function;\n\n// The default color for elevation shadows.\n$color: black !default;\n\n// The default opacity scaling value for elevation shadows.\n$opacity: 1 !default;\n\n// Prefix for elevation-related selectors.\n$prefix: 'mat-elevation-z';\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin elevation($zValue, $color: $color, $opacity: $opacity) {\n  @if meta.type-of($zValue) != number or not math.is-unitless($zValue) {\n    @error '$zValue must be a unitless number';\n  }\n  @if $zValue < 0 or $zValue > 24 {\n    @error '$zValue must be between 0 and 24';\n  }\n\n  box-shadow: #{map.get(_get-umbra-map($color, $opacity), $zValue)},\n              #{map.get(_get-penumbra-map($color, $opacity), $zValue)},\n              #{map.get(_get-ambient-map($color, $opacity), $zValue)};\n}\n\n// Applies the elevation to an element in a manner that allows\n// consumers to override it via the Material elevation classes.\n@mixin overridable-elevation(\n    $zValue,\n    $color: $color,\n    $opacity: $opacity) {\n  &:not([class*='#{$prefix}']) {\n    @include elevation($zValue, $color, $opacity);\n  }\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function private-transition-property-value(\n    $duration: $transition-duration,\n    $easing: $transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin elevation-transition(\n    $duration: $transition-duration,\n    $easing: $transition-timing-function) {\n  transition: private-transition-property-value($duration, $easing);\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n\n  .mat-autocomplete-panel {\n    @include private.private-theme-overridable-elevation(4, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    // Selected options in autocompletes should not be gray, but we\n    // only want to override the background for selected options if\n    // they are *not* in hover or focus state. This change has to be\n    // made here because base option styles are shared between the\n    // autocomplete and the select.\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\n      background: theming.get-color-from-palette($background, card);\n\n      &:not(.mat-option-disabled) {\n        color: theming.get-color-from-palette($foreground, text);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-autocomplete') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n\n  .mat-divider {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-divider-vertical {\n    border-right-color: theming.get-color-from-palette($foreground, divider);\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-divider') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@mixin private-expansion-focus {\n  .mat-expansion-panel {\n    & .mat-expansion-panel-header.cdk-keyboard-focused,\n    & .mat-expansion-panel-header.cdk-program-focused,\n    &:not(.mat-expanded) .mat-expansion-panel-header:hover {\n      &:not([aria-disabled='true']) {\n        @content;\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../theming/theming';\n\n// Renders a gradient for showing the dashed line when the input is disabled.\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\n// to match the Material Design spec.\n@mixin private-control-disabled-underline($color) {\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n// Figures out the color of the placeholder for a form control.\n// Used primarily to prevent the various form controls from\n// becoming out of sync since these colors aren't in a palette.\n@function private-control-placeholder-color($config) {\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n  @return theming.get-color-from-palette($foreground, secondary-text,\n    if($is-dark-theme, 0.5, 0.42));\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/form-common';\n\n\n// Theme styles that only apply to the standard appearance of the form-field.\n\n@mixin standard-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-standard {\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include form-common.private-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n@mixin standard-typography($config-or-theme) {}\n\n@mixin private-form-field-standard-density($config-or-theme) {}\n\n@mixin standard-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-standard') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include standard-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-standard-density($density);\n    }\n    @if $typography != null {\n      @include standard-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: theming.get-color-from-palette($primary, text);\n    }\n\n    &.mat-accent {\n      color: theming.get-color-from-palette($accent, text);\n    }\n\n    &.mat-warn {\n      color: theming.get-color-from-palette($warn, text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","// stylelint-disable material/no-prefixes\n@mixin user-select($value) {\n  -webkit-user-select: $value;\n  user-select: $value;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  // Note: this isn't necessary anymore since we don't support\n  // IE, but it caused some presubmit failures in #23416.\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin backface-visibility($value) {\n  -webkit-backface-visibility: $value;\n  backface-visibility: $value;\n}\n\n@mixin private-color-adjust($value) {\n  -webkit-print-color-adjust: $value;\n  color-adjust: $value;\n}\n\n@mixin private-background-clip($value) {\n  -webkit-background-clip: $value;\n  background-clip: $value;\n}\n// stylelint-enable\n","@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:color';\n@use '../core/theming/theming';\n\n// Approximates the correct buffer color by using a mix between the theme color\n// and the theme's background color.\n@function _get-buffer-color($theme, $background) {\n  $theme-color: theming.get-color-from-palette($theme);\n  // Return fallback color if the theme uses variables to define colors.\n  @if (meta.type-of($theme-color) != 'color' or meta.type-of($background) != 'color') {\n    @return theming.get-color-from-palette($theme, lighter);\n  }\n  @return color.mix($theme-color, $background, $weight: 25%);\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get(map.get($config, background), background);\n\n  .mat-progress-bar-background {\n    fill: _get-buffer-color($primary, $background);\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: _get-buffer-color($primary, $background);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: theming.get-color-from-palette($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      fill: _get-buffer-color($accent, $background);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: _get-buffer-color($accent, $background);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: theming.get-color-from-palette($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      fill: _get-buffer-color($warn, $background);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: _get-buffer-color($warn, $background);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    circle {\n      stroke: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent circle {\n      stroke: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn circle {\n      stroke: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-spinner') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $drawer-background-color: theming.get-color-from-palette($background, dialog);\n  $drawer-container-background-color:  theming.get-color-from-palette($background, background);\n  $drawer-push-background-color: theming.get-color-from-palette($background, dialog);\n  $drawer-side-border: solid 1px theming.get-color-from-palette($foreground, divider);\n\n  .mat-drawer-container {\n    background-color: $drawer-container-background-color;\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-drawer {\n    background-color: $drawer-background-color;\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-drawer-push {\n      background-color: $drawer-push-background-color;\n    }\n\n    &:not(.mat-drawer-side) {\n      // The elevation of z-16 is noted in the design specifications.\n      // See https://material.io/design/components/navigation-drawer.html\n      @include private.private-theme-elevation(16, $config);\n    }\n  }\n\n  .mat-drawer-side {\n    border-right: $drawer-side-border;\n\n    &.mat-drawer-end {\n      border-left: $drawer-side-border;\n      border-right: none;\n    }\n  }\n\n  [dir='rtl'] .mat-drawer-side {\n    border-left: $drawer-side-border;\n    border-right: none;\n\n    &.mat-drawer-end {\n      border-left: none;\n      border-right: $drawer-side-border;\n    }\n  }\n\n  .mat-drawer-backdrop.mat-drawer-shown {\n    $opacity: 0.6;\n    $backdrop-color: theming.get-color-from-palette($background, card, $opacity);\n\n    @if (meta.type-of($backdrop-color) == color) {\n      // We use invert() here to have the darken the background color expected to be used. If the\n      // background is light, we use a dark backdrop. If the background is dark,\n      // we use a light backdrop.\n      background-color: color.invert($backdrop-color);\n    }\n    @else {\n      // If we couldn't resolve the backdrop color to a color value, fall back to using\n      // `opacity` to make it opaque since its end value could be a solid color.\n      background-color: $backdrop-color;\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sidenav') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: theming.get-color-from-palette($background, 'card');\n    $text-color: theming.get-color-from-palette($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-transparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (meta.type-of($table-background) == color and meta.type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: color.mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sort') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","/************************************\n\n             Media queries\n\n To use these, put this snippet in the appropriate selector:\n\n     @include bp(tiny) {\n         background-color: purple;\n     }\n\n     Replace \"tiny\" with \"medium\" or \"big\" as necessary.\n*************************************/\n\n@mixin bp($point) {\n\n  $bp-xsmall: \"(min-width: 320px)\";\n  $bp-teeny: \"(min-width: 480px)\";\n  $bp-tiny: \"(min-width: 600px)\";\n  $bp-small: \"(min-width: 650px)\";\n  $bp-medium: \"(min-width: 800px)\";\n  $bp-big: \"(min-width: 1000px)\";\n\n  @if $point == big {\n    @media #{$bp-big} { @content; }\n  }\n  @else if $point == medium {\n    @media #{$bp-medium} { @content; }\n  }\n  @else if $point == small {\n    @media #{$bp-small}  { @content; }\n  }\n  @else if $point == tiny {\n    @media #{$bp-tiny}  { @content; }\n  }\n  @else if $point == teeny {\n    @media #{$bp-teeny}  { @content; }\n  }\n  @else if $point == xsmall {\n    @media #{$bp-xsmall}  { @content; }\n  }\n}\n\n@mixin rotate($degrees) {\n  -moz-transform: rotate($degrees);\n  -webkit-transform: rotate($degrees);\n  -o-transform: rotate($degrees);\n  -ms-transform: rotate($degrees);\n  transform: rotate($degrees);\n  transition: transform 150ms;\n  transition-timing-function: ease-in-out;\n}\n\n@mixin codeblock($bgcolor) {\n    background-color: $bgcolor;\n    border-radius: 5px;\n    padding: 20px;\n    margin: 0 auto; // was 24\n    border: 0.5px solid $lightgray;\n}\n\n// INFO CARD SKELETON\n@mixin card($height, $width) {\n  height: $height;\n  width: $width;\n  background-color: $white;\n  border-radius: 4px;\n  box-shadow: 0 2px 2px rgba($black, 0.24), 0 0 2px rgba($black, 0.12);\n  box-sizing: border-box;\n  transition: box-shadow .5s;\n\n  &:hover {\n    box-shadow: 0 8px 8px rgba($black, 0.24), 0 0 8px rgba($black, 0.12);\n    text-decoration: none;\n  }\n}","/* ==============================\n   BASE STYLES\n   ============================== */\n\n@import 'typography';","body {\n  font-family: $main-font;\n  margin: 0;\n  color: $darkgray;\n  font-size: 14px;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\nh1 {\n  display: inline-block;\n  font-size: 24px;\n  font-weight: 500;\n  margin: 8px 0px;\n\n  @media screen and (max-width: 600px) {\n    margin-top: 0;\n  }\n}\n\nh2 {\n  font-size: 22px;\n  font-weight: 500;\n  margin: 32px 0px 24px;\n  clear: both;\n}\n\nh3 {\n  font-size: 20px;\n  font-weight: 400;\n  margin: 24px 0px;\n  clear: both;\n}\n\nh4 {\n  font-size: 18px;\n  font-weight: 400;\n  margin: 8px 0px;\n  clear: both;\n}\n\nh5 {\n  font-size: 16px;\n  font-weight: 500;\n  margin: 8px 0px;\n  clear: both;\n}\n\nh6 {\n  color: $mediumgray;\n  font-size: 16px;\n  font-weight: 500;\n  margin: 8px 0px;\n  clear: both;\n}\n\nh2, h3, h4, h5, h6 {\n  @media screen and (max-width: 600px) {\n    margin: 8px 0;\n  }\n}\n\n.mat-tab-body-wrapper h2 {\n  margin-top: 0;\n}\n\np, ol, ul, ol, li, input, a  {\n  font-size: 14px;\n  line-height: 24px;\n  letter-spacing: 0.30px;\n  font-weight: 400;\n  & > em {\n    letter-spacing: 0.30px;\n  }\n}\n\nol {\n  li, p {\n    margin: 4px 0;\n  }\n}\n\nli p {\n  margin: 0;\n}\n\na {\n  text-decoration: none;\n}\n\n.app-toolbar a {\n  font-size: 16px;\n  font-weight: 400;\n  color: white;\n  font-family: $main-font;\n  text-transform: uppercase;\n  padding: 21px 0;\n}\n\nstrong {\n  font-weight: 600;\n}\n\ntable {\n  border-collapse: collapse;\n  border-radius: 2px;\n  border-spacing: 0;\n  margin: 0 0 32px 0;\n}\n\ntable tbody th {\n  max-width: 100px;\n  padding: 13px 32px;\n  text-align: left;\n}\n\ntd {\n  font-weight: 400;\n  padding: 8px 30px;\n  letter-spacing: 0.30px;\n\n  p {\n    margin: 0;\n  }\n}\n\nth {\n  font-size: 16px;\n  font-weight: 500;\n  padding: 13px 32px;\n  text-align: left;\n}\n\np > code, li > code, td > code, th > code {\n  font-family: $code-font;\n  font-size: 85%;\n  color: $darkgray;\n  letter-spacing: 0;\n  line-height: 1;\n  padding: 2px 0;\n  background-color: $backgroundgray;\n  border-radius: 4px;\n}\n\ncode {\n  font-family: $code-font;\n  font-size: 90%;\n}\n\n.sidenav-content a {\n  color: $pink;\n  &:hover {\n    color: $mediumgray;\n  }\n}\n\n.informal {\n  display: block;\n  padding-left: 1.3em;\n  border-left: 5px solid #dfdfdf;\n  font-size: 1.1em;\n  font-style: italic;\n  margin: 22px 0;\n}\n","// TYPOGRAPHY\n$main-font: \"Roboto\",\"Helvetica Neue Light\",\"Helvetica Neue\",Helvetica,Arial,\"Lucida Grande\",sans-serif;\n$code-font: \"Droid Sans Mono\", monospace;\n\n// Z-LAYER\n$layer-1: 1;\n$layer-2: 2;\n$layer-3: 3;\n$layer-4: 4;\n$layer-5: 5;\n\n// COLOR PALETTE\n$pink: #d81b60;\n$accentgrey: #62757f;\n$brightred: #DD0031;\n$darkred: #C3002F;\n$white: #FFFFFF;\n$offwhite: #FAFAFA;\n$backgroundgray: #F1F1F1;\n$lightgray: #DBDBDB;\n$mist: #ECEFF1;\n$mediumgray: #6e6e6e;\n$darkgray: #333;\n$black: #0A1014;\n$orange: #FF9800;\n$anti-pattern: $brightred;\n\n// API & CODE COLORS\n$amber-700: #FFA000;\n$blue-400: #42A5F5;\n$blue-500: #2196F3;\n$blue-600: #1E88E5;\n$blue-800: #1565C0;\n$blue-900: #0D47A1;\n$blue-grey-50: #ECEFF1;\n$blue-grey-100: #CFD8DC;\n$blue-grey-200: #B0BEC5;\n$blue-grey-300: #90A4AE;\n$blue-grey-400: #78909C;\n$blue-grey-500: #607D8B;\n$blue-grey-600: #546E7A;\n$blue-grey-700: #455A64;\n$blue-grey-800: #37474F;\n$blue-grey-900: #263238;\n$codegreen: #17ff0b;\n$green-500: #4CAF50;\n$green-800: #2E7D32;\n$light-green-600: #7CB342;\n$pink-600: #D81B60;\n$purple-600: #8E24AA;\n$teal-500: #009688;\n$lightgrey: #F5F6F7;\n\n// GRADIENTS\n$bluegradient: linear-gradient(145deg,#0D47A1,#42A5F5);\n$redgradient: linear-gradient(145deg,$darkred,$brightred);\n\n// API LABEL COLOR AND SYMBOLS MAP\n$api-symbols: (\n  all: (\n    content: ' ',\n    background: $white\n  ),\n  decorator: (\n    content: '@',\n    background: $blue-800\n  ),\n  directive: (\n    content: 'D',\n    background: $pink-600\n  ),\n  pipe: (\n    content: 'P',\n    background: $blue-grey-600\n  ),\n  class: (\n    content: 'C',\n    background: $blue-500\n  ),\n  interface: (\n    content: 'I',\n    background: $teal-500\n  ),\n  function: (\n    content: 'F',\n    background: $green-800\n  ),\n  enum: (\n    content: 'E',\n    background: $amber-700\n  ),\n  const: (\n    content: 'K',\n    background: $mediumgray\n  ),\n  let: (\n    content: 'K',\n    background: $mediumgray\n  ),\n  var: (\n    content: 'K',\n    background: $mediumgray\n  ),\n  type-alias: (\n    content: 'T',\n    background: $light-green-600\n  ),\n  module: (\n    content: 'Pk',\n    background: $purple-600\n  )\n);\n\n// OTHER\n$small-breakpoint-width: 840px;\n$phone-breakpoint: 480px;\n$tablet-breakpoint: 800px;","/* ==============================\n   LAYOUT STYLES\n   ============================== */\n\n@import 'api-page';\n@import 'content-layout';\n@import 'doc-viewer';\n@import 'footer';\n@import 'layout-global';\n@import 'marketing-layout';\n@import 'not-found';\n@import 'sidenav';\n@import 'table-of-contents';\n@import 'top-menu';\n@import 'print-layout';",".api-section {\n    position: relative;\n\n    pre {\n        white-space: pre-wrap;\n    }\n\n    table.api-table {\n        min-width: 680px;\n\n        thead th {\n            color: white;\n            font-size: 16px;\n            background-color: $pink;\n            border-radius: 4px 4px 0 0;\n            text-transform: none;\n            padding: 8px 24px;\n        }\n\n        tbody {\n            pre {\n                white-space: normal;\n                margin: 4px;\n                padding: 4px 16px;\n            }\n\n            td, th {\n                padding: 0;\n            }\n\n            th {\n                max-width: 150px;\n            }\n        }\n\n    }\n}\n\n.api-body {\n\n    max-width: 1200px;\n\n    table {\n\n        th {\n            text-transform: none;\n            font-size: 16px;\n            font-weight: bold;\n        }\n\n        tr {\n            border-bottom: 1px solid $lightgray;\n        }\n\n        td {\n            vertical-align: middle;\n        }\n\n        hr {\n            margin: 16px 0;\n        }\n\n        tr:last-child {\n            border-bottom: none;\n        }\n\n        &.item-table {\n            td {\n                padding: 32px;\n            }\n        }\n\n        &.list-table {\n            td {\n                padding: 16px 24px;\n            }\n        }\n    }\n\n    /* used to target the short description */\n    > p:nth-child(2), > p:nth-child(3) {\n        border-left: 5px solid $pink;\n        font-size: 1rem;\n        line-height: 1.25;\n        padding-left: .5rem;\n\n    }\n}\n","aio-shell.page-docs {\n  .sidenav-content {\n    // padding: 6rem 3rem 3rem 3rem; // THIS CAUSES THE TOP NAV TOOLBAR TO JUMP BETWEEN DOCS AND OTHER PAGES\n    margin: auto;\n  }\n}\n\n.sidenav-content {\n  min-height: 100vh;\n  padding: 80px 3rem 1rem;\n}\n\n@media (max-width: 600px) {\n  aio-menu {\n    display: none;\n  }\n\n  .sidenav-content {\n    min-height: 450px;\n    padding: 80px 1rem 1rem;\n  }\n}\n\n.sidenav-container {\n  width: 100%;\n  height: 100vh;\n}\n\n.sidenav-content button {\n  min-width: 50px;\n}\n\n#guide-change-log h2::before {\n  content: \"\";\n  display: block;\n  height: 1px;\n  margin: 24px 0px;\n  background: $lightgray;\n}\n",".no-animations aio-doc-viewer > * {\n  // Disable view transition animations.\n  transition: none !important;\n}\n","footer {\n  position: relative;\n  line-height: 24px;\n  flex: 1;\n  padding: 48px;\n  z-index: 0;\n  background-color: $pink;\n  color: $offwhite;\n  font-weight: 300;\n\n  aio-footer {\n    position: relative;\n    z-index: 0;\n  }\n\n  .footer-block {\n    margin: 0 24px;\n    vertical-align: top;\n  }\n\n  a {\n    color: $offwhite;\n    font-weight: 300;\n    text-decoration: none;\n    z-index: 20;\n    position: relative;\n    &:hover {\n      text-decoration: underline;\n    }\n    &:visited {\n      text-decoration: none;\n    }\n  }\n  a.action {\n    cursor: pointer;\n  }\n  h3 {\n    font-size: 16px;\n    text-transform: uppercase;\n    font-weight: 400;\n    margin: 0 0 16px;\n  }\n  p {\n    text-align: center;\n    margin: 10px 0px 5px;\n\n    @media (max-width: 480px) {\n      text-align: left;\n    }\n  }\n\n  div.grid-fluid {\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n\n    justify-content: center;\n\n    text-align: left;\n    margin: 0 0 40px;\n\n    ul {\n      list-style-position: inside;\n      padding: 0px;\n      margin: 0px;\n\n      li {\n        list-style-type: none;\n        padding: 0px;\n        text-align: left;\n      }\n    }\n\n    @media (max-width: 480px) {\n      flex-direction: column;\n      .footer-block {\n        margin: 8px 24px;\n      }\n    }\n  }\n\n  @media (max-width: 700px) {\n    h3 {\n      font-size: 110%;\n    }\n  }\n  @media (max-width: 600px) {\n    h3 {\n      font-size: 100%;\n    }\n  }\n}\n\nfooter::after {\n  content: '';\n  position: absolute;\n  z-index: -1;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-size: 320px auto;\n}\n","html, body {\n    height: 100%;\n}\n\nbody {\n    background-color: $offwhite;\n}\n\n.clearfix {\n    content: \"\";\n    display: table;\n    clear: both;\n}\n\n.clear {\n    clear: both;\n}\n\n.l-clearfix:after, .clearfix:after {\n    content: \"\";\n    display: table;\n    clear: both;\n}\n\n.is-visible {\n    display: block!important;\n}\n\n.l-flex-wrap {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.flex-center {\n    display: flex;\n    justify-content: center;\n}\n\n.center {\n    text-align: center;\n}\n\n.visually-hidden {\n    position: absolute !important;\n    top: -9999px !important;\n    left: -9999px !important;\n}\n\n.text-uppercase {\n  text-transform: uppercase;\n}",".hero {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 48px 48px 32px 48px;\n  overflow: hidden;\n\n  .hero-title {\n    display: inline-block;\n    font-size: 28px;\n    font-weight: 400;\n    line-height: 48px;\n    margin: 0 8px 0 0;\n    text-transform: uppercase;\n\n    &.is-standard-case {\n      text-transform: none;\n    }\n  }\n}\n\nsection#intro {\n  display: flex;\n  align-items: center;\n  position: relative;\n  width: 900px;\n  height: 480px;\n  margin: 0 auto;\n  padding: 0;\n  color: white;\n\n  @media (max-width: 780px) {\n    flex-direction: column;\n    justify-content: center;\n    width: 100%;\n    max-width: 100vw;\n    padding: 70px 0 32px;\n\n    button {\n      margin: 0;\n      height: 60px;\n    }\n  }\n\n  .homepage-container {\n    width: 100%;\n    max-width: 1040px;\n    margin: 0 auto;\n    margin-top: -7%;\n    padding-top: 0;\n    padding-bottom: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    .hero-cta + .hero-cta {\n      margin-top: 15px;\n    }\n\n    @media (max-width: 780px) {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      width: 100%;\n      max-width: 100%;\n      padding: 0;\n    }\n  }\n\n  .headline-container {\n    margin: 32px 0;\n    text-align: center;\n  }\n\n  .hero-headline {\n    font-size: 40px;\n    line-height: 64px;\n    font-weight: 500;\n    color: $pink;\n\n    &:after {\n      display: none;\n    }\n\n    @media (max-width: 780px) {\n      text-align: center;\n    }\n\n    @media (max-width: 575px) {\n      font-size: 32px;\n      line-height: 50px;\n    }\n  }\n\n  .hero-subheadline {\n    font-size: 22px;\n    line-height: 32px;\n    color: $accentgrey;\n  }\n\n  .hero-logo {\n    display: flex;\n    width: 400px;\n\n    @media (max-width: 780px) {\n      justify-content: center;\n    }\n\n    img {\n      width: 400px;\n      height: 400px;\n      margin-bottom: 8px;\n      padding: 0;\n      filter: drop-shadow(0 2px 2px rgba($black, 0.24));\n\n      @media (max-width: 780px) {\n        width: 250px;\n        height: 250px;\n      }\n    }\n  }\n}\n\n.announcement-bar {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n  max-width: 50vw;\n  margin: 0 auto;\n  padding: 16px;\n  background-color: $white;\n  border-radius: 4px;\n  box-shadow: 0 2px 2px rgba($black, 0.24), 0 0 2px rgba($black, 0.12);\n  box-sizing: border-box;\n  transition: all 0.3s ease-in;\n\n  @media (max-width: 992px) {\n    flex-direction: column;\n    text-align: center;\n    padding: 32px 16px;\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n    max-width: none;\n  }\n\n  & > * {\n    margin: 8px;\n  }\n\n  img {\n    filter: drop-shadow(0 2px 5px rgba(0, 0, 0, 0.26));\n  }\n\n  .button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 40px;\n    min-width: 160px;\n    font-size: 16px;\n    color: $white;\n    background-color: $pink;\n    border-radius: 48px;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\n    box-sizing: border-box;\n    cursor: pointer;\n\n    &:hover {\n      color: rgba($white, 0.7);\n    }\n  }\n\n  .material-icons {\n    display: none;\n    right: 0;\n    position: static;\n    transition: all 0.3s ease-in;\n    font-size: 16px;\n  }\n\n  p {\n    strong {\n      font-weight: 700;\n    }\n\n    font-size: 16px;\n    margin: 8px;\n    text-align: center;\n  }\n}\n\n// ANGULAR LINE\n.background-sky {\n  background-color: $pink;\n  background: $pink;\n  color: $white;\n}\n\n.home-row .card {\n  @include card(70%, auto);\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  width: 70%;\n  min-width: 270px;\n  text-align: center;\n  height: auto;\n  margin: auto;\n  padding: 24px;\n  box-shadow: 0 6px 6px rgba(10, 16, 20, 0.15), 0 0 52px rgba(10, 16, 20, 0.12);\n\n  @media (max-width: 600px) {\n    margin: 16px auto 0;\n\n    h2 {\n      margin: 0;\n    }\n\n    img {\n      max-width: none;\n      height: 70px;\n    }\n  }\n\n  @media (max-width: 1300px) {\n    img {\n      height: 70px;\n      max-width: none;\n    }\n  }\n\n  img {\n    margin: 16px;\n  }\n\n  .card-text-container {\n    margin: 0 16px;\n\n    p {\n      text-align: left;\n      color: $darkgray;\n      margin: 0;\n      padding: 8px 0;\n    }\n  }\n\n  &:hover {\n    h2 {\n      color: $pink;\n    }\n  }\n\n  ul {\n    list-style-type: none;\n  }\n}\n\n.text {\n  color: $darkgray;\n}\n\n.button.hero-cta {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 184px;\n  height: 40px;\n  padding: 0 24px;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 40px;\n  background-color: $white;\n  border-radius: 48px;\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\n  box-sizing: border-box;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.9;\n  }\n}\n\naio-shell {\n  &.page-home {\n    section {\n      padding: 0;\n    }\n  }\n\n  &.page-home,\n  &.page-resources,\n  &.page-events,\n  &.page-contribute {\n    article {\n      padding: 32px;\n\n      @media (max-width: 800px) {\n        padding: 24px;\n      }\n    }\n  }\n\n  &.page-features {\n    article {\n      padding: 0 3rem;\n    }\n  }\n\n  &.page-home,\n  &.page-resources,\n  &.page-events,\n  &.page-features {\n    .content img {\n      @media (max-width: 1300px) {\n        max-width: none;\n      }\n    }\n\n    .feature-section img {\n      max-width: 70px;\n    }\n\n    @media (max-width: 600px) {\n      mat-sidenav-container.sidenav-container {\n        padding-top: 0;\n      }\n    }\n  }\n\n  .cta-bar .hero-cta {\n    color: $pink;\n  }\n}\n\n.cta-bar.announcement-bar {\n  background: none;\n  box-shadow: none;\n}\n\n.text-headline {\n  font-size: 20px;\n  font-weight: 500;\n  color: $pink;\n  margin-top: 10px;\n  text-transform: uppercase;\n}\n\naio-shell:not(.view-SideNav) {\n  mat-sidenav-container.sidenav-container {\n    max-width: none;\n  }\n}\n\ndiv[layout='row'] {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n\n  @media (max-width: 480px) {\n    display: block;\n  }\n}\n\n.layout-row {\n  flex-direction: row;\n}\n\n.home-rows {\n  overflow: hidden;\n  @media (max-width: 600px) {\n    margin: 0;\n  }\n}\n\n.background-superhero-paper {\n  background-size: 100%;\n  background-blend-mode: multiply;\n}\n\n.home-row {\n  max-width: 920px;\n  margin: 32px auto;\n\n  .promo-img-container,\n  .text-container {\n    max-width: 50%;\n\n    @media (max-width: 480px) {\n      max-width: 100%;\n      text-align: center;\n\n      &:nth-child(even) {\n        flex-direction: column-reverse;\n      }\n    }\n  }\n\n  .text-block {\n    padding-right: 15%;\n\n    @media (max-width: 600px) {\n      padding: 0;\n    }\n  }\n\n  .promo-img-container {\n    img {\n      max-width: 90% !important;\n    }\n\n    p {\n      margin: 0 20px;\n    }\n\n    img {\n      max-width: 90%;\n\n      @media (max-width: 599px) {\n        max-width: 100%;\n        float: initial !important;\n      }\n    }\n  }\n}\n\n.marketing-banner {\n  background-color: lighten($pink, 10);\n  margin-top: 64px;\n  padding: 32px;\n\n  @media (max-width: 600px) {\n    margin-top: 56px;\n    padding: 18px;\n  }\n\n  .banner-headline {\n    text-transform: uppercase;\n    font-size: 24px;\n    font-weight: 300;\n    color: white;\n    margin: 0;\n    -webkit-margin-before: 0;\n    -webkit-margin-after: 0;\n\n    @media (max-width: 600px) {\n      font-size: 18px;\n      font-weight: 400;\n    }\n\n    &:after {\n      display: none;\n    }\n  }\n}\n.page-features .marketing-banner {\n  margin-bottom: 20px;\n}\n\n.blm-background {\n  background-color: black;\n  color: white;\n  display: flex;\n  min-height: calc(100vh - 64px);\n}\n\n.text-container.blm-container {\n  text-align: center;\n  line-height: inherit;\n  max-width: inherit;\n}\n\n.blm-text {\n  font-size: 2rem;\n  line-height: inherit;\n}\n\n.blm-list-item {\n  margin: 10px 0;\n}\n","#file-not-found {\n    padding: 3rem 3rem 3rem;\n}\n\n.nf-container {\n    align-items: center;\n    padding: 32px;\n}\n\n.nf-response {\n    margin: 32px;\n    height: 100%;\n    flex-direction: column;\n\n    h1 {\n        font-size: 48px;\n        color: $pink;\n        text-transform: uppercase;\n        margin: 8px 0;\n    }\n}\n\n.nf-icon.material-icons {\n    color: $pink;\n    font-size: 100px;\n    position: static;\n}\n","// Disable sidenav animations for the initial render.\n.starting.mat-drawer-transition .mat-drawer-content {\n  transition: none;\n}\n\naio-nav-menu {\n  display: block;\n  margin: 0 auto;\n  font-size: 13px;\n  ul, a {\n    padding: 0;\n    margin: 0;\n  }\n\n  &:first-child {\n    margin-top: 16px;\n  }\n\n  aio-nav-item div a {\n    padding-left: 6px;\n  }\n}\n\nmat-sidenav.mat-sidenav.sidenav {\n  position: fixed;\n  top: 64px;\n  bottom: 0;\n  left: 0;\n  padding: 0;\n  min-width: 260px;\n  background-color: $offwhite;\n  box-shadow: 6px 0 6px rgba(0,0,0,0.10);\n\n  &.collapsed {\n    top: 56px;\n  }\n}\n\nmat-sidenav-container.sidenav-container {\n  min-height: 100%;\n  height: auto !important;\n  max-width: 100%;\n  margin: 0;\n  transform: none;\n\n  &.has-floating-toc {\n    max-width: 82%;\n  }\n}\n\nmat-sidenav-container div.mat-sidenav-content {\n  height: auto;\n}\n\n.vertical-menu-item {\n  box-sizing: border-box;\n  color: $darkgray;\n  cursor: pointer;\n  display: block;\n  max-width: 260px;\n  overflow-wrap: break-word;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  text-decoration: none;\n  text-align: left;\n  width: 93%;\n  word-wrap: break-word;\n\n  &:hover {\n    background-color: $lightgray;\n    color: $pink;\n    text-shadow: 0 0 5px #ffffff;\n  }\n\n  &:focus {\n    outline: $accentgrey auto 2px;\n  }\n\n  //icons _within_ nav\n  .mat-icon {\n    position: absolute;\n    top: 0;\n    right: 0;\n    margin: 4px;\n  }\n}\n\n.vertical-menu-item.selected {\n  color: $pink;\n}\n\nbutton.vertical-menu-item {\n  border: none;\n  background-color: transparent;\n  margin-right: 0;\n  padding-left: 6px;\n  padding-top: 8px;\n  padding-bottom: 10px;\n}\n\n.heading {\n  color: $darkgray;\n  cursor: pointer;\n  position: relative;\n  text-transform: uppercase;\n}\n\n.heading-children.expanded {\n  visibility: visible;\n  opacity: 1;\n  max-height: 4000px; // Arbitrary max-height. Can increase if needed. Must have measurement to transition height.\n  transition: visibility 500ms, opacity 500ms, max-height 500ms;\n  -webkit-transition-timing-function: ease-in-out;\n  transition-timing-function: ease-in-out;\n}\n\n.heading-children.collapsed {\n  visibility: hidden;\n  opacity: 0;\n  max-height: 1px; // Must have measurement to transition height.\n  transition: visibility 275ms, opacity 275ms, max-height 280ms;\n  -webkit-transition-timing-function: ease-out;\n  transition-timing-function: ease-out;\n}\n\n.no-animations {\n  .heading-children.expanded, .heading-children.collapsed {\n    transition: none! important;\n  }\n}\n\n.level-1 {\n  font-family: $main-font;\n  font-size: 14px;\n  font-weight: 400;\n  margin-left: 14px;\n  transition: background-color 0.2s;\n  text-transform: uppercase;\n}\n\n.level-2 {\n  color: $mediumgray;\n  font-family: $main-font;\n  font-size: 14px;\n  font-weight: 400;\n  margin-left: 12px;\n  text-transform: none;\n}\n\n.level-3 {\n  color: $mediumgray;\n  font-family: $main-font;\n  font-size: 14px;\n  margin-left: 10px;\n}\n\n.level-1.expanded .mat-icon, .level-2.expanded .mat-icon {\n  @include rotate(90deg);\n}\n\n.level-1:not(.expanded) .mat-icon, .level-2:not(.expanded) .mat-icon {\n  @include rotate(0deg);\n}\n\naio-nav-menu.top-menu {\n  padding: 24px 0 0;\n\n  aio-nav-item:last-child div {\n    border-bottom: 1px solid rgba($mediumgray, 0.5);\n  }\n\n  aio-nav-item:first-child div {\n    border-top: 1px solid rgba($mediumgray, 0.5);\n  }\n}\n\n// Angular Version Selector\nmat-sidenav .doc-version {\n  padding: 8px;\n  border-top: 1px solid $lightgray;\n\n  select {\n    outline: none;\n    width: 100%;\n    background: rgba($lightgray, 0.5);\n    height: 32px;\n    border: 1px solid $lightgray;\n    color: $darkgray;\n\n    option {\n      font-family: $main-font;\n      font-size: 14px;\n    }\n  }\n}\n","nav#main-table-of-contents {\n    width: 200px;\n    height: 900px;\n    position: fixed;\n    right: 0;\n    top: 50px;\n    bottom: 100px;\n    margin-left: 32px;\n    background-color: $pink;\n}","// VARIABLES\n$hamburgerShownMargin: 0;\n$hamburgerHiddenMargin: 0 24px 0 -88px;\n\n// DOCS PAGE / STANDARD: TOPNAV TOOLBAR FIXED\nmat-toolbar.mat-toolbar {\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  z-index: 10;\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.3);\n\n  mat-toolbar-row {\n    padding: 0 16px 0 0;\n  }\n\n  mat-icon {\n    color: $white;\n  }\n}\n\n// HOME PAGE OVERRIDE: TOPNAV TOOLBAR\naio-shell.page-home mat-toolbar.mat-toolbar {\n  background-color: $pink;\n\n  @media (min-width: 481px) {\n    &:not(.transitioning) {\n      background-color: $pink;\n      transition: background-color 0.2s linear;\n    }\n  }\n}\n\n// MARKETING PAGES OVERRIDE: TOPNAV TOOLBAR AND HAMBURGER\naio-shell.page-home mat-toolbar.mat-toolbar,\naio-shell.page-features mat-toolbar.mat-toolbar,\naio-shell.page-events mat-toolbar.mat-toolbar {\n  box-shadow: none;\n\n  // FIXED TOPNAV TOOLBAR FOR SMALL MOBILE\n  @media (min-width: 481px) {\n    position: absolute;\n  }\n}\n\n// DOCS PAGES OVERRIDE: HAMBURGER\naio-shell.folder-api mat-toolbar.mat-toolbar,\naio-shell.folder-docs mat-toolbar.mat-toolbar,\naio-shell.folder-guide mat-toolbar.mat-toolbar,\naio-shell.folder-tutorial mat-toolbar.mat-toolbar {\n  @media (min-width: 992px) {\n    .hamburger.mat-button {\n      // Hamburger shown on non-marketing pages on large screens.\n      margin: $hamburgerShownMargin;\n    }\n  }\n}\n\n// HAMBURGER BUTTON\n.hamburger.mat-button {\n  height: 100%;\n  margin: $hamburgerShownMargin;\n  padding: 0;\n\n  &:not(.starting) {\n    transition-duration: 0.4s;\n    transition-property: color, margin;\n    transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);\n  }\n\n  @media (min-width: 992px) {\n    // Hamburger hidden by default on large screens.\n    // (Will be shown per doc.)\n    margin: $hamburgerHiddenMargin;\n  }\n\n  &:hover {\n    color: $offwhite;\n  }\n\n  & .mat-icon {\n    color: white;\n    position: inherit;\n  }\n}\n\n// HOME NAV-LINK\n.nav-link.home img {\n  position: relative;\n  margin-top: -21px;\n  margin-right: 20px;\n  top: 12px;\n  height: 40px;\n\n  @media (max-width: 992px) {\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n}\n\n// TOP MENU\naio-top-menu {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 80%;\n\n  ul {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    list-style-position: inside;\n    padding: 0px;\n    margin: 0px;\n\n    li {\n      padding-bottom: 2px;\n      list-style-type: none;\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.7;\n      }\n\n      &:focus {\n        background-color: $accentgrey;\n        outline: none;\n      }\n    }\n  }\n\n  a.nav-link {\n    margin: 0;\n    padding: 24px 16px;\n    cursor: pointer;\n\n    &:focus {\n      background: rgba($white, 0.15);\n      border-radius: 4px;\n      outline: none;\n      padding: 8px 16px;\n    }\n  }\n}\n\n// SEARCH BOX\naio-search-box.search-container {\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  width: 100%;\n  min-width: 150px;\n  height: 100%;\n\n  input {\n    color: $darkgray;\n    border: none;\n    border-radius: 100px;\n    background-color: $offwhite;\n    padding: 5px 16px;\n    margin-left: 8px;\n    width: 180px;\n    max-width: 240px;\n    height: 50%;\n    -webkit-appearance: none;\n\n    &:focus {\n      outline: none;\n    }\n\n    @include bp(big) {\n      transition: width 0.4s ease-in-out;\n\n      &:focus {\n        width: 50%;\n      }\n    }\n    @media (max-width: 480px) {\n      width: 150px;\n    }\n  }\n}\n\n// EXTERNAL LINK ICONS\n.app-toolbar {\n  .toolbar-external-icons-container {\n    display: flex;\n    flex-direction: row;\n    height: 100%;\n\n    a {\n      display: flex;\n      align-items: center;\n      margin-left: 16px;\n\n      @media screen and (max-width: 480px) {\n        margin-left: 8px;\n      }\n\n      &:hover {\n        opacity: 0.8;\n      }\n\n      img {\n        height: 24px;\n      }\n    }\n  }\n}\n","@media print {\n\n    // General Adjustments\n    * {\n        box-shadow: none !important;\n    }\n\n    h1 {\n        height: 40px !important;\n        color: $darkgray !important;\n    }\n\n    h1, h2, h3, h4, h5, h6 {\n        page-break-after: avoid;\n    }\n\n    ul, ol, img, code-example, table, tr, .alert, .l-subsection, .feature {\n        page-break-inside: avoid;\n    }   \n\n    table tbody tr:last-child td {\n        border-bottom: 1px solid $lightgray !important;\n    }\n\n    img {\n        max-width: 100% !important;\n    }\n\n    p {\n        widows: 4;\n    }\n\n    p > code, li > code, table code {\n        color: $pink !important;\n    }\n\n    // No Print Class\n    .no-print {\n        display: none !important;\n    }\n\n    // Custom No Print for Sidenav Menu\n    mat-sidenav.sidenav.mat-sidenav {\n        display: none !important;\n    }\n\n    // Custom No Print Element Adjustments\n    .mat-sidenav-content {\n        margin: 0 !important;\n    }\n\n    mat-sidenav-container.sidenav-container {\n        min-width: 100vw;\n    }\n\n    .sidenav-content {\n        overflow: visible;\n    }\n\n    .filetree {\n        max-width: 100%;\n    }\n\n    aio-code code {\n        border: none !important;\n    }\n\n    code-example {\n        pre.lang-bash code span {\n            color: $mediumgray !important;\n        }\n\n        pre.lang-sh code span {\n            color: $darkgray !important;\n        }\n\n        header {\n            border: 0.5px solid $lightgray;\n            color: $darkgray;\n        }\n    }\n\n    .content code { \n        border: 0.5px solid $lightgray;\n    }\n\n    .mat-tab-labels {\n        div.mat-tab-label {\n            &:not(.mat-tab-label-active) span {\n                font-style: italic;\n            }\n\n            &.mat-tab-label-active span {\n                font-weight: bold;\n            }\n        }\n    }\n\n    .api-header label { \n        color: $darkgray !important;\n        font-weight: bold !important;\n        margin: 2px !important;\n        padding: 0 !important;\n        display: block !important;\n    }\n\n    .feature-section img {\n        max-width: 70px !important;\n    }\n}","/* ==============================\n   MODULE STYLES\n   ============================== */\n\n   @import 'alert';\n   @import 'api-pages';\n   @import 'api-list';\n   @import 'buttons';\n   @import 'callout';\n   @import 'card';\n   @import 'code';\n   @import 'contribute';\n   @import 'contributor';\n   @import 'details';\n   @import 'edit-page-cta';\n   @import 'features';\n   @import 'filetree';\n   @import 'heading-anchors';\n   @import 'hr';\n   @import 'images';\n   @import 'progress-bar';\n   @import 'table';\n   @import 'presskit';\n   @import 'resources';\n   @import 'scrollbar';\n   @import 'search-results';\n   @import 'subsection';\n   @import 'toc';\n   @import 'select-menu';\n   @import 'deploy-theme';\n   @import 'notification';\n   @import 'label';\n",".alert {\n    padding: 16px;\n    margin: 24px 0px;\n    font-size: 14px;\n    color: $darkgray;\n    width: 100%;\n    box-sizing: border-box;\n\n    &.is-critical {\n        border-left: 10px solid $pink;\n        background-color: rgba($pink, 0.05);\n\n        h1, h2, h3, h4, h5, h6 {\n            color: $pink;\n        }\n    }\n\n    &.is-important {\n        border-left: 10px solid $orange;\n        background-color: rgba($orange, 0.05);\n\n        h1, h2, h3, h4, h5, h6 {\n            color: $orange;\n        }\n    }\n\n    &.is-helpful {\n        border-left: 10px solid $pink;\n        background-color: rgba($pink, 0.05);\n\n        h1, h2, h3, h4, h5, h6 {\n            color: $pink;\n        }\n    }\n\n    > * {\n        margin: 0;\n        padding: 8px 16px;\n    }\n}",".page-actions {\n  float: right;\n  .material-icons {\n    border-radius: 4px;\n    padding: 4px;\n    font-size: 20px;\n    &:hover {\n      background-color: $mist;\n    }\n  }\n}\n\n.api-header {\n  display: flex;\n  align-items: center;\n\n  @media screen and (max-width: 600px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  > h1 {\n    margin-right: 1rem;\n  }\n}\n\n.api-body {\n\n  .class-overview {\n    position: relative;\n\n    code-example {\n        clear: left;\n    }\n  }\n\n  .description img {\n    border: 1px solid #dfdfdf;\n    max-width: 100%;\n    width: 100%;\n  }\n\n  .method-table {\n    h3 {\n      margin: 6px 0;\n      font-weight: bold;\n    }\n\n    h4 {\n      font-size: 14px;\n      font-weight: bold;\n      margin-top: 12px;\n    }\n  }\n\n  .api-heading {\n    padding: 5px 0;\n    font-size: 16px;\n    font-weight: bold;\n  }\n\n  .short-description {\n    margin: 6px 0 0 10px;\n  }\n\n  .properties-table {\n    font-size: 14px;\n\n    thead th {\n      &:nth-child(1) {\n        width: 20%;\n      }\n      &:nth-child(2) {\n        width: 20%;\n      }\n    }\n  }\n\n  .parameters-table {\n    margin-top: 0;\n    font-size: 14px;\n    td:nth-child(1) {\n      width: 20%;\n    }\n  }\n\n  details.overloads {\n    margin-left: -8px;\n\n    summary {\n      height: inherit;\n      padding: 8px 12px;\n      h4 {\n        margin: 0;\n        clear: left;\n      }\n    }\n}\n\n  .api-section aio-code {\n    background-color: rgba(241, 241, 241, 0.2);\n  }\n\n  .from-constructor, .read-only-property {\n    font-style: italic;\n    color: $pink;\n  }\n}\n\n\n.deprecated-api-item {\n  text-decoration: line-through;\n}\n","/* API EDIT ICON */\n#api {\n  .api-filter .material-icons {\n    right: 48px;\n  }\n}\n\n/* API LIST STYLES */\n\naio-api-list {\n    div.form-search i.material-icons {\n        width: 20px;\n        pointer-events: none;\n    }\n\n    .form-search input {\n        width: 182px;\n    }\n\n    .api-list-container {\n      display: flex;\n      flex-direction: column;\n      margin: 0 auto;\n\n      h2 {\n        margin-top: 16px;\n      }\n    }\n}\n\n.api-filter {\n  display: flex;\n  margin: 0 auto;\n\n  @media (max-width: 600px) {\n      flex-direction: column;\n      margin: 16px auto;\n  }\n\n  .form-select-menu, .form-search {\n      margin: 8px;\n  }\n}\n\n/* LAYOUT */\n\n.docs-content {\n  position: relative;\n}\n\n.l-content-small {\n  padding: 16px;\n  max-width: 1100px;\n  margin: 0;\n\n  @media handheld and (max-width: $phone-breakpoint),\n  screen and (max-device-width: $phone-breakpoint),\n  screen and (max-width: $tablet-breakpoint) {\n    padding: 24px 0 0;\n  }\n}\n\n/* SEARCH BAR */\n\n.form-search {\n  position: relative;\n\n  input {\n    box-shadow: 0 2px 2px rgba($black, 0.24), 0 0 2px rgba($black, 0.12);\n    box-sizing: border-box;\n    border: 1px solid $white;\n    color: $blue-600;\n    font-size: 16px;\n    height: 32px;\n    line-height: 32px;\n    outline: none;\n    padding: 0 16px 0 32px;\n    transition: all .2s;\n\n    // PLACEHOLDER TEXT\n    &::-webkit-input-placeholder { /* Chrome/Opera/Safari */\n      color: $blue-grey-100;\n      font-size: 14px;\n    }\n    &::-moz-placeholder { /* Firefox 19+ */\n      color: $blue-grey-100;\n      font-size: 14px;\n    }\n    &:-ms-input-placeholder { /* IE 10+ */\n      color: $blue-grey-100;\n      font-size: 14px;\n    }\n    &:-moz-placeholder { /* Firefox 18- */\n      color: $blue-grey-100;\n      font-size: 14px;\n    }\n\n    &:focus {\n      border: 1px solid $blue-400;\n      box-shadow: 0 2px 2px rgba($blue-400, 0.24), 0 0 2px rgba($blue-400, 0.12);\n    }\n  }\n\n  .material-icons {\n    color: $blue-grey-100;\n    font-size: 20px;\n    left: 8px;\n    position: absolute;\n    top: 6px;\n    z-index: $layer-1;\n  }\n}\n\n/* API SYMBOLS */\n\n/* SYMBOL CLASS */\n\n.symbol {\n  border-radius: 2px;\n  box-shadow: 0 1px 2px rgba($black, .24);\n  color: $white;\n  display: inline-block;\n  font-size: 10px;\n  font-weight: 600;\n  line-height: 16px;\n  text-align: center;\n  width: 16px;\n\n  // SYMBOL TYPES\n  // Symbol mapping variables in *constants*\n  @each $name, $symbol in $api-symbols {\n    &.#{$name} {\n      background: map-get($symbol, background);\n\n      &:before {\n        content: map-get($symbol, content);\n      }\n    }\n  }\n}\n\n/* API HOMEE PAGE */\n\n/* API FILTER MENU */\n\n.api-filter {\n  aio-select {\n    width: 200px;\n\n    .symbol {\n      margin-right: 8px;\n    }\n  }\n\n  .form-search {\n    float: left;\n  }\n}\n\n/* API CLASS LIST */\n\n.docs-content .api-list {\n  list-style: none;\n  margin: 0 0 32px -8px;\n  padding: 0;\n  overflow: hidden;\n\n  @media screen and (max-width: 600px) {\n        margin: 0 0 0 -8px;\n    }\n\n  li {\n    font-size: 14px;\n    margin: 8px 0;\n    line-height: 14px;\n    padding: 0;\n    float: left;\n    width: 33%;\n    overflow: hidden;\n    min-width: 220px;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n\n    .symbol {\n      margin-right: 8px;\n    }\n    a {\n      color: $blue-grey-600;\n      display: inline-block;\n      line-height: 16px;\n      padding: 0 16px 0;\n      text-decoration: none;\n      transition: all .3s;\n      overflow: hidden;\n      text-overflow: ellipsis;\n\n      &:hover {\n        background: $blue-grey-50;\n        color: $blue-500;\n      }\n    }\n\n    .stability {\n      &.deprecated {\n        text-decoration: line-through;\n      }\n\n      &.experimental {\n        font-style: italic;\n      }\n    }\n  }\n}\n\n.docs-content .h2-api-docs,\n.docs-content .h2-api-docs:first-of-type {\n  font-size: 18px;\n  line-height: 24px;\n  margin-top: 0;\n}\n\n.code-links {\n  a {\n    code, .api-doc-code {\n      color: #1E88E5 !important;\n    }\n  }\n}\n\n.openParens {\n  margin-top: 15px;\n}\n\n.endParens {\n  margin-bottom: 20px !important;\n}\n\np {\n\n  &.selector {\n    margin: 0;\n  }\n\n  &.location-badge {\n    margin: 0 0 16px 16px !important;\n  }\n\n  .api-doc-code {\n    border-bottom: 0;\n\n    :hover {\n      border-bottom: none;\n    }\n  }\n}\n\n.row-margin {\n  margin-bottom: 36px;\n  h2 {\n    line-height: 28px;\n  }\n}\n\n.code-margin {\n  margin-bottom: 8px;\n}\n\n.no-bg {\n  background: none;\n  padding: 0;\n}\n\n.no-bg-with-indent {\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 16px;\n  margin-top: 6px;\n  margin-bottom: 0;\n  background: none;\n}\n\n.code-background {\n  padding: 0 5px 0;\n\n  span.pln {\n    color: #1E88E5 !important;\n  }\n}\n\n.code-anchor {\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n}\n\n.api-doc-code {\n  font-size: 14px;\n  color: #1a2326;\n\n  // the last .pln (white space) creates additional spacing between sections of the api doc. Remove it.\n  &.no-pln {\n    .pln:last-child {\n      display: none;\n    }\n  }\n}\n\n@media screen and (max-width: 600px) {\n  .docs-content {\n    // Overrides display flex from angular material.\n    // This was added because Safari doesn't play nice with layout=\"column\".\n    // Look of API doc in Chrome and Firefox remains the same, and is fixed for Safari.\n    .layout-xs-column {\n      display: block !important;\n    }\n  }\n\n  .api-doc-code {\n    font-size: 12px;\n  }\n\n  p.location-badge {\n    position: relative;\n    font-size: 11px;\n  }\n}\n","/* Button Styles */\n\n.button,\na.button.mat-button {\n  display: inline-block;\n  line-height: 32px;\n  padding: 0px 16px;\n  font-size: 14px;\n  font-weight: 400;\n  border-radius: 3px;\n  text-decoration: none;\n  text-transform: uppercase;\n  overflow: hidden;\n  border: none;\n\n  // SIZES\n  &.button-small {\n    font-size: 12px;\n    line-height: 24px;\n    padding: 0px 8px;\n  }\n\n  &.button-large {\n    font-size: 15px;\n    line-height: 48px;\n    padding: 0px 24px;\n  }\n\n  &.button-x-large {\n    font-size: 16px;\n    line-height: 56px;\n    padding: 0px 24px;\n  }\n\n\n  // COLORS\n\n  &.button-secondary {\n    background: $mediumgray;\n    color: rgba($white, .87);\n  }\n\n  &.button-plain {\n    background: $white;\n    color: rgba($darkgray, .87);\n  }\n\n  &.button-subtle {\n    background: $mediumgray;\n    color: darken($offwhite, 10%);\n  }\n\n  &.button-navy {\n    background: $pink;\n    color: rgba($white, .87);\n  }\n\n  &.button-banner {\n    background: $darkgray;\n    color: rgba($white, .87);\n  }\n\n  // &.button-shield,\n  // &.button-shield.mat-button {\n  //   background-color: $pink;\n  //   background: $pink url('assets/images/logos/angular/angular_whiteTransparent.svg') 24px 13px no-repeat;\n  //   color: rgba($white, .87);\n  //   padding-left: 54px;\n  //   background-size: 22px 22px;\n\n  //   @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2) {\n  //     background: $pink url('assets/images/logos/angular/angular_whiteTransparent.svg') 24px 13px no-repeat;\n  //     background-size: 22px 22px;\n\n  //   }\n  // }\n}\n\n.cta-bar {\n  text-align: center;\n\n  .button {\n    margin: 0px 8px;\n    box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);\n    transition: all .2s ease-in-out;\n    &:hover {\n        transform: scale(1.1);\n        color: $offwhite;\n    }\n  }\n}\n\na.filter-button {\n  width: 140px;\n  font-size: 14px;\n  padding: 0px 16px;\n  margin: 8px;\n  line-height: 48px;\n  border: 2px solid $pink;\n  border-radius: 4px;\n\n  &:hover {\n    background-color: $pink;\n    color: white;\n  }\n}\n\n[mat-button], [mat-raised-button], [mat-button], [mat-raised-button] {\n  text-transform: uppercase;\n}\n",".callout {\n  @extend .alert;\n  padding: 0px;\n  border-left: none !important;\n  border-radius: 4px;\n\n  header {\n    color: $white;\n    line-height: 24px;\n    font-weight: 500;\n    text-transform: uppercase;\n    border-radius: 4px 4px 0 0;\n  }\n\n  p {\n    padding: 16px;\n    margin: 0px;\n    font-size: 14px;\n  }\n\n  &.is-critical {\n    border-color: $brightred;\n    background: rgba($brightred, 0.05);\n\n    header {\n      background: $brightred;\n    }\n  }\n\n  &.is-important {\n    border-color: $orange;\n    background: rgba($orange, 0.05);\n\n    header {\n      background: $amber-700;\n    }\n  }\n\n  &.is-helpful {\n    border-color: $pink;\n    background: rgba($pink, 0.05);\n\n    header {\n      background: $pink;\n    }\n  }\n}",".card-container {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    margin: 24px 0;\n}\n\n.docs-card {\n  @include card(194px, 30%);\n  max-width: 340px;\n  min-width: 262px;\n  margin: 24px 8px;\n  padding-bottom: 48px;\n  position: relative;\n\n  &:hover {\n    text-decoration: none;\n\n    section {\n      color: $pink;\n    }\n\n    p {\n      color: $darkgray;\n      padding: 0 16px;\n    }\n\n    .card-footer {\n      line-height: 32px;\n      padding: 8px 16px;\n      background-color: rgba($pink, 0.1);\n      color: $pink;\n    }\n  }\n\n\n  section {\n    color: $darkgray;\n    font-size: 20px;\n    line-height: 24px;\n    margin: 0;\n    padding: 32px 0 24px;\n    text-transform: none;\n    text-align: center;\n  }\n\n  p {\n    color: $darkgray;\n    font-size: 13px;\n    line-height: 24px;\n    padding: 0 16px;\n    margin: 0;\n    text-align: center;\n  }\n\n  .card-footer {\n    bottom: 0;\n    border-top: 0.5px solid $lightgray;\n    box-sizing: border-box;\n    line-height: 48px;\n    left: 0;\n    position: absolute;\n    right: 0;\n    text-align: right;\n    color: $mediumgray;\n\n    a {\n      color: $mediumgray;\n      font-size: 13px;\n    }\n  }\n  .card-footer.center {\n    text-align: center;\n  }\n}\n","code-example, code-tabs {\n    clear: both;\n    display: block;\n}\n\ncode-example,\ncode-tabs mat-tab-body {\n  &:not(.no-box) {\n    background-color: rgba($backgroundgray, 0.2);\n    border: 0.5px solid $lightgray;\n    border-radius: 5px;\n    color: $darkgray;\n    margin: 16px auto;\n  }\n\n  &.no-box {\n    pre {\n      margin: 0;\n    }\n    code {\n      background-color: transparent;\n    }\n  }\n\n  code {\n    overflow: auto;\n  }\n}\n\n// TERMINAL / SHELL TEXT STYLES\n\ncode-example.code-shell, code-example[language=sh], code-example[language=bash] {\n  background-color: $darkgray;\n}\n\ncode-example header {\n  background-color: $accentgrey;\n  border-radius: 5px 5px 0 0;\n  color: $offwhite;\n  font-size: 16px;\n  padding: 8px 16px;\n}\n\ncode-example.avoid header,\ncode-example.avoidFile header {\n  border: 2px solid $anti-pattern;\n  background: $anti-pattern;\n}\n\ncode-example.avoid,\ncode-example.avoidFile,\ncode-tabs.avoid mat-tab-body,\ncode-tabs.avoidFile mat-tab-body {\n  border: 0.5px solid $anti-pattern;\n}\n\ncode-tabs div .mat-tab-body-content {\n  height: auto;\n}\n\ncode-tabs .mat-tab-body-wrapper mat-tab-body .mat-tab-body {\n  overflow-y: hidden;\n}\n\ncode-tabs mat-tab-body-content .fadeIn {\n  animation: opacity 2s ease-in;\n}\n\naio-code pre {\n    display: flex;\n    min-height: 32px;\n    margin: 16px 24px;\n    white-space: pre-wrap;\n    align-items: center;\n\n    code span {\n      line-height: 24px;\n    }\n}\n\n\n.code-missing {\n  color: $darkred;\n}\n\n\n.copy-button,\n.edit-button {\n  position: absolute;\n  top: -8px;\n  right: -32px;\n\n  color: $blue-grey-200;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  &:hover {\n    color: $mediumgray;\n  }\n}\n.edit-button {\n  right: 0;\n}\n\n.lang-sh .copy-button, .lang-bash .copy-button {\n  color: $mediumgray;\n  &:hover {\n    color: $lightgray;\n  }\n}\n\n.code-tab-group .mat-tab-label {\n  white-space: nowrap;\n}\n\n.code-tab-group .mat-tab-body-content {\n  height: auto;\n  transform: none;\n}\n\n\n[role=\"tabpanel\"] {\n    transition: none;\n}\n\n.sidenav-content code a {\n  color: inherit;\n  font-size: inherit;\n}\n\n/* PRETTY PRINTING STYLES for prettify.js. */\n\n.prettyprint {\n  position: relative;\n}\n\n/* Specify class=linenums on a pre to get line numbering */\nol.linenums {\n  margin: 0;\n  font-family: $main-font;\n  color: #B3B6B7;\n  li {\n    margin: 0;\n    font-family: $code-font;\n    font-size: 90%;\n    line-height: 24px;\n  }\n}\n\n/* The following class|color styles are derived from https://github.com/google/code-prettify/blob/master/src/prettify.css*/\n\n/* SPAN elements with the classes below are added by prettyprint. */\n.pln { color: #000 }  /* plain text */\n\n@media screen {\n  .str { color: #800 }  /* string content */\n  .kwd { color: #00f }  /* a keyword */\n  .com { color: #060 }  /* a comment */\n  .typ { color: #de0000 }  /* a type name */\n  .lit { color: #0074af }  /* a literal value */\n  /* punctuation, lisp open bracket, lisp close bracket */\n  .pun, .opn, .clo { color: #660 }\n  .tag { color: #008 }  /* a markup tag name */\n  .atn { color: #606 }  /* a markup attribute name */\n  .atv { color: #800 }  /* a markup attribute value */\n  .dec, .var { color: #606 }  /* a declaration; a variable name */\n  .fun { color: #de0000 }  /* a function name */\n}\n\n/* Use higher contrast and text-weight for printable form. */\n@media print, projection {\n  .str { color: #060 }\n  .kwd { color: #006; font-weight: bold }\n  .com { color: #600; font-style: italic }\n  .typ { color: #404; font-weight: bold }\n  .lit { color: #044 }\n  .pun, .opn, .clo { color: #440 }\n  .tag { color: #006; font-weight: bold }\n  .atn { color: #404 }\n  .atv { color: #060 }\n}\n\n/* SHELL / TERMINAL CODE BLOCKS */\n\ncode-example.code-shell, code-example[language=sh], code-example[language=bash] {\n  & .pnk, .blk,.pln, .otl, .kwd, .typ, .tag, .str, .atv, .atn, .com, .lit, .pun, .dec {\n    color: $codegreen;\n  }\n}\n",".contribute-container {\n  h2 {\n    margin: 0;\n  }\n\n  .l-sub-section {\n    width: 90%;\n    margin-bottom: 20px;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n}\n","aio-contributor-list {\n  @media handheld and (max-width: 480px), screen and (max-width: 480px), screen and (max-width: 900px) {\n    .grid-fluid{\n      width: auto;\n    }\n  }\n\n  @media handheld and (max-width: 480px), screen and (max-width: 480px), screen and (max-width: 900px) {\n    .grid-fluid{\n      margin-left: 20px;\n      margin-right: 20px;\n      float: none;\n      display: block;\n      width: auto;\n    }\n  }\n}\n\n.group-buttons {\n  margin: 32px auto;\n\n  a {\n    &.selected {\n      background-color: $pink;\n      color: white;\n    }\n  }\n}\n\n.contributor-group {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\naio-contributor {\n  background: $white;\n  margin: 8px;\n  position: relative;\n  cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 0 2px 2px rgba(10, 16, 20, 0.24), 0 0 2px rgba(10, 16, 20, 0.12);\n  transition: all .3s;\n  perspective: 800px;\n\n  &:hover {\n    transform: translate3d(0,-3px,0);\n    box-shadow: 0 8px 8px rgba(10, 16, 20, 0.24), 0 0 8px rgba(10, 16, 20, 0.12);\n\n    .contributor-image {\n      transform: scale(1.05);\n    }\n\n    .contributor-info {\n      opacity: 1;\n    }\n  }\n\n  .contributor-info {\n    background: rgba($darkgray, 0.5);\n    height: 168px;\n    width: 168px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    opacity: 0;\n    border-radius: 50%;\n\n    [mat-button] {\n      color: $white;\n      font-size: 14px;\n      font-weight: 500;\n      margin: 8px;\n      padding: 0;\n\n      &:hover {\n        color: $lightgray;\n      }\n\n      &.icon {\n        min-width: 20px;\n        width: 20px;\n\n        .fa-2x {\n          font-size: 20px;\n        }\n      }\n    }\n  }\n\n  div.contributor-card {\n    width: 250px;\n    height: 270px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    position: relative;\n    overflow: hidden;\n    border-radius: 4px;\n    transform-style:preserve-3d;\n    transition:transform ease 500ms;\n\n    h3 {\n      margin: 8px 0;\n    }\n\n    .card-front, .card-back {\n      width: 100%;\n      height: 100%;\n      text-align: center;\n      display: flex;\n      flex-direction: column;\n      box-sizing: border-box;\n    }\n\n    .card-front {\n      justify-content: center;\n    }\n\n    .card-back {\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      padding: 16px 24px;\n      transform:rotateY(180deg);\n\n      section {\n        display: none;\n      }\n\n      p {\n        margin: 8px 0;\n        font-size: 12px;\n        line-height: 14px;\n        text-align: left;\n      }\n\n    }\n\n    &.flipped {\n      transform:rotateY(180deg);\n      .card-front {\n        display: none;\n      }\n    }\n  }\n\n  .contributor-image {\n    display: flex;\n    justify-content: center;\n    border-radius: 50%;\n    align-items: center;\n    height: 168px;\n    width: 168px;\n    background-size: cover;\n    background-position: center;\n    margin: 8px auto;\n    border: 2px solid $lightgray;\n    transition: all .2s ease-in-out;\n  }\n\n  section {\n    font-size: 14px;\n    font-weight: 500;\n    padding: 8px;\n    margin: 0;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    text-transform: uppercase;\n  }\n\n  p {\n    cursor: pointer;\n    font-size: 14px;\n    line-height: 18px;\n    margin: 8px 16px;\n    text-overflow: ellipsis;\n    overflow: scroll;\n    font-weight: 400;\n  }\n}\n","/*\n * General styling to make detail/summary tags look a bit more material\n * To get the best out of it you should structure your usage like this:\n *\n * ```\n * <details>\n *   <summary>Some title</summary>\n *   <div class=\"details-content\">\n *     Some content\n *   </div>\n *  </details>\n *\n */\n\nsummary {\n  cursor: pointer;\n  font-size: 16px;\n  position: relative;\n  padding: 16px 24px;\n  color: $black;\n  height: 16px;\n  display: block; // Remove the built in details marker in FF\n\n  &::-webkit-details-marker {\n    display: none; // Remove the built in details marker in webkit\n  }\n\n  &::before {\n    content: '\\E5CE'; // See https://material.io/icons/#ic_expand_less\n    font-family: 'Material Icons';\n    font-size: 24px;\n    -webkit-font-smoothing: antialiased;\n    @include rotate(0deg); // We will rotate 180 degrees when details is open\n    float: right;\n  }\n}\n\ndetails {\n  box-shadow: 0 1px 4px 0 rgba($black, 0.37);\n\n  .detail-contents {\n    padding: 16px 24px;\n  }\n\n  &[open] > summary::before {\n    @include rotate(180deg); // Rotate the icon\n  }\n}\n",".edit-page-cta {\n    font-weight: 400;\n    font-size: 14px;\n    color: $pink;\n    text-align: right;\n    margin-right: 32px;\n    display: block;\n    position: absolute;\n    right: 0;\n}","// FEATURES MARKETING PAGE SPECIFIC STYLES\n\n.feature-section {\n  margin: 0 0 32px;\n\n  .feature-header, .text-headline {\n    text-align: center;\n  }\n\n  .feature-header img {\n    margin: 16px;\n  }\n\n  .feature-title {\n    font-size: 16px;\n    font-weight: 500;\n    margin: 8px 0px;\n    clear: both;\n  }\n\n  .feature-row {\n    display: flex;\n    flex-wrap: wrap;\n\n    @media (max-width: 600px) {\n      flex-direction: column;\n    }\n\n    .feature {\n      max-width: 300px;\n      margin: 0 16px;  \n      \n      @media (max-width: 768px) {\n        max-width: 100%;\n      }\n    }\n  }\n}",".filetree {\n  background: $offwhite;\n  border: 4px solid $lightgray;\n  border-radius: 4px;\n  margin: 0 0 24px 0;\n  padding: 16px 32px;\n\n  .file {\n    display: block;\n    font-family: $main-font;\n    letter-spacing: 0.3px;\n    line-height: 32px;\n    color: $darkgray;\n  }\n\n  .children {\n    padding-left: 24px;\n    position: relative;\n    overflow: hidden;\n\n    .file {\n      position: relative;\n\n      &:before {\n        content: '';\n        left: -18px;\n        bottom: 16px;\n        width: 16px;\n        height: 9999px;\n        position: absolute;\n        border-width: 0 0 1px 1px;\n        border-style: solid;\n        border-color: $lightgray;\n        border-radius: 0 0 0 3px;\n      }\n    }\n  }\n}",".sidenav-content {\n  h1, h2, h3, h4, h5, h6 {\n\n    .header-link {\n      color: $mediumgray;\n      margin: 0 4px;\n      text-decoration: none;\n      user-select: none;\n      visibility: hidden;\n      display: inline-block;\n      vertical-align: text-top;\n    }\n\n    &:hover .header-link {\n      visibility: visible;\n    }\n  }\n}\n","hr {\n    border: none;\n    background: $lightgray;\n    height: 1px;\n}\n\n.hr-margin {\n    display: block;\n    height: 1px;\n    border: 0;\n    margin-top: 16px;\n    margin-bottom: 16px;\n    padding: 0;\n}",".content {\n  img {\n\n    &.right {\n      clear: both;\n      float: right;\n      margin-left: 20px;\n      margin-bottom: 20px;\n    }\n\n    &.left {\n      clear: both;\n      float: left;\n      margin-right: 20px;\n      margin-bottom: 20px;\n    }\n\n    @media (max-width: 1300px) {\n      max-width: 100%;\n      height: auto;\n    }\n\n    @media (max-width: 600px) {\n      float: none !important;\n      &.right {\n        margin-left: 0;\n      }\n      &.left {\n        margin-right: 0;\n      }\n    }\n  }\n\n  figure {\n    border-radius: 4px;\n    background: $white;\n    padding: 20px;\n    display: inline-block;\n    box-shadow: 2px 2px 5px 0 rgba(0, 0, 0, .2);\n    margin: 0 0 14px 0;\n\n    img {\n      border-radius: 4px;\n    }\n  }\n}\n",".progress-bar-container {\n  height: 2px;\n  overflow: hidden;\n  position: fixed;\n  top: 0;\n  width: 100vw;\n  z-index: 11;\n}\n","table {\n  margin: 24px 0px;\n  box-shadow: 0 2px 2px rgba($black, 0.24), 0 0 2px rgba($black, 0.12);\n  border-radius: 2px;\n  background: $offwhite;\n\n  &.is-full-width {\n    width: 100%;\n  }\n\n  &.is-fixed-layout {\n    table-layout: fixed;\n  }\n\n  thead > {\n    vertical-align: middle;\n    border-color: inherit;\n\n    tr {\n      vertical-align: inherit;\n      border-color: inherit;\n    }\n\n    tr > th {\n      background: rgba($lightgray, 0.2);\n      border-bottom: 1px solid $lightgray;\n      color: $darkgray;\n      font-size: 12px;\n      font-weight: 500;\n      padding: 8px 24px;\n      text-align: left;\n      text-transform: uppercase;\n      line-height: 28px;\n    }\n  }\n\n  tbody > tr {\n    th,\n    td {\n      border-bottom: 1px solid $lightgray;\n      padding: 16px;\n      text-align: left;\n      line-height: 24px;\n      vertical-align: top;\n\n      @media (max-width: 480px) {\n        &:before {\n          // content: **ADD TABLE HEADER**;\n          display: inline-block;\n        }\n      }\n\n    }\n\n    td {\n      letter-spacing: 0.30px;\n\n    tr td:first-child {\n      @media (max-width: 480px) {\n        background-color: $lightgray;\n      }\n    }\n\n    }\n\n    th {\n      background: rgba($lightgray, 0.2);\n      border-right: 1px solid $lightgray;\n      font-weight: 600;\n      max-width: 100px;\n    }\n\n    &:last-child td {\n      border: none;\n\n      @media (max-width: 480px) {\n        border-bottom: 1px solid $lightgray;\n      }\n    }\n  }\n}\n\n#cheatsheet {\n\n  table tbody td {\n    overflow: auto;\n  }\n\n  @media only screen and (max-width: 990px) {\n\n    /* Force table to not be like tables anymore */\n    table, thead, tbody, tfoot, tr, th, td {\n      display: block;\n      position: relative;\n      max-width: 100%;\n\n      code {\n        padding: 0;\n        background-color: inherit;\n      }\n    }\n\n    th {\n      border-right: none;\n    }\n\n    th, td {\n      &:not(:last-child) {\n        border-bottom: none;\n        padding-bottom: 0px;\n      }\n    }\n  }\n}\n",".presskit-container {\n  padding: 0 32px 32px 32px;\n\n  h2 {\n    color: #37474F;\n  }\n\n  .l-space-left-3 {\n    margin-left: 3 * 8px;\n  }\n\n  .cc-by-anchor {\n    text-decoration: underline;\n    color: grey !important;\n  }\n\n  .presskit-row {\n    margin: 48px 0;\n    width: 100%;\n\n    .presskit-inner {\n      display: flex;\n      align-items: center;\n\n      @media(max-width: 599px) {\n        flex-direction: column;\n      }\n\n      h3 {\n        font-weight: 500;\n        margin-top: 0;\n        margin-bottom: 0;\n        color: #455A64;\n\n        @media(max-width: 599px) {\n          padding-bottom: 16px;\n        }\n      }\n\n      .transparent-img-bg {\n        margin-top: 10px;\n        border-radius: 4px;\n        width: 128px;\n        height: 128px;\n        background-color: #34474F;\n      }\n\n      ul {\n        padding: 0;\n        list-style-type: none;\n\n        @media(max-width: 599px) {\n          padding: 0 !important;\n          margin: 0 !important;\n        }\n\n        li {\n          margin: 0 0 8px 0;\n        }\n      }\n    }\n\n    .presskit-image-container {\n\n      @media(max-width: 599px) {\n        text-align: center;\n      }\n\n      img {\n        width: 128px;\n        height: 128px;\n        margin-bottom: 8px * 2;\n      }\n    }\n  }\n\n  .presskit-row:first-child {\n    margin-top: 0;\n\n    @media(max-width: 599px) {\n      margin-top: 48px;\n    }\n  }\n}\n",".showcase {\n  width: 80%;\n}\n\n.c-resource-nav {\n  width: 20%;\n}\n\n.resources-container {\n  position: relative;\n}\n\n.grid-fixed:after, .grid-fixed:before {\n  content: '.';\n  clear: both;\n  display: block;\n  overflow: hidden;\n  visibility: hidden;\n  font-size: 0;\n  line-height: 0;\n  width: 0;\n  height: 0;\n}\n\n@media handheld and (max-width: 480px), screen and (max-width: 480px), screen and (max-width: 900px) {\n  .grid-fixed {\n    width: auto;\n  }\n}\n\n@media handheld and (max-width: 480px), screen and (max-width: 480px), screen and (max-width: 900px) {\n  .grid-fixed .c3, .grid-fixed .c8 {\n    margin-left: 20px;\n    margin-right: 20px;\n    float: none;\n    display: block;\n    width: auto;\n  }\n}\n\n@media handheld and (max-width: 480px), screen and (max-width: 480px), screen and (max-width: 480px) {\n  .grid-fixed .c3, .grid-fixed .c8 {\n    margin-left: 0px;\n    margin-right: 0px;\n    float: none;\n    display: block;\n    width: auto;\n  }\n}\n\n@media handheld and (max-width: 900px), screen and (max-width: 900px) {\n  /* line 6, ../scss/_responsive.scss */\n  .grid-fixed{\n    margin: 0 auto;\n    *zoom: 1;\n  }\n  .grid-fixed:after, .grid-fixed:before, {\n    content: '.';\n    clear: both;\n    display: block;\n    overflow: hidden;\n    visibility: hidden;\n    font-size: 0;\n    line-height: 0;\n    width: 0;\n    height: 0;\n  }\n}\n\n@media handheld and (max-width: 480px), screen and (max-width: 480px) {\n  /* line 6, ../scss/_responsive.scss */\n  .grid-fixed {\n    margin: 0 auto;\n    *zoom: 1;\n  }\n  .grid-fixed:after, .grid-fixed:before {\n    content: '.';\n    clear: both;\n    display: block;\n    overflow: hidden;\n    visibility: hidden;\n    font-size: 0;\n    line-height: 0;\n    width: 0;\n    height: 0;\n  }\n}\n\naio-resource-list {\n\n  .shadow-1 {\n    transition: box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);\n    box-shadow: 0 1px 4px 0 rgba($black, 0.37);\n  }\n\n  .showcase {\n    margin-bottom: 8px * 6;\n    border-radius: 4px;\n  }\n\n  .c-resource {\n    h4 {\n      margin: 0;\n      line-height: 24px;\n    }\n\n    p {\n      margin: 0;\n    }\n  }\n\n  .c-resource-nav {\n    position: fixed;\n    top: 142px;\n    right: 32px;\n    width: 8px * 20;\n    z-index: 1;\n    background-color: #fff;\n    border-radius: 2px;\n\n    a {\n      color: #373E41;\n      text-decoration: none;\n    }\n\n    .category {\n      padding: 10px 0;\n\n      .category-link {\n        display: block;\n        margin: 2px 0;\n        padding: 3px 14px;\n        font-size: 18px !important;\n\n        &:hover {\n          background: #edf0f2;\n          color: #2B85E7;\n        }\n      }\n    }\n\n    .subcategory {\n      .subcategory-link {\n        display: block;\n        margin: 2px 0;\n        padding: 4px 14px;\n\n        &:hover {\n          background: #edf0f2;\n          color: #2B85E7;\n        }\n      }\n    }\n  }\n\n  .h-anchor-offset {\n    display: block;\n    position: relative;\n    top: -20px;\n    visibility: hidden;\n  }\n\n  .l-flex--column {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .c-resource-header {\n    margin-bottom: 16px;\n  }\n\n  .c-contribute {\n    margin-bottom: 24px;\n  }\n\n  .c-resource-header h2 {\n    margin: 0;\n  }\n\n  .subcategory-title {\n    padding: 16px 23px;\n    margin: 0;\n    background-color: $mist;\n    color: #373E41;\n  }\n\n  .h-capitalize {\n    text-transform: capitalize;\n  }\n\n  .h-hide {\n    display: none;\n  }\n\n  .resource-row-link {\n    color: #1a2326;\n    border: transparent solid 1px;\n    margin: 0;\n    padding: 16px 23px 16px 23px;\n    position: relative;\n    text-decoration: none;\n    transition: all .3s;\n  }\n\n  .resource-row-link:hover {\n    color: #1a2326;\n    text-decoration: none;\n    border-color: #2B85E7;\n    border-radius: 4px;\n    box-shadow: 0 8px 8px rgba(1, 67, 163, .24), 0 0 8px rgba(1, 67, 163, .12), 0 6px 18px rgba(43, 133, 231, .12);\n    transform: translateY(-2px);\n  }\n\n  @media(max-width: 900px) {\n    .c-resource-nav {\n      display: none;\n    }\n  }\n}\n","body::-webkit-scrollbar, mat-sidenav.sidenav::-webkit-scrollbar, .mat-sidenav-content::-webkit-scrollbar {\n  height: 6px;\n  width: 6px;\n}\n\nbody::-webkit-scrollbar-track, mat-sidenav.sidenav::-webkit-scrollbar-track, .mat-sidenav-content::-webkit-scrollbar-track {\n  -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\n}\n\nbody::-webkit-scrollbar-thumb, mat-sidenav.sidenav::-webkit-scrollbar-thumb, .mat-sidenav-content::-webkit-scrollbar-thumb {\n  background-color: $mediumgray;\n  outline: 1px solid $darkgray;\n}\n\n.search-results::-webkit-scrollbar, .toc-container::-webkit-scrollbar {\n  height: 4px;\n  width: 4px;\n}\n\n.search-results::-webkit-scrollbar-track, .toc-container::-webkit-scrollbar-track {\n  -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\n}\n\n.search-results::-webkit-scrollbar-thumb, .toc-container::-webkit-scrollbar-thumb {\n  background-color: $mediumgray;\n  outline: 1px solid slategrey;\n}\n","aio-search-results {\n    z-index: 10;\n}\n\n.search-results {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    overflow: auto;\n    padding: 68px 32px 0;\n    color: $offwhite;\n    width: auto;\n    max-height: 95vh;\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    z-index: 5;\n    background-color: $darkgray;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.3);\n    box-sizing: border-box;\n\n    @media (max-width: 480px) {\n        display: block;\n        .search-area {\n            display: block;\n            margin: 16px 16px;\n        }\n    }\n}\n\naio-search-results.embedded .search-results {\n    padding: 0;\n    color: inherit;\n    width: auto;\n    max-height: 100%;\n    position: relative;\n    background-color: inherit;\n    box-shadow: none;\n    box-sizing: border-box;\n\n    .search-area a {\n        color: lighten($darkgray, 10);\n        &:hover {\n            color: $accentgrey;\n        }\n    }\n}\n\n.search-area {\n    display: flex;\n    flex-direction: column;\n    margin: 16px 16px;\n    height: 100%;\n\n    h3 {\n        font-size: 16px;\n        font-weight: 400;\n        margin: 10px 0px 5px;\n        text-transform: uppercase;\n    }\n\n    ul {\n        margin: 0;\n        padding: 0;\n\n        li {\n            display: inline-block;\n            list-style: none;\n            min-width: 270px;\n            padding: .5em 1.5em;\n        }\n    }\n\n    a {\n        font-size: 14px;\n        color: $lightgray;\n        text-decoration: none;\n        font-weight: normal;\n        &:hover {\n            color: $white;\n        }\n        &:visited {\n          text-decoration: none;\n        }\n\n        span.symbol {\n          margin-right: 8px;\n        }\n    }\n\n    .priority-pages {\n        padding: 0.5rem 0;\n        a {\n            font-weight: bold;\n        }\n    }\n\n    @include bp(tiny) {\n        display: block;\n    }\n}\n",".l-sub-section {\n    color: $darkgray;\n    background-color: rgba($pink, 0.05);\n    border-left: 8px solid $pink;\n    padding: 16px;\n    margin-bottom: 8px;\n    display: table;\n    clear: both;\n    width: 100%;\n    box-sizing: border-box;\n\n    h3 {\n        margin: 8px 0 0;\n    }\n\n    a:hover {\n        color: $pink;\n        text-decoration: underline;\n    }\n}",".toc-container {\n  width: 18%;\n  position: fixed;\n  top: 76px;\n  right: 0;\n  bottom: 12px;\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n\naio-toc.embedded {\n  @media (min-width: 801px) {\n    display: none;\n  }\n\n  .toc-inner {\n    padding: 12px 0 0 0;\n\n    .toc-heading {\n      margin: 0 0 8px;\n    }\n  }\n}\n\n.toc-inner {\n  font-size: 13px;\n  overflow-y: visible;\n  padding: 4px 0 0 10px;\n\n  .toc-heading,\n  .toc-list .h1 {\n    font-size: 115%;\n  }\n\n  .toc-heading {\n    font-weight: 500;\n    margin: 0 0 16px 8px;\n    padding: 0;\n  }\n\n  .toc-heading.secondary {\n    position: relative;\n    top: -8px;\n\n    &:hover {\n      color: $accentgrey;\n    }\n  }\n\n  button.toc-heading,\n  button.toc-more-items {\n    cursor: pointer;\n    display: inline-block;\n    background: 0;\n    background-color: transparent;\n    border: none;\n    box-shadow: none;\n    padding: 0;\n    text-align: start;\n\n    &.embedded:focus {\n      outline: none;\n      background: $lightgray;\n    }\n  }\n\n  button.toc-heading {\n    mat-icon.rotating-icon {\n      height: 18px;\n      width: 18px;\n      position: relative;\n      left: -4px;\n      top: 5px;\n    }\n\n    &:hover:not(.embedded) {\n      color: $accentgrey;\n    }\n  }\n\n  button.toc-more-items {\n    color: $mediumgray;\n    top: 10px;\n    position: relative;\n\n    &:hover {\n      color: $accentgrey;\n    }\n  }\n\n  button.toc-more-items::after {\n    content: 'expand_less';\n  }\n\n  button.toc-more-items.collapsed::after {\n    content: 'more_horiz';\n  }\n\n\n  .mat-icon.collapsed {\n    @include rotate(0deg);\n  }\n\n  .mat-icon:not(.collapsed) {\n    @include rotate(90deg);\n    // margin: 4px;\n  }\n\n  ul.toc-list {\n    list-style-type: none;\n    margin: 0;\n    padding: 0 8px 0 0;\n\n    @media (max-width: 800px) {\n      width: auto;\n    }\n\n    li {\n      box-sizing: border-box;\n      font-size: 12px;\n      line-height: 16px;\n      padding: 3px 0 3px 12px;\n      position: relative;\n      transition: all 0.3s ease-in-out;\n\n      &.h1:after {\n        content: '';\n        display: block;\n        height: 1px;\n        width: 40%;\n        margin: 7px 0 4px 0;\n        background: #DBDBDB;\n        clear: both;\n      }\n\n      &.h3 {\n        padding-left: 24px;\n      }\n\n      a {\n        font-size: inherit;\n        color: lighten($darkgray, 10);\n        display:table-cell;\n        overflow: visible;\n        font-size: 12px;\n        display: table-cell;\n      }\n\n      &:hover a {\n        color: $accentgrey;\n      }\n\n      &.active {\n        a {\n          color: $pink;\n          font-weight: 500;\n\n          &:before {\n            content: '';\n            border-radius: 50%;\n            left: -3px;\n            top: 12px;\n            background: $pink;\n            position: absolute;\n            width: 6px;\n            height: 6px;\n          }\n        }\n      }\n    }\n\n    &:not(.embedded) li {\n      &:before {\n        border-left: 1px solid $lightgray;\n        bottom: 0;\n        content: '';\n        left: 0;\n        position: absolute;\n        top: 0;\n      }\n\n      &:first-child:before {\n        top: 13px;\n      }\n\n      &:last-child:before {\n        bottom: calc(100% - 14px);\n      }\n\n      &:not(.active):hover a:before {\n        content: '';\n        border-radius: 50%;\n        left: -3px;\n        top: 12px;\n        background: $lightgray;\n        position: absolute;\n        width: 6px;\n        height: 6px;\n      }\n    }\n  }\n\n}\n\naio-toc.embedded > div.collapsed li.secondary {\n  display: none;\n}\n","/* SELECT MENU */\n\n.form-select-menu {\n  position: relative;\n}\n\n.form-select-button {\n  background: $white;\n  box-shadow: 0 2px 2px rgba($black, 0.24), 0 0 2px rgba($black, 0.12);\n  box-sizing: border-box;\n  border: 1px solid $white;\n  color: $blue-grey-600;\n  font-size: 12px;\n  font-weight: 400;\n  height: 32px;\n  line-height: 32px;\n  outline: none;\n  padding: 0 16px;\n  text-align: left;\n  width: 100%;\n  cursor: pointer;\n\n  strong {\n    font-weight: 600;\n    margin-right: 8px;\n    text-transform: uppercase;\n  }\n\n  &:focus {\n    border: 1px solid $blue-400;\n    box-shadow: 0 2px 2px rgba($blue-400, 0.24), 0 0 2px rgba($blue-400, 0.12);\n  }\n}\n\n.form-select-dropdown {\n  background: $white;\n  box-shadow: 0 16px 16px rgba($black, 0.24), 0 0 16px rgba($black, 0.12);\n  border-radius: 4px;\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n  z-index: $layer-2;\n\n  li {\n    cursor: pointer;\n    font-size: 14px;\n    line-height: 32px;\n    margin: 0;\n    padding: 0 16px 0 40px;\n    position: relative;\n    transition: all .2s;\n\n    &:hover {\n      background: $blue-grey-50;\n      color: $blue-500;\n    }\n\n    &.selected {\n      background-color: $blue-grey-100;\n    }\n\n    .symbol {\n      left: 16px;\n      position: absolute;\n      top: 8px;\n      z-index: $layer-5;\n    }\n  }\n}\n","\naio-shell.mode-archive {\n\n  .mat-toolbar.mat-primary, footer {\n    background: linear-gradient(145deg,#263238,#78909C);\n  }\n\n  .vertical-menu-item {\n    &.selected, &:hover {\n      color: #263238;\n    }\n  }\n\n  .toc-inner ul.toc-list li.active a {\n    color: #263238;\n\n    &:before {\n      background-color: #263238;\n    }\n  }\n\n  .toc-inner ul.toc-list li:hover a {\n    color: #263238;\n  }\n}\n\naio-shell.mode-next {\n\n  .mat-toolbar.mat-primary, footer {\n    background: linear-gradient(145deg,#DD0031,#C3002F);\n  }\n\n  .vertical-menu-item {\n    &.selected, &:hover {\n      color: #DD0031;\n    }\n  }\n\n  .toc-inner ul.toc-list li.active a {\n    color: #DD0031;\n\n    &:before {\n      background-color: #DD0031;\n    }\n  }\n\n  .toc-inner ul.toc-list li:hover a {\n    color: #DD0031;\n  }\n}\n","$notificationHeight: 56px;\n\n// we need to override some of the toolbar styling\n.mat-toolbar mat-toolbar-row.notification-container {\n  padding: 0;\n  height: auto;\n  overflow: hidden;\n}\n\naio-notification {\n  background: $darkgray;\n  display: flex;\n  position: relative;\n  align-items: center;\n  width: 100%;\n  height: $notificationHeight;\n  justify-content: center;\n\n  @media (max-width: 430px) {\n    justify-content: flex-start;\n    padding-left: 10px;\n  }\n\n  .close-button {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: $notificationHeight;\n    height: $notificationHeight;\n    background: $darkgray;\n  }\n\n  .content {\n    display: flex;\n    max-width: calc(100% - #{$notificationHeight});\n    text-transform: none;\n    padding: 0;\n\n    .icon {\n      margin-right: 10px;\n      @media (max-width: 464px) {\n        display: none;\n      }\n    }\n\n    .message {\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    .action-button {\n      margin-left: 10px;\n      background: $pink;\n      border-radius: 15px;\n      text-transform: uppercase;\n      padding: 6px 10px;\n      font-size: 12px;\n      @media (max-width: 780px) {\n        display: none;\n      }\n    }\n  }\n}\n\n// Here are all the hacks to make the content and sidebars the right height\n// when the notification is visible\n.aio-notification-show {\n  .sidenav-content {\n    padding-top: 80px + $notificationHeight;\n  }\n\n  mat-sidenav.mat-sidenav.sidenav {\n    top: 56px + $notificationHeight;\n\n    @media (max-width: 600px) {\n      top: 56px + $notificationHeight;\n    }\n  }\n\n  .toc-container {\n    top: 76px + $notificationHeight;\n  }\n\n  .search-results {\n    padding-top: 68px + $notificationHeight;\n  }\n\n  &.page-home, &.page-resources, &.page-events, &.page-features, &.page-presskit, &.page-contribute  {\n    section {\n      padding-top: $notificationHeight;\n    }\n  }\n}\n\n// Animate the content when the notification bar is dismissed\n// this should be kept in sync with the animation durations in\n// - aio/src/app/layout/notification/notification.component.ts\n// - aio/src/app/app.component.ts : notificationDismissed()\n.aio-notification-animating {\n  .sidenav-content {\n    transition: padding-top 250ms ease;\n  }\n  mat-sidenav.mat-sidenav.sidenav, .toc-container {\n    transition: top 250ms ease;\n  }\n}\n","label.raised, .api-header label {\n    border-radius: 4px;\n    padding: 4px 16px;\n    display: inline;\n    font-size: 14px;\n    color: white;\n    margin-right: 8px;\n    font-weight: 500;\n    text-transform: uppercase;\n\n    @media screen and (max-width: 600px) {\n        display: block;\n        margin: 8px 0;\n    }\n\n    &.page-label {\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n        background-color: $mist;\n        color: $mediumgray;\n        margin-bottom: 8px;\n        width: 140px;\n\n        .material-icons {\n            margin-right: 8px;\n        }\n    }\n\n    &.property-type-label {\n        font-size: 12px;\n        background-color: $darkgray;\n        color: $white;\n        text-transform: none;\n    }\n}\n\n.api-header {\n\n    margin-right: 10px;\n\n    label {\n\n        // The API badges should be a little smaller\n        padding: 2px 10px;\n        font-size: 12px;\n\n        @media screen and (max-width: 600px) {\n            margin: 4px 0;\n        }\n\n        &.api-status-label {\n            background-color: $mediumgray;\n\n            &.impure-pipe {\n                background-color: $brightred;\n            }\n\n            &.operator {\n                background-color: $brightred;\n            }\n        }\n\n        &.api-type-label {\n            background-color: $accentgrey;\n\n            @each $name, $symbol in $api-symbols {\n                &.#{$name} {\n                    background: map-get($symbol, background);\n                }\n            }\n\n        }\n    }\n}\n",".debug {\n  [translation-result], code-tabs, code-example, img, code, pre, .filetree {\n    display: none;\n  }\n}\n\n[translation-result] + [translation-origin=off] {\n  display: none;\n}\n\n[translation-result] + aio-toc + [translation-origin=off] {\n  display: none;\n}\n\n[translation-origin=on] {\n  border-top: 1px dashed #0273D4;\n}\n\n[id^=translations-cn] {\n  aio-doc-viewer {\n    blockquote {\n      color: #455A64;\n      margin: 0 0 32px 0;\n      padding: 16px 32px;\n      background: rgba(236, 239, 241, 0.24);\n      border-left: 4px solid #00BCD4;\n    }\n  }\n}\n\nem {\n  font-style: normal;\n  font-weight: bold;\n}\n"],"mappings":"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TA,YoEWI,YACA,sBAEA,gBACI,eACA,cACA,yBpEjBR,aoEsBA,wBACI,cACA,gBACA,gBCxBJ,oDACE,gBAGF,aACE,crENF,cqEQE,eACA,+BrETF,mBqEcE,yBACE,gBAGF,gCACE,iBAIJ,gCACE,eACA,SACA,SACA,OrE3BF,UqE6BE,gBACA,yBACA,+BAEA,0CACE,SAIJ,wCACE,gBACA,sBACA,erEzCF,SqE2CE,eAEA,yDACE,cAIJ,8CACE,YAGF,oBACE,sBACA,WACA,eACA,cACA,gBACA,yBACA,gBACA,mBACA,qBACA,gBACA,UACA,qBAEA,0BACE,yBACA,cACA,4BAGF,0BACE,yBAIF,8BACE,kBACA,MACA,QrElFJ,WqEuFA,6BACE,cAGF,0BACE,YACA,6BACA,eACA,iBACA,gBACA,oBAGF,SACE,WACA,eACA,kBACA,yBAGF,2BACE,mBACA,UACA,kBACA,qDAEA,uCAGF,4BACE,kBACA,UACA,eACA,0DAEA,oCAIA,qFACE,0BAIJ,SACE,gGACA,eACA,gBACA,iBACA,gCACA,yBAGF,SACE,cACA,gGACA,eACA,gBACA,iBACA,oBAGF,SACE,cACA,gGACA,eACA,iBAGF,wDZ7GE,wBACA,0BACA,uCY+GF,oEZjHE,oBACA,0BACA,uCYmHF,sBrEpKA,iBqEuKE,kDACE,6CAGF,mDACE,0CAKJ,yBrEjLA,YqEmLE,6BAEA,gCACE,aACA,WACA,gCACA,YACA,yBACA,WAEA,uCACE,gGACA,eC/LN,2BACI,YACA,aACA,eACA,QACA,SACA,aACA,iBACA,yBCHJ,wBACE,eACA,MACA,QACA,OACA,WACA,+BAEA,wCvEbF,mBuEiBE,iCACE,WAKJ,4CACE,yBAEA,0BACE,gEACE,yBACA,wCAMN,0IAGE,gBAGA,0BANF,0IAOI,mBASF,0BACE,oRvEpDJ,UuE4DA,sBACE,YvE7DF,mBuEiEE,qCACE,wBACA,iCACA,sDAGF,0BAXF,sBvE5DA,uBuE6EE,4BACE,cAGF,gCACE,WACA,iBAKJ,mBACE,kBACA,iBACA,kBACA,SACA,YAEA,0BACE,yBACE,sBAMN,aACE,aACA,m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","names":[],"sourceRoot":"webpack:///","file":"styles.d3520e673ea432be.css"}