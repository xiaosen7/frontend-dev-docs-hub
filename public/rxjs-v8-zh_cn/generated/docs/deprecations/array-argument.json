{
  "id": "deprecations/array-argument",
  "title": "数组参数",
  "contents": "\n<div class=\"content\">\n<h1 id=\"array-arguments\">Array Arguments<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/array-argument#array-arguments\"><i class=\"material-icons\">link</i></a></h1>\n<h1 id=\"数组参数\">数组参数<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/array-argument#数组参数\"><i class=\"material-icons\">link</i></a></h1>\n<p>To unify the API surface of <code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> and <code><a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a></code> we deprecated some signatures. Since that it is recommended to either pass an Object or an Array to these operators.</p>\n<p>为了统一 <code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> 和 <code><a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a></code> 的 对外 API，我们弃用了一些签名。因此，建议将 Object 或 Array 传递给这些操作符。</p>\n<div class=\"alert is-important\">\n<p>This deprecation was introduced in RxJS 6.5.</p>\n<p>本弃用是在 RxJS 6.5 引入的。</p>\n</div>\n<h2 id=\"operators-affected-by-this-change\">Operators affected by this Change<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/array-argument#operators-affected-by-this-change\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"受此变更影响的操作符\">受此变更影响的操作符<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/array-argument#受此变更影响的操作符\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li>\n<p><a href=\"/api/index/function/combineLatest\">combineLatest</a></p>\n<p><a href=\"/api/index/function/combineLatest\">combineLatest(组合最新的)</a></p>\n</li>\n<li>\n<p><a href=\"/api/index/function/forkJoin\">forkJoin</a></p>\n<p><a href=\"/api/index/function/forkJoin\">forkJoin（分叉合并）</a></p>\n</li>\n</ul>\n<h2 id=\"how-to-refactor\">How to Refactor<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/array-argument#how-to-refactor\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"如何重构\">如何重构<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/array-argument#如何重构\"><i class=\"material-icons\">link</i></a></h2>\n<p>We deprecated the signatures, where just pass all Observables directly as parameters to these operators.</p>\n<p>我们弃用了这些签名，直接将所有 Observables 作为参数传递给这些操作符。</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a>, <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> } from 'rxjs';\n\nconst odd$ = <a href=\"api/index/function/from\" class=\"code-anchor\">from</a>([1, 3, 5]);\nconst even$ = <a href=\"api/index/function/from\" class=\"code-anchor\">from</a>([2, 4, 6]);\n\n// deprecated\n<a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a>(odd$, even$);\n// suggested change\n<a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a>([odd$, even$]);\n// or\n<a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a>({ odd: odd$, even: even$ });\n</code-example>\n\n</div>\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - /api/index/function/combineLatest\n - /api/index/function/forkJoin\n - api/index/function/combineLatest\n - api/index/function/forkJoin\n - api/index/function/from\n - deprecations/array-argument#array-arguments\n - deprecations/array-argument#how-to-refactor\n - deprecations/array-argument#operators-affected-by-this-change\n - deprecations/array-argument#受此变更影响的操作符\n - deprecations/array-argument#如何重构\n - deprecations/array-argument#数组参数\n-->"
}