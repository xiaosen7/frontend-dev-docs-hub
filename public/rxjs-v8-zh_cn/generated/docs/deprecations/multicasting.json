{
  "id": "deprecations/multicasting",
  "title": "多播",
  "contents": "\n<div class=\"content\">\n<h1 id=\"multicasting\">Multicasting<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#multicasting\"><i class=\"material-icons\">link</i></a></h1>\n<h1 id=\"多播\">多播<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#多播\"><i class=\"material-icons\">link</i></a></h1>\n<p>In version 7, the multicasting APIs were simplified to just a few functions:</p>\n<p>在版本 7 中，多播 API 被简化为几个函数：</p>\n<ul>\n<li>\n<p><a href=\"/api/index/function/connectable\">connectable</a></p>\n<p><a href=\"/api/index/function/connectable\">connectable(可连接者)</a></p>\n</li>\n<li>\n<p><a href=\"/api/operators/connect\">connect</a></p>\n<p><a href=\"/api/operators/connect\">connect(连接)</a></p>\n</li>\n<li>\n<p><a href=\"/api/operators/share\">share</a></p>\n<p><a href=\"/api/operators/share\">share(共享)</a></p>\n</li>\n</ul>\n<p>And <a href=\"/api/operators/shareReplay\">shareReplay</a> - which is a thin wrapper around the now highly-configurable <a href=\"/api/operators/share\">share</a> operator.</p>\n<p>以及 <a href=\"/api/operators/shareReplay\">shareReplay(共享重播)</a> - 它是高度可配置的 <a href=\"/api/operators/share\">share(共享)</a> 操作符的浅层包装。</p>\n<p>Other APIs that relate to multicasting are now deprecated.</p>\n<p>其它与多播相关的 API 现在均已弃用。</p>\n<div class=\"alert is-important\">\n<p>These deprecations were introduced in RxJS 7.0 and will become breaking in RxJS 8.</p>\n<p>这些弃用是在 RxJS 7.0 引入的，并且会在 RxJS 8 变成重大变更。</p>\n</div>\n<h2 id=\"apis-affected-by-this-change\">APIs affected by this Change<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#apis-affected-by-this-change\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"受此变更影响的-api\">受此变更影响的 API<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#受此变更影响的-api\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li>\n<p><a href=\"/api/index/class/ConnectableObservable\">ConnectableObservable</a></p>\n<p><a href=\"/api/index/class/ConnectableObservable\">ConnectableObservable(可连接的 Observable)</a></p>\n</li>\n<li>\n<p><a href=\"/api/operators/multicast\">multicast</a></p>\n<p><a href=\"/api/operators/multicast\">multicast(多播)</a></p>\n</li>\n<li>\n<p><a href=\"/api/operators/publish\">publish</a></p>\n<p><a href=\"/api/operators/publish\">publish(发布)</a></p>\n</li>\n<li>\n<p><a href=\"/api/operators/publishBehavior\">publishBehavior</a></p>\n<p><a href=\"/api/operators/publishBehavior\">publishBehavior(发布行为)</a></p>\n</li>\n<li>\n<p><a href=\"/api/operators/publishLast\">publishLast</a></p>\n<p><a href=\"/api/operators/publishLast\">publishLast(发布末尾)</a></p>\n</li>\n<li>\n<p><a href=\"/api/operators/publishReplay\">publishReplay</a></p>\n<p><a href=\"/api/operators/publishReplay\">publishReplay(发布重播)</a></p>\n</li>\n<li>\n<p><a href=\"/api/operators/refCount\">refCount</a></p>\n<p><a href=\"/api/operators/refCount\">refCount(引用计数)</a></p>\n</li>\n</ul>\n<h2 id=\"how-to-refactor\">How to refactor<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#how-to-refactor\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"如何重构\">如何重构<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#如何重构\"><i class=\"material-icons\">link</i></a></h2>\n<h3 id=\"connectableobservable\">ConnectableObservable<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#connectableobservable\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"connectableobservable可连接的-observable\">ConnectableObservable(可连接的 Observable)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#connectableobservable可连接的-observable\"><i class=\"material-icons\">link</i></a></h3>\n<p>Instead of creating a <a href=\"/api/index/class/ConnectableObservable\">ConnectableObservable</a> instance, call the <a href=\"/api/index/function/connectable\">connectable</a> function to obtain a connectable observable.</p>\n<p>无需创建<a href=\"/api/index/class/ConnectableObservable\">ConnectableObservable</a>实例，而是调用<a href=\"/api/index/function/connectable\">可连接</a>函数来获取可连接的 observable。</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/class/ConnectableObservable\" class=\"code-anchor\">ConnectableObservable</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a> } from 'rxjs';\n\n// deprecated\nconst tick$ = new <a href=\"api/index/class/ConnectableObservable\" class=\"code-anchor\">ConnectableObservable</a>(\n  <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000),\n  () => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>());\ntick$.connect();\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>(<a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000), {\n  connector: () => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>()\n});\ntick$.connect();\n</code-example>\n<p>In situations in which the <code>refCount</code> method is used, the <a href=\"/api/operators/share\">share</a> operator can be used instead.</p>\n<p>在使用 <code>refCount</code> 方法的情况下，可以使用<a href=\"/api/operators/share\">share</a>操作符。</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/class/ConnectableObservable\" class=\"code-anchor\">ConnectableObservable</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a> } from 'rxjs';\n\n// deprecated\nconst tick$ = new <a href=\"api/index/class/ConnectableObservable\" class=\"code-anchor\">ConnectableObservable</a>(\n  <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000),\n  () => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>()\n).refCount();\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/share\" class=\"code-anchor\">share</a>, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/share\" class=\"code-anchor\">share</a>({ connector: () => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>() })\n);\n</code-example>\n<h3 id=\"multicast\">multicast<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#multicast\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"multicast多播\">multicast(多播)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#multicast多播\"><i class=\"material-icons\">link</i></a></h3>\n<p>Where <a href=\"/api/operators/multicast\">multicast</a> is called with a subject factory, can be replaced with <a href=\"/api/index/function/connectable\">connectable</a>.</p>\n<p>使用主体工厂调用<a href=\"/api/operators/multicast\">多播</a>的地方，可以用<a href=\"/api/index/function/connectable\">connectable</a>替换。</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/multicast\" class=\"code-anchor\">multicast</a>, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>, <a href=\"api/index/class/ConnectableObservable\" class=\"code-anchor\">ConnectableObservable</a> } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/multicast\" class=\"code-anchor\">multicast</a>(() => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>())\n) as <a href=\"api/index/class/ConnectableObservable\" class=\"code-anchor\">ConnectableObservable</a>&#x3C;number>;\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>(<a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000), {\n  connector: () => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>()\n});\n</code-example>\n<p>Where <a href=\"/api/operators/multicast\">multicast</a> is called with a subject instance, it can be replaced with <a href=\"/api/index/function/connectable\">connectable</a> and a local subject instance.</p>\n<p>如果使用主体实例调用<a href=\"/api/operators/multicast\">多播</a>，则可以将其替换为<a href=\"/api/index/function/connectable\">可连接</a>的和本地主体实例。</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/multicast\" class=\"code-anchor\">multicast</a>, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>, <a href=\"api/index/class/ConnectableObservable\" class=\"code-anchor\">ConnectableObservable</a> } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/multicast\" class=\"code-anchor\">multicast</a>(new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>())\n) as <a href=\"api/index/class/ConnectableObservable\" class=\"code-anchor\">ConnectableObservable</a>&#x3C;number>;\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>(<a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000), {\n  connector: () => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>(),\n  resetOnDisconnect: false\n});\n</code-example>\n<p>Where <a href=\"/api/operators/multicast\">multicast</a> is used in conjunction with <a href=\"/api/operators/refCount\">refCount</a>, it can be replaced with <a href=\"/api/index/function/connectable\">share</a>.</p>\n<p><a href=\"/api/operators/multicast\">多播</a>与<a href=\"/api/operators/refCount\">refCount</a>一起使用的地方，可以用<a href=\"/api/index/function/connectable\">share</a>代替。</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/multicast\" class=\"code-anchor\">multicast</a>, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>, refCount } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/multicast\" class=\"code-anchor\">multicast</a>(() => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>()),\n  refCount()\n);\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/share\" class=\"code-anchor\">share</a>, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/share\" class=\"code-anchor\">share</a>({ connector: () => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>() })\n);\n</code-example>\n<p>Where <a href=\"/api/operators/multicast\">multicast</a> is used with a selector, it can be replaced with <a href=\"/api/index/function/connect\">connect</a>.</p>\n<p>在<a href=\"/api/operators/multicast\">多播</a>与选择器一起使用的情况下，它可以替换为<a href=\"/api/index/function/connect\">connect</a>。</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/multicast\" class=\"code-anchor\">multicast</a>, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>, <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a> } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/multicast\" class=\"code-anchor\">multicast</a>(\n    () => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>(),\n    (source) => <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a>([source, source])\n  )\n);\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/connect\" class=\"code-anchor\">connect</a>, <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a>, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/connect\" class=\"code-anchor\">connect</a>((source) => <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a>([source, source]), {\n    connector: () => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>()\n  })\n);\n</code-example>\n<h3 id=\"publish\">publish<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#publish\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"publish发布\">publish(发布)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#publish发布\"><i class=\"material-icons\">link</i></a></h3>\n<p>If you're using <a href=\"/api/operators/publish\">publish</a> to create a <a href=\"/api/index/class/ConnectableObservable\">ConnectableObservable</a>, you can use <a href=\"/api/index/function/connectable\">connectable</a> instead.</p>\n<p>如果你使用<a href=\"/api/operators/publish\">publish</a>创建<a href=\"/api/index/class/ConnectableObservable\">ConnectableObservable</a>，则可以使用<a href=\"/api/index/function/connectable\">connectable</a>。</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/publish\" class=\"code-anchor\">publish</a>, <a href=\"api/index/class/ConnectableObservable\" class=\"code-anchor\">ConnectableObservable</a> } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/publish\" class=\"code-anchor\">publish</a>()\n) as <a href=\"api/index/class/ConnectableObservable\" class=\"code-anchor\">ConnectableObservable</a>&#x3C;number>;\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>(<a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000), {\n  connector: () => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>&#x3C;number>(),\n  resetOnDisconnect: false\n});\n</code-example>\n<p>And if <a href=\"/api/operators/refCount\">refCount</a> is being applied to the result of <a href=\"/api/operators/publish\">publish</a>, you can use <a href=\"/api/operators/share\">share</a> to replace both.</p>\n<p>如果将<a href=\"/api/operators/refCount\">refCount</a>应用于<a href=\"/api/operators/publish\">publish</a>的结果，则可以使用<a href=\"/api/operators/share\">share</a>替换两者。</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/publish\" class=\"code-anchor\">publish</a>, refCount } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/publish\" class=\"code-anchor\">publish</a>(),\n  refCount()\n);\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/share\" class=\"code-anchor\">share</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/share\" class=\"code-anchor\">share</a>({\n    resetOnError: false,\n    resetOnComplete: false,\n    resetOnRefCountZero: false\n  })\n);\n</code-example>\n<p>If <a href=\"/api/operators/publish\">publish</a> is being called with a selector, you can use the <a href=\"/api/operators/connect\">connect</a> operator instead.</p>\n<p>如果使用选择器调用<a href=\"/api/operators/publish\">发布</a>，则可以改用<a href=\"/api/operators/connect\">连接</a>操作符。</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/publish\" class=\"code-anchor\">publish</a>, <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a> } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/publish\" class=\"code-anchor\">publish</a>((source) => <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a>([source, source]))\n);\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/connect\" class=\"code-anchor\">connect</a>, <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/connect\" class=\"code-anchor\">connect</a>((source) => <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a>([source, source]))\n);\n</code-example>\n<h3 id=\"publishbehavior\">publishBehavior<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#publishbehavior\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"publishbehavior发布行为\">publishBehavior(发布行为)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#publishbehavior发布行为\"><i class=\"material-icons\">link</i></a></h3>\n<p>If you're using <a href=\"/api/operators/publishBehavior\">publishBehavior</a> to create a <a href=\"/api/index/class/ConnectableObservable\">ConnectableObservable</a>, you can use <a href=\"/api/index/function/connectable\">connectable</a> and a <a href=\"api/index/class/BehaviorSubject\">BehaviorSubject</a> instead.</p>\n<p>如果你使用<a href=\"/api/operators/publishBehavior\">publishBehavior</a>创建<a href=\"/api/index/class/ConnectableObservable\">ConnectableObservable</a>，则可以使用<a href=\"/api/index/function/connectable\">connectable</a>和<a href=\"api/index/class/BehaviorSubject\">BehaviorSubject</a>。</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/publishBehavior\" class=\"code-anchor\">publishBehavior</a>, <a href=\"api/index/class/ConnectableObservable\" class=\"code-anchor\">ConnectableObservable</a> } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/publishBehavior\" class=\"code-anchor\">publishBehavior</a>(0)\n) as <a href=\"api/index/class/ConnectableObservable\" class=\"code-anchor\">ConnectableObservable</a>&#x3C;number>;\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/class/BehaviorSubject\" class=\"code-anchor\">BehaviorSubject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>(<a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000), {\n  connector: () => new <a href=\"api/index/class/BehaviorSubject\" class=\"code-anchor\">BehaviorSubject</a>(0),\n  resetOnDisconnect: false\n});\n</code-example>\n<p>And if <a href=\"/api/operators/refCount\">refCount</a> is being applied to the result of <a href=\"/api/operators/publishBehavior\">publishBehavior</a>, you can use the <a href=\"/api/operators/share\">share</a> operator - with a <a href=\"api/index/class/BehaviorSubject\">BehaviorSubject</a> connector - to replace both.</p>\n<p>如果将<a href=\"/api/operators/refCount\">refCount</a>应用于<a href=\"/api/operators/publishBehavior\">publishBehavior</a>的结果，则可以使用<a href=\"/api/operators/share\">共享</a>操作符（带有<a href=\"api/index/class/BehaviorSubject\">BehaviorSubject</a>连接器）来替换两者。</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/publishBehavior\" class=\"code-anchor\">publishBehavior</a>, refCount } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/publishBehavior\" class=\"code-anchor\">publishBehavior</a>(0),\n  refCount()\n);\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/share\" class=\"code-anchor\">share</a>, <a href=\"api/index/class/BehaviorSubject\" class=\"code-anchor\">BehaviorSubject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/share\" class=\"code-anchor\">share</a>({\n    connector: () => new <a href=\"api/index/class/BehaviorSubject\" class=\"code-anchor\">BehaviorSubject</a>(0),\n    resetOnError: false,\n    resetOnComplete: false,\n    resetOnRefCountZero: false\n  })\n);\n</code-example>\n<h3 id=\"publishlast\">publishLast<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#publishlast\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"publishlast发布最后\">publishLast(发布最后)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#publishlast发布最后\"><i class=\"material-icons\">link</i></a></h3>\n<p>If you're using <a href=\"/api/operators/publishLast\">publishLast</a> to create a <a href=\"/api/index/class/ConnectableObservable\">ConnectableObservable</a>, you can use <a href=\"/api/index/function/connectable\">connectable</a> and an <a href=\"api/index/class/AsyncSubject\">AsyncSubject</a> instead.</p>\n<p>如果你使用<a href=\"/api/operators/publishLast\">publishLast</a>创建<a href=\"/api/index/class/ConnectableObservable\">ConnectableObservable</a>，则可以使用<a href=\"api/index/class/AsyncSubject\">connectable 和 AsyncSubject</a> <a href=\"/api/index/function/connectable\">。</a></p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/publishLast\" class=\"code-anchor\">publishLast</a>, <a href=\"api/index/class/ConnectableObservable\" class=\"code-anchor\">ConnectableObservable</a> } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/publishLast\" class=\"code-anchor\">publishLast</a>()\n) as <a href=\"api/index/class/ConnectableObservable\" class=\"code-anchor\">ConnectableObservable</a>&#x3C;number>;\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/class/AsyncSubject\" class=\"code-anchor\">AsyncSubject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>(<a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000), {\n  connector: () => new <a href=\"api/index/class/AsyncSubject\" class=\"code-anchor\">AsyncSubject</a>&#x3C;number>(),\n  resetOnDisconnect: false\n});\n</code-example>\n<p>And if <a href=\"/api/operators/refCount\">refCount</a> is being applied to the result of <a href=\"/api/operators/publishLast\">publishLast</a>, you can use the <a href=\"/api/operators/share\">share</a> operator - with an <a href=\"api/index/class/AsyncSubject\">AsyncSubject</a> connector - to replace both.</p>\n<p>如果将<a href=\"/api/operators/refCount\">refCount</a>应用于<a href=\"/api/operators/publishLast\">publishLast</a>的结果，则可以使用<a href=\"/api/operators/share\">共享</a>操作符（带有<a href=\"api/index/class/AsyncSubject\">AsyncSubject</a>连接器）来替换两者。</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/publishLast\" class=\"code-anchor\">publishLast</a>, refCount } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/publishLast\" class=\"code-anchor\">publishLast</a>(),\n  refCount()\n);\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/share\" class=\"code-anchor\">share</a>, <a href=\"api/index/class/AsyncSubject\" class=\"code-anchor\">AsyncSubject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/share\" class=\"code-anchor\">share</a>({\n    connector: () => new <a href=\"api/index/class/AsyncSubject\" class=\"code-anchor\">AsyncSubject</a>(),\n    resetOnError: false,\n    resetOnComplete: false,\n    resetOnRefCountZero: false\n  })\n);\n</code-example>\n<h3 id=\"publishreplay\">publishReplay<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#publishreplay\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"publishreplay发布重播\">publishReplay(发布重播)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#publishreplay发布重播\"><i class=\"material-icons\">link</i></a></h3>\n<p>If you're using <a href=\"/api/operators/publishReplay\">publishReplay</a> to create a <a href=\"/api/index/class/ConnectableObservable\">ConnectableObservable</a>, you can use <a href=\"/api/index/function/connectable\">connectable</a> and a <a href=\"api/index/class/ReplaySubject\">ReplaySubject</a> instead.</p>\n<p>如果你使用<a href=\"/api/operators/publishReplay\">publishReplay</a>创建<a href=\"/api/index/class/ConnectableObservable\">ConnectableObservable</a>，则可以使用<a href=\"api/index/class/ReplaySubject\">connectable 和 ReplaySubject</a> <a href=\"/api/index/function/connectable\">。</a></p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/publishReplay\" class=\"code-anchor\">publishReplay</a>, <a href=\"api/index/class/ConnectableObservable\" class=\"code-anchor\">ConnectableObservable</a> } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/publishReplay\" class=\"code-anchor\">publishReplay</a>(1)\n) as <a href=\"api/index/class/ConnectableObservable\" class=\"code-anchor\">ConnectableObservable</a>&#x3C;number>;\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>(<a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000), {\n  connector: () => new <a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a>&#x3C;number>(1),\n  resetOnDisconnect: false\n});\n</code-example>\n<p>And if <a href=\"/api/operators/refCount\">refCount</a> is being applied to the result of <a href=\"/api/operators/publishReplay\">publishReplay</a>, you can use the <a href=\"/api/operators/share\">share</a> operator - with a <a href=\"api/index/class/ReplaySubject\">ReplaySubject</a> connector - to replace both.</p>\n<p>如果将<a href=\"/api/operators/refCount\">refCount</a>应用于<a href=\"/api/operators/publishReplay\">publishReplay</a>的结果，你可以使用<a href=\"/api/operators/share\">共享</a>操作符（带有<a href=\"api/index/class/ReplaySubject\">ReplaySubject</a>连接器）来替换两者。</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/publishReplay\" class=\"code-anchor\">publishReplay</a>, refCount } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/publishReplay\" class=\"code-anchor\">publishReplay</a>(1),\n  refCount()\n);\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/share\" class=\"code-anchor\">share</a>, <a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/share\" class=\"code-anchor\">share</a>({\n    connector: () => new <a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a>(1),\n    resetOnError: false,\n    resetOnComplete: false,\n    resetOnRefCountZero: false\n  })\n);\n</code-example>\n<p>If <a href=\"/api/operators/publishReplay\">publishReplay</a> is being called with a selector, you can use the <a href=\"/api/operators/connect\">connect</a> operator - with a <a href=\"api/index/class/ReplaySubject\">ReplaySubject</a> connector - instead.</p>\n<p>如果使用选择器调用<a href=\"/api/operators/publishReplay\">publishReplay</a>，则可以使用<a href=\"/api/operators/connect\">连接</a>操作符 - 带有<a href=\"api/index/class/ReplaySubject\">ReplaySubject</a>连接器 - 代替。</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/publishReplay\" class=\"code-anchor\">publishReplay</a>, <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a> } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/publishReplay\" class=\"code-anchor\">publishReplay</a>(1, undefined, (source) => <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a>([source, source]))\n);\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/connect\" class=\"code-anchor\">connect</a>, <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a>, <a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/connect\" class=\"code-anchor\">connect</a>((source) => <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a>([source, source]), {\n    connector: () => new <a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a>(1)\n  })\n);\n</code-example>\n<h3 id=\"refcount\">refCount<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#refcount\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"refcount引用计数\">refCount(引用计数)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#refcount引用计数\"><i class=\"material-icons\">link</i></a></h3>\n<p>Instead of applying the <a href=\"/api/operators/refCount\">refCount</a> operator to the <a href=\"/api/index/class/ConnectableObservable\">ConnectableObservable</a> obtained from a <a href=\"/api/operators/multicast\">multicast</a>\nor <a href=\"/api/operators/publish\">publish</a> operator, use the <a href=\"/api/operators/share\">share</a> operator to replace both.</p>\n<p>不要将<a href=\"/api/operators/refCount\">refCount</a>操作符应用于从<a href=\"/api/operators/multicast\">多播</a>或<a href=\"/api/operators/publish\">发布</a>操作符获得的<a href=\"/api/index/class/ConnectableObservable\">ConnectableObservable</a>，而是使用<a href=\"/api/operators/share\">共享</a>操作符来替换两者。</p>\n<p>The properties passed to <a href=\"/api/operators/share\">share</a> will depend upon the operators that are being replaced. The refactors for using <a href=\"/api/operators/refCount\">refCount</a> with <a href=\"/api/operators/multicast\">multicast</a>, <a href=\"/api/operators/publish\">publish</a>, <a href=\"/api/operators/publishBehavior\">publishBehavior</a>, <a href=\"/api/operators/publishLast\">publishLast</a> and <a href=\"/api/operators/publishReplay\">publishReplay</a> are detailed above.</p>\n<p>传递给<a href=\"/api/operators/share\">share</a>的属性将取决于被替换的操作符。上面详细介绍了将<a href=\"/api/operators/refCount\">refCount</a>与<a href=\"/api/operators/multicast\">multicast</a>、<a href=\"/api/operators/publish\">publish</a>、<a href=\"/api/operators/publishBehavior\">publishBehavior</a>、<a href=\"/api/operators/publishLast\">publishLast</a>和<a href=\"/api/operators/publishReplay\">publishReplay</a>一起使用的重构。</p>\n\n</div>\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - /api/index/class/ConnectableObservable\n - /api/index/function/connect\n - /api/index/function/connectable\n - /api/operators/connect\n - /api/operators/multicast\n - /api/operators/publish\n - /api/operators/publishBehavior\n - /api/operators/publishLast\n - /api/operators/publishReplay\n - /api/operators/refCount\n - /api/operators/share\n - /api/operators/shareReplay\n - api/index/class/AsyncSubject\n - api/index/class/BehaviorSubject\n - api/index/class/ConnectableObservable\n - api/index/class/ReplaySubject\n - api/index/class/Subject\n - api/index/function/combineLatest\n - api/index/function/connect\n - api/index/function/connectable\n - api/index/function/multicast\n - api/index/function/publish\n - api/index/function/publishBehavior\n - api/index/function/publishLast\n - api/index/function/publishReplay\n - api/index/function/share\n - api/index/function/timer\n - deprecations/multicasting#apis-affected-by-this-change\n - deprecations/multicasting#connectableobservable\n - deprecations/multicasting#connectableobservable可连接的-observable\n - deprecations/multicasting#how-to-refactor\n - deprecations/multicasting#multicast\n - deprecations/multicasting#multicasting\n - deprecations/multicasting#multicast多播\n - deprecations/multicasting#publish\n - deprecations/multicasting#publishbehavior\n - deprecations/multicasting#publishbehavior发布行为\n - deprecations/multicasting#publishlast\n - deprecations/multicasting#publishlast发布最后\n - deprecations/multicasting#publishreplay\n - deprecations/multicasting#publishreplay发布重播\n - deprecations/multicasting#publish发布\n - deprecations/multicasting#refcount\n - deprecations/multicasting#refcount引用计数\n - deprecations/multicasting#受此变更影响的-api\n - deprecations/multicasting#多播\n - deprecations/multicasting#如何重构\n-->"
}