{
  "id": "guide/installation",
  "title": "安装指南",
  "contents": "\n<div class=\"content\">\n<h1 id=\"installation-instructions\">Installation Instructions<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/installation#installation-instructions\"><i class=\"material-icons\">link</i></a></h1>\n<h1 id=\"安装指南\">安装指南<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/installation#安装指南\"><i class=\"material-icons\">link</i></a></h1>\n<p>Here are different ways you can install RxJS:</p>\n<p>以下是安装 RxJS 的不同方法：</p>\n<h2 id=\"es2015-via-npm\">ES2015 via npm<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/installation#es2015-via-npm\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"通过-npm-安装-es2015\">通过 npm 安装 ES2015<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/installation#通过-npm-安装-es2015\"><i class=\"material-icons\">link</i></a></h2>\n<code-example language=\"shell\">\nnpm install rxjs\n</code-example>\n<p>By default, RxJS 7.x will provide different variants of the code based on the consumer:</p>\n<p>默认情况下，RxJS 7.x 会根据消费者提供不同的代码变体：</p>\n<ul>\n<li>\n<p>When RxJS 7.x is used on Node.js regardless of whether it is consumed via <code>require</code> or <code>import</code>, CommonJS code targeting ES5 will be provided for execution.</p>\n<p>在 Node.js 上使用 RxJS 7.x 时，无论是通过 <code>require</code> 还是 <code>import</code> 使用，都会提供针对 ES5 的 CommonJS 代码以供执行。</p>\n</li>\n<li>\n<p>When RxJS 7.4+ is used via a bundler targeting a browser (or other non-Node.js platform) ES module code targeting ES5 will be provided by default with the option to use ES2015 code. 7.x versions prior to 7.4.0 will only provide ES5 code.</p>\n<p>当通过针对浏览器（或其它非 Node.js 平台）的捆绑器使用 RxJS 7.4+ 时，将默认提供针对 ES5 的 ES 模块代码，并提供使用 ES2015 代码的选项。7.4.0 之前的 7.x 版本将仅提供 ES5 代码。</p>\n</li>\n</ul>\n<p>If the target browsers for a project support ES2015+ or the bundle process supports down-leveling to ES5 then the bundler can optionally be configured to allow the ES2015 RxJS code to be used instead. You can enable support for using the ES2015 RxJS code by configuring a bundler to use the <code>es2015</code> custom export condition during module resolution. Configuring a bundler to use the <code>es2015</code> custom export condition is specific to each bundler. If you are interested in using this option, please consult the\ndocumentation of your bundler for additional information. However, some general information can be found here:</p>\n<p>如果项目的目标浏览器支持 ES2015+ 或其捆绑过程支持降级到 ES5，则可以选择将捆绑器配置为允许使用 ES2015 RxJS 代码。你可以通过将捆绑器配置为在模块解析期间使用 <code>es2015</code> 自定义导出条件来启用对使用 ES2015 RxJS 代码的支持。将捆绑器配置为让每个捆绑器使用独特的 <code>es2015</code> 自定义导出条件。如果你有兴趣使用此选项，请查阅捆绑器的文档以获取更多信息。但是，可以在此处找到一些一般信息：</p>\n<ul>\n<li><a href=\"https://webpack.js.org/guides/package-exports/#conditions-custom\">https://webpack.js.org/guides/package-exports/#conditions-custom</a></li>\n<li><a href=\"https://github.com/rollup/plugins/blob/node-resolve-v11.0.0/packages/node-resolve/README.md#exportconditions\">https://github.com/rollup/plugins/blob/node-resolve-v11.0.0/packages/node-resolve/README.md#exportconditions</a></li>\n</ul>\n<p>To import only what you need, please <a href=\"guide/importing#es6-via-npm\">check out this</a> guide.</p>\n<p>要仅导入你需要的内容，请<a href=\"guide/importing#es6-via-npm\">查看这份</a>指南。</p>\n<h2 id=\"commonjs-via-npm\">CommonJS via npm<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/installation#commonjs-via-npm\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"通过-npm-导入-commonjs\">通过 npm 导入 CommonJS<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/installation#通过-npm-导入-commonjs\"><i class=\"material-icons\">link</i></a></h2>\n<p>If you receive an error like error TS2304: Cannot find name 'Promise' or error TS2304: Cannot find name\n'Iterable' when using RxJS you may need to install a supplemental set of typings.</p>\n<p>如果你在使用 RxJS 时收到错误 TS2304: Cannot find name 'Promise' 或 error TS2304: Cannot find name 'Iterable' 之类的错误，你可能需要安装一组补充的类型。</p>\n<ol>\n<li>\n<p>For typings users:</p>\n<p>对于 typings 用户：</p>\n</li>\n</ol>\n<code-example language=\"shell\">\ntypings install es6-shim --ambient\n</code-example>\n<ol start=\"2\">\n<li>\n<p>If you're not using typings the interfaces can be copied from /es6-shim/es6-shim.d.ts.</p>\n<p>如果你不使用 typings，则可以从 /es6-shim/es6-shim.d.ts 中复制接口。</p>\n</li>\n<li>\n<p>Add type definition file included in tsconfig.json or CLI argument.</p>\n<p>添加要包含在 tsconfig.json 或 CLI 参数中的类型定义文件。</p>\n</li>\n</ol>\n<h2 id=\"all-module-types-cjses6amdtypescript-via-npm\">All Module Types (CJS/ES6/AMD/TypeScript) via npm<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/installation#all-module-types-cjses6amdtypescript-via-npm\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"通过-npm-安装所有模块类型-cjses6amdtypescript\">通过 npm 安装所有模块类型 (CJS/ES6/AMD/TypeScript)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/installation#通过-npm-安装所有模块类型-cjses6amdtypescript\"><i class=\"material-icons\">link</i></a></h2>\n<p>To install this library via npm version 3, use the following command:</p>\n<p>要通过 npm 版本 3 安装此库，请使用以下命令：</p>\n<code-example language=\"shell\">\nnpm install @reactivex/rxjs\n</code-example>\n<p>If you are using npm version 2, you need to specify the library version explicitly:</p>\n<p>如果你使用的是 npm 版本 2，则需要明确指定库版本：</p>\n<code-example language=\"shell\">\nnpm install @reactivex/rxjs@7.3.0\n</code-example>\n<h2 id=\"cdn\">CDN<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/installation#cdn\"><i class=\"material-icons\">link</i></a></h2>\n<p>For CDN, you can use <a href=\"https://unpkg.com/\">unpkg</a>:</p>\n<p>对于 CDN，你可以使用 <a href=\"https://unpkg.com/\">unpkg</a>：</p>\n<p><a href=\"https://unpkg.com/rxjs@%5E7/dist/bundles/rxjs.umd.min.js\">https://unpkg.com/rxjs@^7/dist/bundles/rxjs.umd.min.js</a></p>\n<p>To import what you need, please <a href=\"guide/importing#cdn\">check out this</a> guide.</p>\n<p>要导入你需要的内容，请<a href=\"guide/importing#cdn\">查看此</a> 指南。</p>\n\n</div>\n<!-- links to this doc:\n - guide/importing\n-->\n<!-- links from this doc:\n - guide/importing#cdn\n - guide/importing#es6-via-npm\n - guide/installation#all-module-types-cjses6amdtypescript-via-npm\n - guide/installation#cdn\n - guide/installation#commonjs-via-npm\n - guide/installation#es2015-via-npm\n - guide/installation#installation-instructions\n - guide/installation#安装指南\n - guide/installation#通过-npm-安装-es2015\n - guide/installation#通过-npm-安装所有模块类型-cjses6amdtypescript\n - guide/installation#通过-npm-导入-commonjs\n - https://github.com/rollup/plugins/blob/node-resolve-v11.0.0/packages/node-resolve/README.md#exportconditions\n - https://unpkg.com/\n - https://unpkg.com/rxjs@%5E7/dist/bundles/rxjs.umd.min.js\n - https://webpack.js.org/guides/package-exports/#conditions-custom\n-->"
}