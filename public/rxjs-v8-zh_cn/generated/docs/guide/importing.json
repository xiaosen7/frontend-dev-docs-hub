{
  "id": "guide/importing",
  "title": "导入指南",
  "contents": "\n<div class=\"content\">\n<h1 id=\"importing-instructions\">Importing instructions<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/importing#importing-instructions\"><i class=\"material-icons\">link</i></a></h1>\n<h1 id=\"导入指南\">导入指南<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/importing#导入指南\"><i class=\"material-icons\">link</i></a></h1>\n<p>There are different ways you can <a href=\"guide/installation\">install</a> RxJS. Using/importing RxJS depends on\nthe used RxJS version, but also depends on the used installation method.</p>\n<p>你可以通过多种方式<a href=\"guide/installation\">安装</a> RxJS。使用/导入 RxJS 取决于使用的 RxJS 版本，也取决于使用的安装方式。</p>\n<p><a href=\"https://v6.rxjs.dev/guide/v6/pipeable-operators\">Pipeable operators</a> were introduced in RxJS version\n5.5. This enabled all operators to be exported from a single place. This new export site was introduced\nwith RxJS version 6 where all pipeable operators could have been imported from <code>'rxjs/operators'</code>. For\nexample, <code>import { <a href=\"api/index/function/map\" class=\"code-anchor\">map</a> } from 'rxjs/operators'</code>.</p>\n<p><a href=\"https://v6.rxjs.dev/guide/v6/pipeable-operators\">可联入管道的操作符</a>是在 RxJS 5.5 版中引入的。这使得所有操作符都可以从一个地方导出。这个新的导出点是在 RxJS 版本 6 中引入的，其中所有可联入管道的操作符都可以从 <code>'rxjs/operators'</code> 导入。例如，<code>import { <a href=\"api/index/function/map\" class=\"code-anchor\">map</a> } from 'rxjs/operators'</code>。</p>\n<h2 id=\"new-in-rxjs-v720\">New in RxJS v7.2.0<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/importing#new-in-rxjs-v720\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"rxjs-v720-中的新功能\">RxJS v7.2.0 中的新功能<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/importing#rxjs-v720-中的新功能\"><i class=\"material-icons\">link</i></a></h2>\n<p><span class=\"informal\"><strong>With RxJS v7.2.0, most operators have been moved to <code><a href=\"api#index\">'rxjs'</a></code>\nexport site. This means that the preferred way to import operators is from <code>'rxjs'</code>, while\n<code>'rxjs/operators'</code> export site has been deprecated.</strong></span></p>\n<p><span class=\"informal\"><strong>在 RxJS v7.2.0 中，大多数运算符已移至 <code><a href=\"api#index\">'rxjs'</a></code> 中导出。这意味着导入运算符的首选方式是从 <code>'rxjs'</code> 导入运算符，而从 <code>'rxjs/operators'</code> 中导出的方式已被弃用。</strong></span></p>\n<p>For example, instead of using:</p>\n<p>例如，不应该再用：</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/map\" class=\"code-anchor\">map</a> } from 'rxjs/operators';\n</code-example>\n<p><strong>the preferred way</strong> is to use:</p>\n<p><strong>首选方法</strong>是使用：</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/map\" class=\"code-anchor\">map</a> } from 'rxjs';\n</code-example>\n<p>Although the old way of importing operators is still active, it will be removed in one of the next major\nversions.</p>\n<p>虽然导入操作符的旧方式仍然有效，但它将在下一个主要版本中删除。</p>\n<p>Click <a href=\"guide/importing#how-to-migrate\">here to see</a> how to migrate.</p>\n<p>单击<a href=\"guide/importing#how-to-migrate\">此处查看</a>如何迁移。</p>\n<h2 id=\"export-sites\">Export sites<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/importing#export-sites\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"导出点\">导出点<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/importing#导出点\"><i class=\"material-icons\">link</i></a></h2>\n<p>RxJS v7 exports 6 different locations out of which you can import what you need. Those are:</p>\n<p>RxJS v7 会导出 6 个不同的位置，你可以从中导入你需要的内容。即：</p>\n<ul>\n<li>\n<p><code><a href=\"api#index\">'rxjs'</a></code> - for example: <code>import { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a> } from 'rxjs';</code></p>\n<p><code><a href=\"api#index\">'rxjs'</a></code> - 例如： <code>import { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a> } from 'rxjs';</code></p>\n</li>\n<li>\n<p><code><a href=\"api#operators\">'rxjs/operators'</a></code> - for example: <code>import { <a href=\"api/index/function/map\" class=\"code-anchor\">map</a> } from 'rxjs/operators';</code></p>\n<p><code><a href=\"api#operators\">'rxjs/operators'</a></code> - 例如： <code>import { <a href=\"api/index/function/map\" class=\"code-anchor\">map</a> } from 'rxjs/operators';</code></p>\n</li>\n<li>\n<p><code><a href=\"api#ajax\">'rxjs/ajax'</a></code> - for example: <code>import { ajax } from 'rxjs/ajax';</code></p>\n<p><code><a href=\"api#ajax\">'rxjs/ajax'</a></code> - 例如： <code>import { ajax } from 'rxjs/ajax';</code></p>\n</li>\n<li>\n<p><code><a href=\"api#fetch\">'rxjs/fetch'</a></code> - for example: <code>import { <a href=\"api/fetch/fromFetch\" class=\"code-anchor\">fromFetch</a> } from 'rxjs/fetch';</code></p>\n<p><code><a href=\"api#fetch\">'rxjs/fetch'</a></code> - 例如： <code>import { <a href=\"api/fetch/fromFetch\" class=\"code-anchor\">fromFetch</a> } from 'rxjs/fetch';</code></p>\n</li>\n<li>\n<p><code><a href=\"api#webSocket\">'rxjs/webSocket'</a></code> - for example: <code>import { webSocket } from 'rxjs/webSocket';</code></p>\n<p><code><a href=\"api#webSocket\">'rxjs/webSocket'</a></code> - 例如： <code>import { webSocket } from 'rxjs/webSocket';</code></p>\n</li>\n<li>\n<p><code><a href=\"api#testing\">'rxjs/testing'</a></code> - for example: <code>import { <a href=\"api/testing/TestScheduler\" class=\"code-anchor\">TestScheduler</a> } from 'rxjs/testing';</code></p>\n<p><code><a href=\"api#testing\">'rxjs/testing'</a></code> - 例如： <code>import { <a href=\"api/testing/TestScheduler\" class=\"code-anchor\">TestScheduler</a> } from 'rxjs/testing';</code></p>\n</li>\n</ul>\n<h3 id=\"how-to-migrate\">How to migrate?<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/importing#how-to-migrate\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"如何迁移\">如何迁移？<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/importing#如何迁移\"><i class=\"material-icons\">link</i></a></h3>\n<p>While nothing has been removed from <code>'rxjs/operators'</code>, it is strongly recommended doing the operator\nimports from <code>'rxjs'</code>. Almost all operator function exports have been moved to <code>'rxjs'</code>, but only a\ncouple of old and deprecated operators have stayed in the <code>'rxjs/operators'</code>. Those operator functions\nare now mostly deprecated and most of them have their either static operator substitution or are kept as\noperators, but have a new name so that they are different to their static creation counter-part (usually\nending with <code>With</code>). Those are:</p>\n<p>虽然没有从 <code>'rxjs/operators'</code> 中删除过任何内容，但强烈建议从 <code>'rxjs'</code> 中导入操作符。几乎所有操作符函数的导出都已移至 <code>'rxjs'</code>，但只有几个旧的和已弃用的操作符保留在 <code>'rxjs/operators'</code> 中。这些操作符函数现在大多已被弃用，其中大多数已替换为静态操作符或仍然是操作符，但有了一个新名字，因此它们与其对应的静态创建函数不同（通常以 <code>With</code> 结尾）。即：</p>\n<table>\n<thead>\n<tr>\n<th><code>'rxjs/operators'</code> Operator</th>\n<th>Replace With Static Creation Operator</th>\n<th>Replace With New Operator Name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>'rxjs/operators'</code> 操作符</td>\n<td>替换为静态创建操作符</td>\n<td>替换为新的操作符名称</td>\n</tr>\n<tr>\n<td><a href=\"/api/operators/combineLatest\"><code>combineLatest</code></a></td>\n<td><a href=\"api/index/function/combineLatest\"><code>combineLatest</code></a></td>\n<td><a href=\"api/index/function/combineLatestWith\"><code>combineLatestWith</code></a></td>\n</tr>\n<tr>\n<td><a href=\"/api/operators/concat\"><code>concat</code></a></td>\n<td><a href=\"api/index/function/concat\"><code>concat</code></a></td>\n<td><a href=\"api/index/function/concatWith\"><code>concatWith</code></a></td>\n</tr>\n<tr>\n<td><a href=\"/api/operators/merge\"><code>merge</code></a></td>\n<td><a href=\"api/index/function/merge\"><code>merge</code></a></td>\n<td><a href=\"api/index/function/mergeWith\"><code>mergeWith</code></a></td>\n</tr>\n<tr>\n<td><a href=\"/api/operators/onErrorResumeNext\"><code>onErrorResumeNext</code></a></td>\n<td><a href=\"api/index/function/onErrorResumeNext\"><code>onErrorResumeNext</code></a></td>\n<td><a href=\"api/index/function/onErrorResumeNextWith\"><code>onErrorResumeNextWith</code></a></td>\n</tr>\n<tr>\n<td><a href=\"/api/operators/race\"><code>race</code></a></td>\n<td><a href=\"api/index/function/race\"><code>race</code></a></td>\n<td><a href=\"api/index/function/raceWith\"><code>raceWith</code></a></td>\n</tr>\n<tr>\n<td><a href=\"/api/operators/zip\"><code>zip</code></a></td>\n<td><a href=\"api/index/function/zip\"><code>zip</code></a></td>\n<td><a href=\"api/index/function/zipWith\"><code>zipWith</code></a></td>\n</tr>\n</tbody>\n</table>\n<p><code><a href=\"api/index/function/partition\" class=\"code-anchor\">partition</a></code>, the operator, is a special case, as it is deprecated and you should be using the <code><a href=\"api/index/function/partition\" class=\"code-anchor\">partition</a></code> creation function exported from <code>'rxjs'</code> instead.</p>\n<p><code><a href=\"api/index/function/partition\" class=\"code-anchor\">partition</a></code> 运算符是一种特殊情况，因为它已被弃用，你应该改用从 <code>'rxjs'</code> 导出的 <code><a href=\"api/index/function/partition\" class=\"code-anchor\">partition</a></code> 创建函数。</p>\n<p>For example, the old and deprecated way of using <a href=\"/api/operators/merge\"><code>merge</code></a> from <code>'rxjs/operators'</code>\nis:</p>\n<p>例如，从 <code>'rxjs/operators'</code> 使用 <a href=\"/api/operators/merge\"><code>merge</code></a> 的旧的和已弃用的方法是：</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/merge\" class=\"code-anchor\">merge</a> } from 'rxjs/operators';\n\na$.pipe(<a href=\"api/index/function/merge\" class=\"code-anchor\">merge</a>(b$)).subscribe();\n</code-example>\n<p>But this should be avoided and replaced with one of the next two examples.</p>\n<p>但这应该避免并替换为接下来的两个示例之一。</p>\n<p>For example, this could be replaced by using a static creation <a href=\"api/index/function/merge\"><code>merge</code></a> function:</p>\n<p>例如，这可以通过使用静态创建 <a href=\"api/index/function/merge\"><code>merge</code></a> 函数来替换：</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/merge\" class=\"code-anchor\">merge</a> } from 'rxjs';\n\n<a href=\"api/index/function/merge\" class=\"code-anchor\">merge</a>(a$, b$).subscribe();\n</code-example>\n<p>Or it could be written using a pipeable <a href=\"api/index/function/mergeWith\"><code>mergeWith</code></a> operator:</p>\n<p>或者它可以使用可管道化的 <a href=\"api/index/function/mergeWith\"><code>mergeWith</code></a> 运算符编写：</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/mergeWith\" class=\"code-anchor\">mergeWith</a> } from 'rxjs';\n\na$.pipe(<a href=\"api/index/function/mergeWith\" class=\"code-anchor\">mergeWith</a>(b$)).subscribe();\n</code-example>\n<p>Depending on the preferred style, you can choose which one to follow, they are completely equal.</p>\n<p>根据喜欢的风格，你可以选择遵循哪一种，它们是完全平等的。</p>\n<p>Since a new way of importing operators is introduced with RxJS v7.2.0, instructions will be split to\nprior and after this version.</p>\n<p>由于 RxJS v7.2.0 引入了一种新的操作符导入方式，这些指南将分为之前和之后的版本。</p>\n<h3 id=\"es6-via-npm\">ES6 via npm<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/importing#es6-via-npm\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"通过-npm-安装-es6\">通过 npm 安装 ES6<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/importing#通过-npm-安装-es6\"><i class=\"material-icons\">link</i></a></h3>\n<p>If you've installed RxJS using <a href=\"guide/installation#es6-via-npm\">ES6 via npm</a> and installed version\nis:</p>\n<p>如果你使用 <a href=\"guide/installation#es6-via-npm\">ES6 via npm</a> 安装了 RxJS，并且安装的版本是：</p>\n<h4 id=\"v720-or-later\">v7.2.0 or later<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/importing#v720-or-later\"><i class=\"material-icons\">link</i></a></h4>\n<h4 id=\"v720-或更高版本\">v7.2.0 或更高版本<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/importing#v720-或更高版本\"><i class=\"material-icons\">link</i></a></h4>\n<p>Import only what you need:</p>\n<p>仅导入你需要的内容：</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/map\" class=\"code-anchor\">map</a> } from 'rxjs';\n\n<a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(1, 2, 3).pipe(<a href=\"api/index/function/map\" class=\"code-anchor\">map</a>((x) => x + '!!!')); // etc\n</code-example>\n<p>To import the entire set of functionality:</p>\n<p>要导入整套功能：</p>\n<code-example language=\"ts\">\nimport * as rxjs <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nrxjs.of(1, 2, 3).pipe(rxjs.map((x) => x + '!!!')); // etc;\n</code-example>\n<p>To use with a globally imported bundle:</p>\n<p>要与全局导入的捆绑包一起使用：</p>\n<code-example language=\"js\">\nconst { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/map\" class=\"code-anchor\">map</a> } = rxjs;\n\n<a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(1, 2, 3).pipe(<a href=\"api/index/function/map\" class=\"code-anchor\">map</a>((x) => x + '!!!')); // etc\n</code-example>\n<p>If you installed RxJS version:</p>\n<p>如果你安装了 RxJS 版本：</p>\n<h4 id=\"v710-or-older\">v7.1.0 or older<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/importing#v710-or-older\"><i class=\"material-icons\">link</i></a></h4>\n<h4 id=\"v710-或更早版本\">v7.1.0 或更早版本<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/importing#v710-或更早版本\"><i class=\"material-icons\">link</i></a></h4>\n<p>Import only what you need:</p>\n<p>仅导入你需要的内容：</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a> } from 'rxjs';\nimport { <a href=\"api/index/function/map\" class=\"code-anchor\">map</a> } from 'rxjs/operators';\n\n<a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(1, 2, 3).pipe(<a href=\"api/index/function/map\" class=\"code-anchor\">map</a>((x) => x + '!!!')); // etc\n</code-example>\n<p>To import the entire set of functionality:</p>\n<p>要导入整套功能：</p>\n<code-example language=\"ts\">\nimport * as rxjs <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\nimport * as operators <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nrxjs.of(1, 2, 3).pipe(operators.map((x) => x + '!!!')); // etc;\n</code-example>\n<p>To use with a globally imported bundle:</p>\n<p>要与全局导入的捆绑包一起使用：</p>\n<code-example language=\"js\">\nconst { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a> } = rxjs;\nconst { <a href=\"api/index/function/map\" class=\"code-anchor\">map</a> } = rxjs.operators;\n\n<a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(1, 2, 3).pipe(<a href=\"api/index/function/map\" class=\"code-anchor\">map</a>((x) => x + '!!!')); // etc\n</code-example>\n<h3 id=\"cdn\">CDN<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/importing#cdn\"><i class=\"material-icons\">link</i></a></h3>\n<p>If you installed a library <a href=\"guide/installation#cdn\">using CDN</a>, the global namespace for rxjs is\n<code>rxjs</code>.</p>\n<p>如果你<a href=\"guide/installation#cdn\">使用 CDN</a>安装了一个库，rxjs 的全局命名空间是 <code>rxjs</code> 。</p>\n<h4 id=\"v720-or-later-1\">v7.2.0 or later<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/importing#v720-or-later-1\"><i class=\"material-icons\">link</i></a></h4>\n<h4 id=\"v720-或更高版本-1\">v7.2.0 或更高版本<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/importing#v720-或更高版本-1\"><i class=\"material-icons\">link</i></a></h4>\n<code-example language=\"js\">\nconst { <a href=\"api/index/function/range\" class=\"code-anchor\">range</a>, <a href=\"api/index/function/filter\" class=\"code-anchor\">filter</a>, <a href=\"api/index/function/map\" class=\"code-anchor\">map</a> } = rxjs;\n\n<a href=\"api/index/function/range\" class=\"code-anchor\">range</a>(1, 200)\n  .pipe(\n    <a href=\"api/index/function/filter\" class=\"code-anchor\">filter</a>((x) => x % 2 === 1),\n    <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>((x) => x + x)\n  )\n  .subscribe((x) => console.log(x));\n</code-example>\n<h4 id=\"v710-or-older-1\">v7.1.0 or older<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/importing#v710-or-older-1\"><i class=\"material-icons\">link</i></a></h4>\n<h4 id=\"v710-或更早版本-1\">v7.1.0 或更早版本<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/importing#v710-或更早版本-1\"><i class=\"material-icons\">link</i></a></h4>\n<code-example language=\"js\">\nconst { <a href=\"api/index/function/range\" class=\"code-anchor\">range</a> } = rxjs;\nconst { <a href=\"api/index/function/filter\" class=\"code-anchor\">filter</a>, <a href=\"api/index/function/map\" class=\"code-anchor\">map</a> } = rxjs.operators;\n\n<a href=\"api/index/function/range\" class=\"code-anchor\">range</a>(1, 200)\n  .pipe(\n    <a href=\"api/index/function/filter\" class=\"code-anchor\">filter</a>((x) => x % 2 === 1),\n    <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>((x) => x + x)\n  )\n  .subscribe((x) => console.log(x));\n</code-example>\n\n</div>\n<!-- links to this doc:\n - guide/installation\n-->\n<!-- links from this doc:\n - /api/operators/combineLatest\n - /api/operators/concat\n - /api/operators/merge\n - /api/operators/onErrorResumeNext\n - /api/operators/race\n - /api/operators/zip\n - api#ajax\n - api#fetch\n - api#index\n - api#operators\n - api#testing\n - api#webSocket\n - api/fetch/fromFetch\n - api/index/function/combineLatest\n - api/index/function/combineLatestWith\n - api/index/function/concat\n - api/index/function/concatWith\n - api/index/function/filter\n - api/index/function/from\n - api/index/function/map\n - api/index/function/merge\n - api/index/function/mergeWith\n - api/index/function/of\n - api/index/function/onErrorResumeNext\n - api/index/function/onErrorResumeNextWith\n - api/index/function/partition\n - api/index/function/race\n - api/index/function/raceWith\n - api/index/function/range\n - api/index/function/zip\n - api/index/function/zipWith\n - api/testing/TestScheduler\n - guide/importing#cdn\n - guide/importing#es6-via-npm\n - guide/importing#export-sites\n - guide/importing#how-to-migrate\n - guide/importing#importing-instructions\n - guide/importing#new-in-rxjs-v720\n - guide/importing#rxjs-v720-中的新功能\n - guide/importing#v710-or-older\n - guide/importing#v710-or-older-1\n - guide/importing#v710-或更早版本\n - guide/importing#v710-或更早版本-1\n - guide/importing#v720-or-later\n - guide/importing#v720-or-later-1\n - guide/importing#v720-或更高版本\n - guide/importing#v720-或更高版本-1\n - guide/importing#如何迁移\n - guide/importing#导入指南\n - guide/importing#导出点\n - guide/importing#通过-npm-安装-es6\n - guide/installation\n - guide/installation#cdn\n - guide/installation#es6-via-npm\n - https://v6.rxjs.dev/guide/v6/pipeable-operators\n-->"
}