{
  "id": "api/index/function/throwError",
  "title": "throwError",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/observable/throwError.ts?message=docs(index)%3A%20describe%20your%20change...#L157-L162\" aria-label=\"编辑建议\" title=\"编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/observable/throwError.ts#L157-L162\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/throwError\", \"name\": \"throwError\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"throwerror\">throwError<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/throwError#throwerror\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(errorOrErrorFactory: any, scheduler?: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a>): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;never></code-example>\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"errorOrErrorFactory\"></a>\n        <code>errorOrErrorFactory</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\nn      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"scheduler\"></a>\n        <code>scheduler</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a></code></td>\n      <td class=\"param-description\">\n              <p>可选。默认值为 <code>undefined</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;never></code></p>\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n<section class=\"overloads\">\n  <h2 id=\"overloads\">重载形式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/throwError#overloads\"><i class=\"material-icons\">link</i></a></h2>\n  <table>\n  \n  <tbody><tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(errorFactory: () => any): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;never></code-example>\n\n\n  <div class=\"short-description\">\n    <p>Creates an observable that will create an error instance and push it to the consumer as an error\nimmediately upon subscription.</p>\n<p>创建一个 observable，它将创建一个错误实例，并在订阅后立即将其作为错误推送给消费者。</p>\n<p><span class=\"informal\">Just errors and does nothing else</span></p>\n<p><span class=\"informal\">只是报错，什么都不做</span></p>\n<p><img src=\"/assets/images/marble-diagrams/throw.png\" width=\"100%\" alt=\"throw marble diagram\"></p>\n<p>This creation function is useful for creating an observable that will create an error and error every\ntime it is subscribed to. Generally, inside of most operators when you might want to return an errored\nobservable, this is unnecessary. In most cases, such as in the inner return of <a href=\"api/index/function/concatMap\"><code>concatMap</code></a>,\n<a href=\"api/index/function/mergeMap\"><code>mergeMap</code></a>, <a href=\"api/index/function/defer\"><code>defer</code></a>, and many others, you can simply throw the error, and RxJS will pick\nthat up and notify the consumer of the error.</p>\n<p>这个创建函数对于创建一个 observable 很有用，它会在每次订阅时创建一个错误并报错。通常，在大多数操作符中，当你可能要返回错误的 Observable 时，这是没必要的。在大多数情况下，例如在 <a href=\"api/index/function/concatMap\"><code>concatMap</code></a>、<a href=\"api/index/function/mergeMap\"><code>mergeMap</code></a>、<a href=\"api/index/function/defer\"><code>defer</code></a> 和许多其它的内部返回中，你可以简单地抛出错误，RxJS 会捕获它并把这个错误通知消费者。</p>\n<h2 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/throwError#example\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"例子\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/throwError#例子\"><i class=\"material-icons\">link</i></a></h2>\n<p>Create a simple observable that will create a new error with a timestamp and log it\nand the message every time you subscribe to it</p>\n<p>创建一个简单的 Observable，它将创建一个带有时间戳的新错误，并在你每次订阅它时记录它和错误信息</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a> } from 'rxjs';\n\nlet errorCount = 0;\n\nconst errorWithTimestamp$ = <a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(() => {\n  const error: any = new Error(`This is error number ${ ++errorCount }`);\n  error.timestamp = Date.now();\n  return error;\n});\n\nerrorWithTimestamp$.subscribe({\n  error: err => console.log(err.timestamp, err.message)\n});\n\nerrorWithTimestamp$.subscribe({\n  error: err => console.log(err.timestamp, err.message)\n});\n\n// Logs the <a href=\"api/index/function/timestamp\" class=\"code-anchor\">timestamp</a> and a new error message for each subscription\n</code-example>\n<h3 id=\"unnecessary-usage\">Unnecessary usage<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/throwError#unnecessary-usage\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"非必要的使用\">非必要的使用<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/throwError#非必要的使用\"><i class=\"material-icons\">link</i></a></h3>\n<p>Using <code><a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a></code> inside of an operator or creation function\nwith a callback, is usually not necessary</p>\n<p>在操作符或带有回调的创建函数中使用 <code><a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a></code> 通常不是必需的</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/concatMap\" class=\"code-anchor\">concatMap</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a> } from 'rxjs';\n\nconst delays$ = <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(1000, 2000, Infinity, 3000);\n\ndelays$.pipe(\n  <a href=\"api/index/function/concatMap\" class=\"code-anchor\">concatMap</a>(ms => {\n    if (ms &#x3C; 10000) {\n      return <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(ms);\n    } else {\n      // This is probably overkill.\n      return <a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(() => new Error(`Invalid time ${ ms }`));\n    }\n  })\n)\n.subscribe({\n  next: console.log,\n  error: console.error\n});\n</code-example>\n<p>You can just throw the error instead</p>\n<p>你可以改为抛出错误</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/concatMap\" class=\"code-anchor\">concatMap</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a> } from 'rxjs';\n\nconst delays$ = <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(1000, 2000, Infinity, 3000);\n\ndelays$.pipe(\n  <a href=\"api/index/function/concatMap\" class=\"code-anchor\">concatMap</a>(ms => {\n    if (ms &#x3C; 10000) {\n      return <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(ms);\n    } else {\n      // Cleaner and easier to read for most folks.\n      throw new Error(`Invalid time ${ ms }`);\n    }\n  })\n)\n.subscribe({\n  next: console.log,\n  error: console.error\n});\n</code-example>\n\n</div>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"errorFactory\"></a>\n        <code>errorFactory</code>\n      </td>\n      <td class=\"param-type\"><code>() => any</code></td>\n      <td class=\"param-description\">\n      <p>        A factory function that will create the error instance that is pushed.</p>\n<p>一个工厂函数，它将创建被推送的错误实例。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值-1\">返回值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;never></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\"> <a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(error: any): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;never></code-example>\n\n\n  <div class=\"short-description\">\n    <p>Returns an observable that will error with the specified error immediately upon subscription.</p>\n<p>返回一个 observable，它会在订阅后立即发送指定的错误。</p>\n\n</div>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"error\"></a>\n        <code>error</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p>        The error instance to emit</p>\n<p>要发送的错误实例</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值-2\">返回值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;never></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\"> <a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(errorOrErrorFactory: any, scheduler: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a>): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;never></code-example>\n\n\n  <div class=\"short-description\">\n    <p>Notifies the consumer of an error using a given scheduler by scheduling it at delay <code>0</code> upon subscription.</p>\n<p>通过订阅时在延迟 <code>0</code> 处调度它，可以使用给定的调度器来通知消费者错误。</p>\n\n</div>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"errorOrErrorFactory\"></a>\n        <code>errorOrErrorFactory</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p>        An error instance or error factory</p>\n<p>错误实例或错误工厂</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"scheduler\"></a>\n        <code>scheduler</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a></code></td>\n      <td class=\"param-description\">\n      <p>        A scheduler to use to schedule the error notification</p>\n<p>用于安排错误通知的调度器</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值-3\">返回值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;never></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  </tbody></table>\n</section>\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - 6-to-7-change-summary\n - api/index\n - api/index/const/EMPTY\n - api/index/const/NEVER\n - api/index/function/retry\n - api/index/function/timeout\n - api/index/function/timeoutWith\n - api/operators/retry\n - api/operators/timeout\n - api/operators/timeoutWith\n - deprecations/breaking-changes\n - deprecations/subscribe-arguments\n - guide/testing/marble-testing\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/class/Observable\n - api/index/function/concatMap\n - api/index/function/defer\n - api/index/function/mergeMap\n - api/index/function/of\n - api/index/function/throwError#example\n - api/index/function/throwError#overloads\n - api/index/function/throwError#throwerror\n - api/index/function/throwError#unnecessary-usage\n - api/index/function/throwError#例子\n - api/index/function/throwError#非必要的使用\n - api/index/function/timer\n - api/index/function/timestamp\n - api/index/interface/SchedulerLike\n - https://github.com/reactivex/rxjs/edit/master/src/internal/observable/throwError.ts?message=docs(index)%3A%20describe%20your%20change...#L157-L162\n - https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/observable/throwError.ts#L157-L162\n-->"
}