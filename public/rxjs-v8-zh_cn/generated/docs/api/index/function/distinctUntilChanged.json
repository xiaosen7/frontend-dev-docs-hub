{
  "id": "api/index/function/distinctUntilChanged",
  "title": "distinctUntilChanged",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/distinctUntilChanged.ts?message=docs(index)%3A%20describe%20your%20change...#L11-L178\" aria-label=\"编辑建议\" title=\"编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/distinctUntilChanged.ts#L11-L178\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/distinctUntilChanged\", \"name\": \"distinctUntilChanged\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"distinctuntilchanged\">distinctUntilChanged<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/distinctUntilChanged#distinctuntilchanged\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n    <label class=\"api-status-label operator\">操作符</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p>Returns a result <a href=\"api/index/class/Observable\"><code>Observable</code></a> that emits all values pushed by the source observable if they\nare distinct in comparison to the last value the result observable emitted.</p>\n<p>When provided without parameters or with the first parameter (<code><a href=\"api/index/function/distinctUntilChanged#comparator\">comparator</a></code>),\nit behaves like this:</p>\n<ol>\n<li>It will always emit the first value from the source.</li>\n<li>For all subsequent values pushed by the source, they will be compared to the previously emitted values\nusing the provided <code>comparator</code> or an <code>===</code> equality check.</li>\n<li>If the value pushed by the source is determined to be unequal by this check, that value is emitted and\nbecomes the new \"previously emitted value\" internally.</li>\n</ol>\n<p>When the second parameter (<code><a href=\"api/index/function/distinctUntilChanged#keySelector\">keySelector</a></code>) is provided, the behavior\nchanges:</p>\n<ol>\n<li>It will always emit the first value from the source.</li>\n<li>The <code>keySelector</code> will be run against all values, including the first value.</li>\n<li>For all values after the first, the selected key will be compared against the key selected from\nthe previously emitted value using the <code>comparator</code>.</li>\n<li>If the keys are determined to be unequal by this check, the value (not the key), is emitted\nand the selected key from that value is saved for future comparisons against other keys.</li>\n</ol>\n<h2 id=\"examples\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/distinctUntilChanged#examples\"><i class=\"material-icons\">link</i></a></h2>\n<p>A very basic example with no <code><a href=\"api/index/function/distinctUntilChanged#comparator\">comparator</a></code>. Note that <code>1</code> is emitted more than once,\nbecause it's distinct in comparison to the <em>previously emitted</em> value,\nnot in comparison to <em>all other emitted values</em>.</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/distinctUntilChanged\" class=\"code-anchor\">distinctUntilChanged</a> } from 'rxjs';\n\n<a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(1, 1, 1, 2, 2, 2, 1, 1, 3, 3)\n  .pipe(<a href=\"api/index/function/distinctUntilChanged\" class=\"code-anchor\">distinctUntilChanged</a>())\n  .subscribe(console.log);\n// Logs: 1, 2, 1, 3\n</code-example>\n<p>With a <code><a href=\"api/index/function/distinctUntilChanged#comparator\">comparator</a></code>, you can do custom comparisons. Let's say\nyou only want to emit a value when all of its components have\nchanged:</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/distinctUntilChanged\" class=\"code-anchor\">distinctUntilChanged</a> } from 'rxjs';\n\nconst totallyDifferentBuilds$ = <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(\n  { engineVersion: '1.1.0', transmissionVersion: '1.2.0' },\n  { engineVersion: '1.1.0', transmissionVersion: '1.4.0' },\n  { engineVersion: '1.3.0', transmissionVersion: '1.4.0' },\n  { engineVersion: '1.3.0', transmissionVersion: '1.5.0' },\n  { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n).pipe(\n  <a href=\"api/index/function/distinctUntilChanged\" class=\"code-anchor\">distinctUntilChanged</a>((prev, curr) => {\n    return (\n      prev.engineVersion === curr.engineVersion ||\n      prev.transmissionVersion === curr.transmissionVersion\n    );\n  })\n);\n\ntotallyDifferentBuilds$.subscribe(console.log);\n\n// Logs:\n// { engineVersion: '1.1.0', transmissionVersion: '1.2.0' }\n// { engineVersion: '1.3.0', transmissionVersion: '1.4.0' }\n// { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n</code-example>\n<p>You can also provide a custom <code><a href=\"api/index/function/distinctUntilChanged#comparator\">comparator</a></code> to check that emitted\nchanges are only in one direction. Let's say you only want to get\nthe next record temperature:</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/distinctUntilChanged\" class=\"code-anchor\">distinctUntilChanged</a> } from 'rxjs';\n\nconst temps$ = <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(30, 31, 20, 34, 33, 29, 35, 20);\n\nconst recordHighs$ = temps$.pipe(\n  <a href=\"api/index/function/distinctUntilChanged\" class=\"code-anchor\">distinctUntilChanged</a>((prevHigh, temp) => {\n    // If the current temp is less than\n    // or the same as the previous record,\n    // the record hasn't changed.\n    return temp &#x3C;= prevHigh;\n  })\n);\n\nrecordHighs$.subscribe(console.log);\n// Logs: 30, 31, 34, 35\n</code-example>\n<p>Selecting update events only when the <code>updatedBy</code> field shows\nthe account changed hands.</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/distinctUntilChanged\" class=\"code-anchor\">distinctUntilChanged</a> } from 'rxjs';\n\n// A stream <a href=\"api/index/function/of\" class=\"code-anchor\">of</a> updates to a given account\nconst accountUpdates$ = <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(\n  { updatedBy: 'blesh', data: [] },\n  { updatedBy: 'blesh', data: [] },\n  { updatedBy: 'ncjamieson', data: [] },\n  { updatedBy: 'ncjamieson', data: [] },\n  { updatedBy: 'blesh', data: [] }\n);\n\n// We only want the events where it changed hands\nconst changedHands$ = accountUpdates$.pipe(\n  <a href=\"api/index/function/distinctUntilChanged\" class=\"code-anchor\">distinctUntilChanged</a>(undefined, update => update.updatedBy)\n);\n\nchangedHands$.subscribe(console.log);\n// Logs:\n// { updatedBy: 'blesh', data: Array[0] }\n// { updatedBy: 'ncjamieson', data: Array[0] }\n// { updatedBy: 'blesh', data: Array[0] }\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/distinctUntilChanged\" class=\"code-anchor\">distinctUntilChanged</a>&#x3C;T, K>(comparator?: (previous: K, current: K) => boolean, keySelector: (value: T) => K = <a href=\"api/index/function/identity\" class=\"code-anchor\">identity</a> as (value: T) => K): <a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction</a>&#x3C;T></code-example>\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"comparator\"></a>\n        <code>comparator</code>\n      </td>\n      <td class=\"param-type\"><code>(previous: K, current: K) => boolean</code></td>\n      <td class=\"param-description\">\n      <p>        可选。默认值为 <code>undefined</code>。</p>\n<p>        A function used to compare the previous and current keys for\nequality. Defaults to a <code>===</code> check.</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"keySelector\"></a>\n        <code>keySelector</code>\n      </td>\n      <td class=\"param-type\"><code>(value: T) => K</code></td>\n      <td class=\"param-description\">\n              <p>可选。默认值为 <code><a href=\"api/index/function/identity\" class=\"code-anchor\">identity</a> as (value: T) => K</code>。</p>\n        <p>Used to select a key value to be passed to the <code>comparator</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n  <p><code><a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction&#x3C;T></a></code>: A function that returns an Observable that emits items from the\nsource Observable with distinct values.</p>\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/distinctUntilChanged#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/index/function/distinct\"><code>distinct</code></a>\n</li>\n    <li><a href=\"api/index/function/distinctUntilKeyChanged\"><code>distinctUntilKeyChanged</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index\n - api/index/function/distinct\n - api/index/function/distinctUntilKeyChanged\n - api/index/function/filter\n - api/operators/distinctUntilChanged\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/class/Observable\n - api/index/function/distinct\n - api/index/function/distinctUntilChanged#comparator\n - api/index/function/distinctUntilChanged#distinctuntilchanged\n - api/index/function/distinctUntilChanged#examples\n - api/index/function/distinctUntilChanged#keySelector\n - api/index/function/distinctUntilChanged#see-also\n - api/index/function/distinctUntilKeyChanged\n - api/index/function/identity\n - api/index/function/of\n - api/index/interface/MonoTypeOperatorFunction\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/distinctUntilChanged.ts?message=docs(index)%3A%20describe%20your%20change...#L11-L178\n - https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/distinctUntilChanged.ts#L11-L178\n-->"
}