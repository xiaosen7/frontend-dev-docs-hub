{
  "id": "api/index/function/dematerialize",
  "title": "dematerialize",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/dematerialize.ts?message=docs(index)%3A%20describe%20your%20change...#L5-L71\" aria-label=\"编辑建议\" title=\"编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/dematerialize.ts#L5-L71\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/dematerialize\", \"name\": \"dematerialize\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"dematerialize\">dematerialize<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/dematerialize#dematerialize\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n    <label class=\"api-status-label operator\">操作符</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p>Converts an Observable of <a href=\"api/index/type-alias/ObservableNotification\"><code>ObservableNotification</code></a> objects into the emissions\nthat they represent.</p>\n<p>将 <a href=\"api/index/type-alias/ObservableNotification\"><code>ObservableNotification</code></a> 对象的 Observable 转换为它们所代表的发送物。</p>\n<p><span class=\"informal\">Unwraps <a href=\"api/index/type-alias/ObservableNotification\"><code>ObservableNotification</code></a> objects as actual <code>next</code>,\n<code>error</code> and <code>complete</code> emissions. The opposite of <a href=\"api/index/function/materialize\"><code>materialize</code></a>.</span></p>\n<p><span class=\"informal\">将 <a href=\"api/index/type-alias/ObservableNotification\"><code>ObservableNotification</code></a> 对象解包为实际的 <code>next</code>、<code>error</code> 和 <code>complete</code> 进行发出。是 <a href=\"api/index/function/materialize\"><code>materialize</code></a> 的反义词。</span></p>\n<p><img src=\"/assets/images/marble-diagrams/dematerialize.png\" width=\"100%\" alt=\"dematerialize marble diagram\"></p>\n<p><code><a href=\"api/index/function/dematerialize\" class=\"code-anchor\">dematerialize</a></code> is assumed to operate an Observable that only emits\n<a href=\"api/index/type-alias/ObservableNotification\"><code>ObservableNotification</code></a> objects as <code>next</code> emissions, and does not emit any\n<code>error</code>. Such Observable is the output of a <code><a href=\"api/index/function/materialize\" class=\"code-anchor\">materialize</a></code> operation. Those\nnotifications are then unwrapped using the metadata they contain, and emitted\nas <code>next</code>, <code>error</code>, and <code>complete</code> on the output Observable.</p>\n<p><code><a href=\"api/index/function/dematerialize\" class=\"code-anchor\">dematerialize</a></code> 假设对 Observable 的操作只会将 <a href=\"api/index/type-alias/ObservableNotification\"><code>ObservableNotification</code></a> 对象作为 <code>next</code> 通知进行发送，并且不会发送任何 <code>error</code>。这样的 Observable 就是 <code><a href=\"api/index/function/materialize\" class=\"code-anchor\">materialize</a></code> 操作的输出。然后使用它们包含的元数据对这些通知进行解包，并在输出 Observable 上发送 <code>next</code>、<code>error</code> 和 <code>complete</code>。</p>\n<p>Use this operator in conjunction with <a href=\"api/index/function/materialize\"><code>materialize</code></a>.</p>\n<p>将此操作符与 <a href=\"api/index/function/materialize\"><code>materialize</code></a> 结合使用。</p>\n<h2 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/dematerialize#example\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"例子\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/dematerialize#例子\"><i class=\"material-icons\">link</i></a></h2>\n<p>Convert an Observable of Notifications to an actual Observable</p>\n<p>将通知的 Observable 转换为实际的 Observable</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/interface/NextNotification\" class=\"code-anchor\">NextNotification</a>, <a href=\"api/index/interface/ErrorNotification\" class=\"code-anchor\">ErrorNotification</a>, <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/dematerialize\" class=\"code-anchor\">dematerialize</a> } from 'rxjs';\n\nconst notifA: <a href=\"api/index/interface/NextNotification\" class=\"code-anchor\">NextNotification</a>&#x3C;string> = { kind: 'N', value: 'A' };\nconst notifB: <a href=\"api/index/interface/NextNotification\" class=\"code-anchor\">NextNotification</a>&#x3C;string> = { kind: 'N', value: 'B' };\nconst notifE: <a href=\"api/index/interface/ErrorNotification\" class=\"code-anchor\">ErrorNotification</a> = { kind: 'E', error: new TypeError('x.toUpperCase is not a function') };\n\nconst materialized = <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(notifA, notifB, notifE);\n\nconst upperCase = materialized.pipe(<a href=\"api/index/function/dematerialize\" class=\"code-anchor\">dematerialize</a>());\nupperCase.subscribe({\n  next: x => console.log(x),\n  error: e => console.error(e)\n});\n\n// Results in:\n// A\n// B\n// TypeError: x.toUpperCase is not a function\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/dematerialize\" class=\"code-anchor\">dematerialize</a>&#x3C;N extends <a href=\"api/index/type-alias/ObservableNotification\" class=\"code-anchor\">ObservableNotification</a>&#x3C;any>>(): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;N, <a href=\"api/index/type-alias/ValueFromNotification\" class=\"code-anchor\">ValueFromNotification</a>&#x3C;N>></code-example>\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <p>没有参数。</p>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n  <p><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;N, <a href=\"api/index/type-alias/ValueFromNotification\" class=\"code-anchor\">ValueFromNotification</a>&#x3C;N>></code>: A function that returns an Observable that emits items and\nnotifications embedded in Notification objects emitted by the source\nObservable.</p>\n<p>一个返回 Observable 的函数，该 Observable 会发送由源 Observable 发送的 Notification 对象中内嵌的各种条目和通知。</p>\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/dematerialize#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/index/function/materialize\"><code>materialize</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index\n - api/index/function/materialize\n - api/index/interface/CompleteNotification\n - api/index/interface/ErrorNotification\n - api/index/interface/NextNotification\n - api/operators/dematerialize\n - deprecations/breaking-changes\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/function/dematerialize#dematerialize\n - api/index/function/dematerialize#example\n - api/index/function/dematerialize#see-also\n - api/index/function/dematerialize#例子\n - api/index/function/materialize\n - api/index/function/of\n - api/index/interface/ErrorNotification\n - api/index/interface/NextNotification\n - api/index/interface/OperatorFunction\n - api/index/type-alias/ObservableNotification\n - api/index/type-alias/ValueFromNotification\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/dematerialize.ts?message=docs(index)%3A%20describe%20your%20change...#L5-L71\n - https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/dematerialize.ts#L5-L71\n-->"
}