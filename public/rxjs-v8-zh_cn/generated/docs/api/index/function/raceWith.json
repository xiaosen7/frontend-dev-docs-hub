{
  "id": "api/index/function/raceWith",
  "title": "raceWith",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/raceWith.ts?message=docs(index)%3A%20describe%20your%20change...#L5-L49\" aria-label=\"编辑建议\" title=\"编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/raceWith.ts#L5-L49\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/raceWith\", \"name\": \"raceWith\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"racewith\">raceWith<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/raceWith#racewith\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n    <label class=\"api-status-label operator\">操作符</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p>Creates an Observable that mirrors the first source Observable to emit a next,\nerror or complete notification from the combination of the Observable to which\nthe operator is applied and supplied Observables.</p>\n<p>返回一个 Observable，它会镜像所提供的这些源中首先发出 next、error 或 complete 的那个，这些源包括源 Observable 和那些传入的 Observable 参数。</p>\n<h2 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/raceWith#example\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"例子\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/raceWith#例子\"><i class=\"material-icons\">link</i></a></h2>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>, <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>, <a href=\"api/index/function/raceWith\" class=\"code-anchor\">raceWith</a> } from 'rxjs';\n\nconst obs1 = <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(7000).pipe(<a href=\"api/index/function/map\" class=\"code-anchor\">map</a>(() => 'slow one'));\nconst obs2 = <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(3000).pipe(<a href=\"api/index/function/map\" class=\"code-anchor\">map</a>(() => 'fast one'));\nconst obs3 = <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(5000).pipe(<a href=\"api/index/function/map\" class=\"code-anchor\">map</a>(() => 'medium one'));\n\nobs1\n  .pipe(<a href=\"api/index/function/raceWith\" class=\"code-anchor\">raceWith</a>(obs2, obs3))\n  .subscribe(winner => console.log(winner));\n\n// Outputs\n// a series <a href=\"api/index/function/of\" class=\"code-anchor\">of</a> 'fast one'\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/raceWith\" class=\"code-anchor\">raceWith</a>&#x3C;T, A extends readonly unknown[]>(...otherSources: [...ObservableInputTuple&#x3C;A>]): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, T | A[number]></code-example>\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"otherSources\"></a>\n        <code>otherSources</code>\n      </td>\n      <td class=\"param-type\"><code>[...ObservableInputTuple&#x3C;A>]</code></td>\n      <td class=\"param-description\">\n      <p>        Sources used to race for which Observable emits first.</p>\n<p>一些用于竞争哪个 Observable 最先发出条目的源。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n  <p><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, T | A[number]></code>: A function that returns an Observable that mirrors the output of the\nfirst Observable to emit an item.</p>\n<p>一个返回 Observable 的函数，该 Observable 会镜像首先发出了条目的 Observable 的输出。</p>\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/deprecations\n - api/index\n - api/operators/raceWith\n - guide/importing\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/function/interval\n - api/index/function/map\n - api/index/function/of\n - api/index/function/raceWith#example\n - api/index/function/raceWith#racewith\n - api/index/function/raceWith#例子\n - api/index/interface/OperatorFunction\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/raceWith.ts?message=docs(index)%3A%20describe%20your%20change...#L5-L49\n - https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/raceWith.ts#L5-L49\n-->"
}