{
  "id": "api/index/function/retry",
  "title": "retry",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/retry.ts?message=docs(index)%3A%20describe%20your%20change...#L36-L167\" aria-label=\"编辑建议\" title=\"编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/retry.ts#L36-L167\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/retry\", \"name\": \"retry\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"retry\">retry<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/retry#retry\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n    <label class=\"api-status-label operator\">操作符</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p>Returns an Observable that mirrors the source Observable with the exception of an <code>error</code>.</p>\n<p>If the source Observable calls <code>error</code>, this method will resubscribe to the source Observable for a maximum of\n<code><a href=\"api/index/function/count\" class=\"code-anchor\">count</a></code> resubscriptions rather than propagating the <code>error</code> call.</p>\n<p><img src=\"/assets/images/marble-diagrams/retry.png\" width=\"100%\" alt=\"retry marble diagram\"></p>\n<p>The number of retries is determined by the <code><a href=\"api/index/function/count\" class=\"code-anchor\">count</a></code> parameter. It can be set either by passing a number to\n<code><a href=\"api/index/function/retry\" class=\"code-anchor\">retry</a></code> function or by setting <code><a href=\"api/index/function/count\" class=\"code-anchor\">count</a></code> property when <code><a href=\"api/index/function/retry\" class=\"code-anchor\">retry</a></code> is configured using <a href=\"api/index/interface/RetryConfig\"><code>RetryConfig</code></a>. If\n<code><a href=\"api/index/function/count\" class=\"code-anchor\">count</a></code> is omitted, <code><a href=\"api/index/function/retry\" class=\"code-anchor\">retry</a></code> will try to resubscribe on errors infinite number of times.</p>\n<p>Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those\nemitted during failed subscriptions. For example, if an Observable fails at first but emits <code>[1, 2]</code> then\nsucceeds the second time and emits: <code>[1, 2, 3, 4, 5, complete]</code> then the complete stream of emissions and\nnotifications would be: <code>[1, 2, 1, 2, 3, 4, 5, complete]</code>.</p>\n<h2 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/retry#example\"><i class=\"material-icons\">link</i></a></h2>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>, <a href=\"api/index/function/mergeMap\" class=\"code-anchor\">mergeMap</a>, <a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>, <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/retry\" class=\"code-anchor\">retry</a> } from 'rxjs';\n\nconst source = <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000);\nconst result = source.pipe(\n  <a href=\"api/index/function/mergeMap\" class=\"code-anchor\">mergeMap</a>(val => val > 5 ? <a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(() => 'Error!') : <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(val)),\n  <a href=\"api/index/function/retry\" class=\"code-anchor\">retry</a>(2) // <a href=\"api/index/function/retry\" class=\"code-anchor\">retry</a> 2 times on error\n);\n\nresult.subscribe({\n  next: value => console.log(value),\n  error: err => console.log(`${ err }: Retried 2 times then quit!`)\n});\n\n// Output:\n// 0..1..2..3..4..5..\n// 0..1..2..3..4..5..\n// 0..1..2..3..4..5..\n// 'Error!: Retried 2 times then quit!'\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/retry\" class=\"code-anchor\">retry</a>&#x3C;T>(configOrCount: number | <a href=\"api/index/interface/RetryConfig\" class=\"code-anchor\">RetryConfig</a> = Infinity): <a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction</a>&#x3C;T></code-example>\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"configOrCount\"></a>\n        <code>configOrCount</code>\n      </td>\n      <td class=\"param-type\"><code>number | <a href=\"api/index/interface/RetryConfig\" class=\"code-anchor\">RetryConfig</a></code></td>\n      <td class=\"param-description\">\n              <p>可选。默认值为 <code>Infinity</code>。</p>\n        <p>Either number of retry attempts before failing or a <a href=\"api/index/interface/RetryConfig\"><code>RetryConfig</code></a> object.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n  <p><code><a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction&#x3C;T></a></code>: A function that returns an Observable that will resubscribe to the\nsource stream when the source stream errors, at most <code><a href=\"api/index/function/count\" class=\"code-anchor\">count</a></code> times.</p>\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/retry#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/index/function/retryWhen\"><code>retryWhen</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/deprecations\n - api/index\n - api/index/function/catchError\n - api/index/function/repeat\n - api/index/function/repeatWhen\n - api/index/function/retryWhen\n - api/index/interface/RetryConfig\n - api/operators/RetryConfig\n - api/operators/catchError\n - api/operators/retry\n - api/operators/retryWhen\n - deprecations/breaking-changes\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/function/count\n - api/index/function/interval\n - api/index/function/mergeMap\n - api/index/function/of\n - api/index/function/retry#example\n - api/index/function/retry#retry\n - api/index/function/retry#see-also\n - api/index/function/retryWhen\n - api/index/function/throwError\n - api/index/interface/MonoTypeOperatorFunction\n - api/index/interface/RetryConfig\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/retry.ts?message=docs(index)%3A%20describe%20your%20change...#L36-L167\n - https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/retry.ts#L36-L167\n-->"
}