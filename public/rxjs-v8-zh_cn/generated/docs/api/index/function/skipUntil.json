{
  "id": "api/index/function/skipUntil",
  "title": "skipUntil",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/skipUntil.ts?message=docs(index)%3A%20describe%20your%20change...#L6-L83\" aria-label=\"编辑建议\" title=\"编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/skipUntil.ts#L6-L83\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/skipUntil\", \"name\": \"skipUntil\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"skipuntil\">skipUntil<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/skipUntil#skipuntil\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n    <label class=\"api-status-label operator\">操作符</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p>Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.</p>\n<p>返回一个 Observable，它会跳过源 Observable 发送的条目，直到第二个 Observable 发出一个条目为止。</p>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/skipUntil\" class=\"code-anchor\">skipUntil</a>&#x3C;T>(notifier: <a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a>&#x3C;any>): <a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction</a>&#x3C;T></code-example>\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"notifier\"></a>\n        <code>notifier</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a>&#x3C;any></code></td>\n      <td class=\"param-description\">\n        <p>      An <code><a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a></code> that has to emit an item before the source Observable elements begin to\n  be mirrored by the resulting Observable.</p>\n  <p>第二个 Observable，它必须发送一个条目，结果 Observable 才会开始镜像源 Observable 中的元素。</p>\n  \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n  <p><code><a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction&#x3C;T></a></code>: A function that returns an Observable that skips items from the\nsource Observable until the <code>notifier</code> Observable emits an item, then emits the\nremaining items.</p>\n<p>返回一个 Observable 的函数，该 Observable 会跳过源 Observable 中的条目，直到第二个 Observable 发出一个条目时，该 Observable 才会发出剩下的条目。</p>\n\n  \n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/skipUntil#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p>The <code><a href=\"api/index/function/skipUntil\" class=\"code-anchor\">skipUntil</a></code> operator causes the observable stream to skip the emission of values until the passed in observable\nemits the first value. This can be particularly useful in combination with user interactions, responses of HTTP\nrequests or waiting for specific times to pass by.</p>\n<p><code><a href=\"api/index/function/skipUntil\" class=\"code-anchor\">skipUntil</a></code> 操作符会使 observable 流跳过发送的值，直到传入的 observable 发出了第一个值为止。这在需要组合用户交互、http 请求响应或等待特定时间过去时特别有用。</p>\n<p><img src=\"/assets/images/marble-diagrams/skipUntil.png\" width=\"100%\" alt=\"skipUntil marble diagram\"></p>\n<p>Internally, the <code><a href=\"api/index/function/skipUntil\" class=\"code-anchor\">skipUntil</a></code> operator subscribes to the passed in <code>notifier</code> <code><a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a></code> (which gets converted\nto an Observable) in order to recognize the emission of its first value. When <code>notifier</code> emits next, the operator\nunsubscribes from it and starts emitting the values of the <em>source</em> observable until it completes or errors. It\nwill never let the <em>source</em> observable emit any values if the <code>notifier</code> completes or throws an error without\nemitting a value before.</p>\n<p>在内部，<code><a href=\"api/index/function/skipUntil\" class=\"code-anchor\">skipUntil</a></code> 操作符会订阅传入的 observable（在下面称为<em>通知器（notifier）</em>），以便监听它何时发出第一个值。发生这种情况时，操作符会退订<em>通知器</em>并开始发送<em>源</em> observable 的值。如果<em>通知器</em>完成或抛出错误而之前没有发送值，则它永远不会让<em>源</em> observable 发送任何值。</p>\n<h2 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/skipUntil#example\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"例子\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/skipUntil#例子\"><i class=\"material-icons\">link</i></a></h2>\n<p>In the following example, all emitted values of the interval observable are skipped until the user clicks anywhere\nwithin the page</p>\n<p>在下面的示例中，所有发送的区间 observable 值都将被跳过，直到用户单击页面中的任意位置</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>, <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/skipUntil\" class=\"code-anchor\">skipUntil</a> } from 'rxjs';\n\nconst intervalObservable = <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000);\nconst click = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\n\nconst emitAfterClick = intervalObservable.pipe(\n  <a href=\"api/index/function/skipUntil\" class=\"code-anchor\">skipUntil</a>(click)\n);\n// clicked at 4.6s. output: 5...6...7...8........ or\n// clicked at 7.3s. output: 8...9...10..11.......\nemitAfterClick.subscribe(value => console.log(value));\n</code-example>\n\n</section>\n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/skipUntil#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/index/function/last\"><code>last</code></a>\n</li>\n    <li><a href=\"api/index/function/skip\"><code>skip</code></a>\n</li>\n    <li><a href=\"api/index/function/skipWhile\"><code>skipWhile</code></a>\n</li>\n    <li><a href=\"api/index/function/skipLast\"><code>skipLast</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index\n - api/index/function/last\n - api/index/function/skip\n - api/index/function/skipLast\n - api/index/function/skipWhile\n - api/operators/skipUntil\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/function/fromEvent\n - api/index/function/interval\n - api/index/function/last\n - api/index/function/skip\n - api/index/function/skipLast\n - api/index/function/skipUntil#description\n - api/index/function/skipUntil#example\n - api/index/function/skipUntil#see-also\n - api/index/function/skipUntil#skipuntil\n - api/index/function/skipUntil#例子\n - api/index/function/skipWhile\n - api/index/interface/MonoTypeOperatorFunction\n - api/index/type-alias/ObservableInput\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/skipUntil.ts?message=docs(index)%3A%20describe%20your%20change...#L6-L83\n - https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/skipUntil.ts#L6-L83\n-->"
}