{
  "id": "api/index/const/asyncScheduler",
  "title": "asyncScheduler",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/scheduler/async.ts?message=docs(index)%3A%20describe%20your%20change...#L68-L67\" aria-label=\"编辑建议\" title=\"编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/scheduler/async.ts#L68-L67\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/const/asyncScheduler\", \"name\": \"asyncScheduler\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"asyncscheduler\">asyncScheduler<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/const/asyncScheduler#asyncscheduler\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label const\">const</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p>Async Scheduler</p>\n<p>异步调度器</p>\n<p></p>\n  \n\n  \n\n  \n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n  const <a href=\"api/index/const/asyncScheduler\" class=\"code-anchor\">asyncScheduler</a>: AsyncScheduler;\n  </code-example>\n\n  \n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/const/asyncScheduler#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p><span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span></p>\n<p><span class=\"informal\">像使用 setTimeout(task, duration) 一样安排任务</span></p>\n<p><code>async</code> scheduler schedules tasks asynchronously, by putting them on the JavaScript\nevent loop queue. It is best used to delay tasks in time or to schedule tasks repeating\nin intervals.</p>\n<p><code>async</code> 调度器通过将任务放在 JavaScript 事件循环队列中来异步调度任务。最好用于及时延迟任务或安排定时重复的任务。</p>\n<p>If you just want to \"defer\" task, that is to perform it right after currently\nexecuting synchronous code ends (commonly achieved by <code>setTimeout(deferredTask, 0)</code>),\nbetter choice will be the <a href=\"api/index/const/asapScheduler\"><code>asapScheduler</code></a> scheduler.</p>\n<p>如果你只想“延迟”任务，即在当前执行的同步代码结束后立即执行它（通常由 <code>setTimeout(deferredTask, 0)</code> 实现），更好的选择是 <a href=\"api/index/const/asapScheduler\"><code>asapScheduler</code></a> 调度器。</p>\n<h2 id=\"examples\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/const/asyncScheduler#examples\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"例子\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/const/asyncScheduler#例子\"><i class=\"material-icons\">link</i></a></h2>\n<p>Use async scheduler to delay task</p>\n<p>使用异步调度器延迟任务</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/const/asyncScheduler\" class=\"code-anchor\">asyncScheduler</a> } from 'rxjs';\n\nconst task = () => console.log('it works!');\n\nasyncScheduler.schedule(task, 2000);\n\n// After 2 seconds logs:\n// \"it works!\"\n</code-example>\n<p>Use async scheduler to repeat task in intervals</p>\n<p>使用异步调度器定时重复任务</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/const/asyncScheduler\" class=\"code-anchor\">asyncScheduler</a> } from 'rxjs';\n\nfunction task(state) {\n  console.log(state);\n  this.schedule(state + 1, 1000); // `this` references currently executing Action,\n                                  // which we reschedule with new state and <a href=\"api/index/function/delay\" class=\"code-anchor\">delay</a>\n}\n\nasyncScheduler.schedule(task, 3000, 0);\n\n// Logs:\n// 0 after 3s\n// 1 after 4s\n// 2 after 5s\n// 3 after 6s\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/deprecations\n - api/index\n - api/index/const/animationFrameScheduler\n - api/index/const/asapScheduler\n - api/index/const/async\n - api/index/const/queueScheduler\n - api/index/function/auditTime\n - api/index/function/bindCallback\n - api/index/function/debounceTime\n - api/index/function/delay\n - api/index/function/from\n - api/index/function/interval\n - api/index/function/sampleTime\n - api/index/function/subscribeOn\n - api/index/function/throttleTime\n - api/index/function/timeInterval\n - api/index/function/timeout\n - api/index/function/timeoutWith\n - api/index/function/timer\n - api/index/function/timestamp\n - api/index/interface/TimeoutConfig\n - api/operators/TimeoutConfig\n - api/operators/auditTime\n - api/operators/debounceTime\n - api/operators/delay\n - api/operators/sampleTime\n - api/operators/subscribeOn\n - api/operators/throttleTime\n - api/operators/timeInterval\n - api/operators/timeout\n - api/operators/timeoutWith\n - api/operators/timestamp\n - deprecations/scheduler-argument\n - guide/scheduler\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/const/asapScheduler\n - api/index/const/asyncScheduler#asyncscheduler\n - api/index/const/asyncScheduler#description\n - api/index/const/asyncScheduler#examples\n - api/index/const/asyncScheduler#例子\n - api/index/function/delay\n - https://github.com/reactivex/rxjs/edit/master/src/internal/scheduler/async.ts?message=docs(index)%3A%20describe%20your%20change...#L68-L67\n - https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/scheduler/async.ts#L68-L67\n-->"
}