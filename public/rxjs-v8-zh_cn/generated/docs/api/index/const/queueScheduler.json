{
  "id": "api/index/const/queueScheduler",
  "title": "queueScheduler",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/scheduler/queue.ts?message=docs(index)%3A%20describe%20your%20change...#L86-L85\" aria-label=\"编辑建议\" title=\"编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/scheduler/queue.ts#L86-L85\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/const/queueScheduler\", \"name\": \"queueScheduler\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"queuescheduler\">queueScheduler<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/const/queueScheduler#queuescheduler\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label const\">const</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p>Queue Scheduler</p>\n<p>队列调度器</p>\n<p></p>\n  \n\n  \n\n  \n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n  const <a href=\"api/index/const/queueScheduler\" class=\"code-anchor\">queueScheduler</a>: QueueScheduler;\n  </code-example>\n\n  \n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/const/queueScheduler#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p><span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span></p>\n<p><span class=\"informal\">将每个下一个任务放在队列中，而不是立即执行</span></p>\n<p><code><a href=\"api/index/const/queue\" class=\"code-anchor\">queue</a></code> scheduler, when used with delay, behaves the same as <a href=\"api/index/const/asyncScheduler\"><code>asyncScheduler</code></a> scheduler.</p>\n<p><code><a href=\"api/index/const/queue\" class=\"code-anchor\">queue</a></code> 调度器，当与延迟一起使用时，其行为与 <a href=\"api/index/const/asyncScheduler\"><code>asyncScheduler</code></a> 调度器相同。</p>\n<p>When used without delay, it schedules given task synchronously - executes it right when\nit is scheduled. However when called recursively, that is when inside the scheduled task,\nanother task is scheduled with queue scheduler, instead of executing immediately as well,\nthat task will be put on a queue and wait for current one to finish.</p>\n<p>当不需要使用延迟时，它会同步调度给定的任务 - 在调度时立即执行它。然而，当递归调用时，也就是在计划任务内部调用时，其它任务会被队列调度器调度，而不是立即执行，该任务将被放入队列并等待当前任务完成。</p>\n<p>This means that when you execute task with <code><a href=\"api/index/const/queue\" class=\"code-anchor\">queue</a></code> scheduler, you are sure it will end\nbefore any other task scheduled with that scheduler will start.</p>\n<p>这意味着当你使用 <code><a href=\"api/index/const/queue\" class=\"code-anchor\">queue</a></code> 调度器执行任务时，你要确保它会在使用该调度器调度的任何其它任务开始之前结束。</p>\n<h2 id=\"examples\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/const/queueScheduler#examples\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"例子\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/const/queueScheduler#例子\"><i class=\"material-icons\">link</i></a></h2>\n<p>Schedule recursively first, then do something</p>\n<p>先递归调度，然后做某事</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/const/queueScheduler\" class=\"code-anchor\">queueScheduler</a> } from 'rxjs';\n\nqueueScheduler.schedule(() => {\n  queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a <a href=\"api/index/const/queue\" class=\"code-anchor\">queue</a>\n\n  console.log('<a href=\"api/index/function/first\" class=\"code-anchor\">first</a>');\n});\n\n// Logs:\n// \"<a href=\"api/index/function/first\" class=\"code-anchor\">first</a>\"\n// \"second\"\n</code-example>\n<p>Reschedule itself recursively</p>\n<p>递归地重新调度自身</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/const/queueScheduler\" class=\"code-anchor\">queueScheduler</a> } from 'rxjs';\n\nqueueScheduler.schedule(function(state) {\n  if (state !== 0) {\n    console.log('before', state);\n    this.schedule(state - 1); // `this` references currently executing Action,\n                              // which we reschedule with new state\n    console.log('after', state);\n  }\n}, 0, 3);\n\n// In scheduler that runs recursively, you would expect:\n// \"before\", 3\n// \"before\", 2\n// \"before\", 1\n// \"after\", 1\n// \"after\", 2\n// \"after\", 3\n\n// But with <a href=\"api/index/const/queue\" class=\"code-anchor\">queue</a> it logs:\n// \"before\", 3\n// \"after\", 3\n// \"before\", 2\n// \"after\", 2\n// \"before\", 1\n// \"after\", 1\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/deprecations\n - api/index\n - api/index/const/queue\n - guide/scheduler\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/const/asyncScheduler\n - api/index/const/queue\n - api/index/const/queueScheduler#description\n - api/index/const/queueScheduler#examples\n - api/index/const/queueScheduler#queuescheduler\n - api/index/const/queueScheduler#例子\n - api/index/function/first\n - https://github.com/reactivex/rxjs/edit/master/src/internal/scheduler/queue.ts?message=docs(index)%3A%20describe%20your%20change...#L86-L85\n - https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/scheduler/queue.ts#L86-L85\n-->"
}