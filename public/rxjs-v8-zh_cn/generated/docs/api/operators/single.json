{
  "id": "api/operators/single",
  "title": "single",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/single.ts?message=docs(operators)%3A%20describe%20your%20change...#L12-L137\" aria-label=\"编辑建议\" title=\"编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/single.ts#L12-L137\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/single\", \"name\": \"single\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"single\">single<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/single#single\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n    <label class=\"api-status-label operator\">操作符</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p>Returns an observable that asserts that only one value is\nemitted from the observable that matches the predicate. If no\npredicate is provided, then it will assert that the observable\nonly emits one value.</p>\n<p>返回一个 observable，它断言只有一个与谓词匹配的 observable 发送一个值。如果没有提供谓词，那么它将断言 observable 只发送一个值。</p>\n<p>In the event that the observable is empty, it will throw an\n<a href=\"api/index/interface/EmptyError\"><code>EmptyError</code></a>.</p>\n<p>如果 observable 为空，它将抛出 <a href=\"api/index/interface/EmptyError\"><code>EmptyError</code></a>。</p>\n<p>In the event that two values are found that match the predicate,\nor when there are two values emitted and no predicate, it will\nthrow a <a href=\"api/index/interface/SequenceError\"><code>SequenceError</code></a></p>\n<p>如果找到与谓词匹配的两个值，或者当发送两个值但没有谓词时，它将抛出 <a href=\"api/index/interface/SequenceError\"><code>SequenceError</code></a></p>\n<p>In the event that no values match the predicate, if one is provided,\nit will throw a <a href=\"api/index/interface/NotFoundError\"><code>NotFoundError</code></a></p>\n<p>如果没有值与谓词匹配，如果提供了一个，它将抛出一个 <a href=\"api/index/interface/NotFoundError\"><code>NotFoundError</code></a></p>\n<h2 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/single#example\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"例子\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/single#例子\"><i class=\"material-icons\">link</i></a></h2>\n<p>Expect only <code>name</code> beginning with <code>'B'</code></p>\n<p>仅期望以 <code>'B'</code> 开头的 <code>name</code></p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/single\" class=\"code-anchor\">single</a> } from 'rxjs';\n\nconst source1 = <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(\n { name: 'Ben' },\n { name: 'Tracy' },\n { name: 'Laney' },\n { name: 'Lily' }\n);\n\nsource1\n  .pipe(<a href=\"api/index/function/single\" class=\"code-anchor\">single</a>(x => x.name.startsWith('B')))\n  .subscribe(x => console.log(x));\n// Emits 'Ben'\n\nconst source2 = <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(\n { name: 'Ben' },\n { name: 'Tracy' },\n { name: 'Bradley' },\n { name: 'Lincoln' }\n);\n\nsource2\n  .pipe(<a href=\"api/index/function/single\" class=\"code-anchor\">single</a>(x => x.name.startsWith('B')))\n  .subscribe({ error: err => console.error(err) });\n// Error emitted: <a href=\"api/index/interface/SequenceError\" class=\"code-anchor\">SequenceError</a>('Too many values match')\n\nconst source3 = <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(\n { name: 'Laney' },\n { name: 'Tracy' },\n { name: 'Lily' },\n { name: 'Lincoln' }\n);\n\nsource3\n  .pipe(<a href=\"api/index/function/single\" class=\"code-anchor\">single</a>(x => x.name.startsWith('B')))\n  .subscribe({ error: err => console.error(err) });\n// Error emitted: <a href=\"api/index/interface/NotFoundError\" class=\"code-anchor\">NotFoundError</a>('No values match')\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/single\" class=\"code-anchor\">single</a>&#x3C;T>(predicate?: (value: T, index: number, source: <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T>) => boolean): <a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction</a>&#x3C;T></code-example>\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"predicate\"></a>\n        <code>predicate</code>\n      </td>\n      <td class=\"param-type\"><code>(value: T, index: number, source: <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T>) => boolean</code></td>\n      <td class=\"param-description\">\n        <p>      可选。默认值为 <code>undefined</code>。</p>\n  <p>      A predicate function to evaluate items emitted by the source Observable.</p>\n  <p>一个谓词函数，用于评估源 Observable 发送的条目。</p>\n  \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n  <p><code><a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction&#x3C;T></a></code>: A function that returns an Observable that emits the single item\nemitted by the source Observable that matches the predicate.</p>\n<p>一个返回 Observable 的函数，该 Observable 发送与谓词匹配的源 Observable 发送的单个条目。</p>\n\n  \n\n\n\n<h4 class=\"no-anchor\" id=\"异常\">异常</h4>\n\n<p><code><a href=\"api/index/interface/NotFoundError\" class=\"code-anchor\">NotFoundError</a></code> Delivers an NotFoundError to the Observer's <code>error</code>\ncallback if the Observable completes before any <code>next</code> notification was sent.</p>\n<p>如果 Observable 在发送任何 <code>next</code> 通知之前完成，则将 NotFoundError 传给 Observer 的 <code>error</code> 回调。</p>\n\n\n<p><code><a href=\"api/index/interface/SequenceError\" class=\"code-anchor\">SequenceError</a></code> Delivers a SequenceError if more than one value is emitted that matches the\nprovided predicate. If no predicate is provided, will deliver a SequenceError if more\nthan one value comes from the source</p>\n<p>如果发送多个与提供的谓词匹配的值，则提供 SequenceError。如果没有提供谓词，如果多个值来自源，将传递一个 SequenceError</p>\n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/single#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/operators/first\"><code>first</code></a>\n</li>\n    <li><a href=\"api/operators/find\"><code>find</code></a>\n</li>\n    <li><a href=\"api/operators/findIndex\"><code>findIndex</code></a>\n</li>\n    <li><a href=\"api/operators/elementAt\"><code>elementAt</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index/interface/NotFoundError\n - api/index/interface/SequenceError\n - api/operators\n - api/operators/elementAt\n-->\n<!-- links from this doc:\n - /api\n - api/index/class/Observable\n - api/index/function/of\n - api/index/function/single\n - api/index/interface/EmptyError\n - api/index/interface/MonoTypeOperatorFunction\n - api/index/interface/NotFoundError\n - api/index/interface/SequenceError\n - api/operators\n - api/operators/elementAt\n - api/operators/find\n - api/operators/findIndex\n - api/operators/first\n - api/operators/single#example\n - api/operators/single#see-also\n - api/operators/single#single\n - api/operators/single#例子\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/single.ts?message=docs(operators)%3A%20describe%20your%20change...#L12-L137\n - https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/single.ts#L12-L137\n-->"
}