{
  "id": "api/operators/sampleTime",
  "title": "sampleTime",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/sampleTime.ts?message=docs(operators)%3A%20describe%20your%20change...#L5-L68\" aria-label=\"编辑建议\" title=\"编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/sampleTime.ts#L5-L68\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/sampleTime\", \"name\": \"sampleTime\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"sampletime\">sampleTime<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/sampleTime#sampletime\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n    <label class=\"api-status-label operator\">操作符</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p>Emits the most recently emitted value from the source Observable within\nperiodic time intervals.</p>\n<p>在周期性时间间隔内发送从源 Observable 中最近发出的值。</p>\n<p><span class=\"informal\">Samples the source Observable at periodic time\nintervals, emitting what it samples.</span></p>\n<p><span class=\"informal\">以周期性的时间间隔对源 Observable 进行采样，发送它所采样的内容。</span></p>\n<p><img src=\"/assets/images/marble-diagrams/sampleTime.png\" width=\"100%\" alt=\"sampleTime marble diagram\"></p>\n<p><code><a href=\"api/index/function/sampleTime\" class=\"code-anchor\">sampleTime</a></code> periodically looks at the source Observable and emits whichever\nvalue it has most recently emitted since the previous sampling, unless the\nsource has not emitted anything since the previous sampling. The sampling\nhappens periodically in time every <code>period</code> milliseconds (or the time unit\ndefined by the optional <code>scheduler</code> argument). The sampling starts as soon as\nthe output Observable is subscribed.</p>\n<p><code><a href=\"api/index/function/sampleTime\" class=\"code-anchor\">sampleTime</a></code> 会定期查看源 Observable 并发送自上次采样以来它最近发出的任何值，除非源自上次采样以来没有发送任何东西。采样会每隔几毫秒（或由可选 <code>scheduler</code> 参数定义的 <code>period</code> 单位）定期发生。一旦订阅了输出 Observable，采样就开始了。</p>\n<h2 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/sampleTime#example\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"例子\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/sampleTime#例子\"><i class=\"material-icons\">link</i></a></h2>\n<p>Every second, emit the most recent click at most once</p>\n<p>每秒最多发送一次最近的点击</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/sampleTime\" class=\"code-anchor\">sampleTime</a> } from 'rxjs';\n\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst result = clicks.pipe(<a href=\"api/index/function/sampleTime\" class=\"code-anchor\">sampleTime</a>(1000));\n\nresult.subscribe(x => console.log(x));\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/sampleTime\" class=\"code-anchor\">sampleTime</a>&#x3C;T>(period: number, scheduler: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a> = <a href=\"api/index/const/asyncScheduler\" class=\"code-anchor\">asyncScheduler</a>): <a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction</a>&#x3C;T></code-example>\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"period\"></a>\n        <code>period</code>\n      </td>\n      <td class=\"param-type\"><code>number</code></td>\n      <td class=\"param-description\">\n      <p>        The sampling period expressed in milliseconds or the\ntime unit determined internally by the optional <code>scheduler</code>.</p>\n<p>以毫秒表示的采样周期或由可选 <code>scheduler</code> 内部确定的时间单位。</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"scheduler\"></a>\n        <code>scheduler</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a></code></td>\n      <td class=\"param-description\">\n      <p>        可选。默认值为 <code><a href=\"api/index/const/asyncScheduler\" class=\"code-anchor\">asyncScheduler</a></code>。</p>\n<p>        The <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a> to use for\nmanaging the timers that handle the sampling.</p>\n<p>用于管理处理采样行为的定时器。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n  <p><code><a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction&#x3C;T></a></code>: A function that returns an Observable that emits the results of\nsampling the values emitted by the source Observable at the specified time\ninterval.</p>\n<p>一个返回 Observable 的函数，该 Observable 会在指定的时间间隔内发送对源 Observable 发出的值进行采样的结果。</p>\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/sampleTime#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/operators/auditTime\"><code>auditTime</code></a>\n</li>\n    <li><a href=\"api/operators/debounceTime\"><code>debounceTime</code></a>\n</li>\n    <li><a href=\"api/operators/delay\"><code>delay</code></a>\n</li>\n    <li><a href=\"api/operators/sample\"><code>sample</code></a>\n</li>\n    <li><a href=\"api/operators/throttleTime\"><code>throttleTime</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/auditTime\n - api/operators/debounce\n - api/operators/debounceTime\n - api/operators/delay\n - api/operators/delayWhen\n - api/operators/sample\n - api/operators/throttleTime\n-->\n<!-- links from this doc:\n - /api\n - api/index/const/asyncScheduler\n - api/index/function/fromEvent\n - api/index/function/sampleTime\n - api/index/interface/MonoTypeOperatorFunction\n - api/index/interface/SchedulerLike\n - api/operators\n - api/operators/auditTime\n - api/operators/debounceTime\n - api/operators/delay\n - api/operators/sample\n - api/operators/sampleTime#example\n - api/operators/sampleTime#sampletime\n - api/operators/sampleTime#see-also\n - api/operators/sampleTime#例子\n - api/operators/throttleTime\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/sampleTime.ts?message=docs(operators)%3A%20describe%20your%20change...#L5-L68\n - https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/sampleTime.ts#L5-L68\n-->"
}