{
  "id": "api/operators/throttle",
  "title": "throttle",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/throttle.ts?message=docs(operators)%3A%20describe%20your%20change...#L17-L143\" aria-label=\"编辑建议\" title=\"编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/throttle.ts#L17-L143\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/throttle\", \"name\": \"throttle\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"throttle\">throttle<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/throttle#throttle\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n    <label class=\"api-status-label operator\">操作符</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p>Emits a value from the source Observable, then ignores subsequent source\nvalues for a duration determined by another Observable, then repeats this\nprocess.</p>\n<p>从源 Observable 发送一个值，然后在由另一个 Observable 确定的持续时间内忽略后续源值，然后重复此过程。</p>\n<p><span class=\"informal\">It's like <a href=\"api/operators/throttleTime\"><code>throttleTime</code></a>, but the silencing\nduration is determined by a second Observable.</span></p>\n<p><span class=\"informal\">它很像 <a href=\"api/operators/throttleTime\"><code>throttleTime</code></a>，但其静默持续时间由第二个 Observable 决定。</span></p>\n<p><img src=\"/assets/images/marble-diagrams/throttle.svg\" width=\"100%\" alt=\"throttle marble diagram\"></p>\n<p><code><a href=\"api/index/function/throttle\" class=\"code-anchor\">throttle</a></code> emits the source Observable values on the output Observable\nwhen its internal timer is disabled, and ignores source values when the timer\nis enabled. Initially, the timer is disabled. As soon as the first source\nvalue arrives, it is forwarded to the output Observable, and then the timer\nis enabled by calling the <code>durationSelector</code> function with the source value,\nwhich returns the \"duration\" Observable. When the duration Observable emits a\nvalue, the timer is disabled, and this process repeats for the\nnext source value.</p>\n<p>当其内部定时器被禁用时，<code><a href=\"api/index/function/throttle\" class=\"code-anchor\">throttle</a></code> 就会在输出 Observable 上发送源 Observable 的值，并在启用内部定时器时忽略源值。最初，定时器会被禁用。一旦第一个源值抵达，它就会转发到输出 Observable，然后通过使用源值调用 <code>durationSelector</code> 函数来启用计时器，该函数会返回一个 持续时间（duration）Observable。当持续时间 Observable 发出一个值时，定时器就会被禁用，下一个源值也以此类推。</p>\n<h2 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/throttle#example\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"例子\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/throttle#例子\"><i class=\"material-icons\">link</i></a></h2>\n<p>Emit clicks at a rate of at most one click per second</p>\n<p>以每秒最多一次点击的速度发送点击</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/throttle\" class=\"code-anchor\">throttle</a>, <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a> } from 'rxjs';\n\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst result = clicks.pipe(<a href=\"api/index/function/throttle\" class=\"code-anchor\">throttle</a>(() => <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000)));\n\nresult.subscribe(x => console.log(x));\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/throttle\" class=\"code-anchor\">throttle</a>&#x3C;T>(durationSelector: (value: T) => <a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a>&#x3C;any>, <a href=\"api/index/const/config\" class=\"code-anchor\">config</a>: <a href=\"api/index/interface/ThrottleConfig\" class=\"code-anchor\">ThrottleConfig</a> = defaultThrottleConfig): <a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction</a>&#x3C;T></code-example>\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"durationSelector\"></a>\n        <code>durationSelector</code>\n      </td>\n      <td class=\"param-type\"><code>(value: T) => <a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a>&#x3C;any></code></td>\n      <td class=\"param-description\">\n      <p>        A function\nthat receives a value from the source Observable, for computing the silencing\nduration for each source value, returned as an Observable or a Promise.</p>\n<p>一个从源 Observable 接收值的函数，用于计算每个源值的静默持续时间，返回值为 Observable 或 Promise。</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"config\"></a>\n        <code><a href=\"api/index/const/config\" class=\"code-anchor\">config</a></code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/index/interface/ThrottleConfig\" class=\"code-anchor\">ThrottleConfig</a></code></td>\n      <td class=\"param-description\">\n      <p>        可选。默认值为 <code>defaultThrottleConfig</code>。</p>\n<p>        a configuration object to define <code>leading</code> and <code>trailing</code> behavior. Defaults\nto <code>{ leading: true, trailing: false }</code>.</p>\n<p>用于定义 <code>leading</code> 和 <code>trailing</code> 行为的配置对象。默认为 <code>{ leading: true, trailing: false }</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n  <p><code><a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction&#x3C;T></a></code>: A function that returns an Observable that performs the throttle\noperation to limit the rate of emissions from the source.</p>\n<p>一个返回 Observable 的函数，该 Observable 会执行节流操作以限制源的发送速度。</p>\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/throttle#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/operators/audit\"><code>audit</code></a>\n</li>\n    <li><a href=\"api/operators/debounce\"><code>debounce</code></a>\n</li>\n    <li><a href=\"api/operators/delayWhen\"><code>delayWhen</code></a>\n</li>\n    <li><a href=\"api/operators/sample\"><code>sample</code></a>\n</li>\n    <li><a href=\"api/operators/throttleTime\"><code>throttleTime</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/audit\n - api/operators/debounce\n - api/operators/debounceTime\n - api/operators/delay\n - api/operators/delayWhen\n - api/operators/sample\n - api/operators/throttleTime\n-->\n<!-- links from this doc:\n - /api\n - api/index/const/config\n - api/index/function/fromEvent\n - api/index/function/interval\n - api/index/function/throttle\n - api/index/interface/MonoTypeOperatorFunction\n - api/index/interface/ThrottleConfig\n - api/index/type-alias/ObservableInput\n - api/operators\n - api/operators/audit\n - api/operators/debounce\n - api/operators/delayWhen\n - api/operators/sample\n - api/operators/throttle#example\n - api/operators/throttle#see-also\n - api/operators/throttle#throttle\n - api/operators/throttle#例子\n - api/operators/throttleTime\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/throttle.ts?message=docs(operators)%3A%20describe%20your%20change...#L17-L143\n - https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/throttle.ts#L17-L143\n-->"
}