{
  "id": "api/operators/bufferWhen",
  "title": "bufferWhen",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/bufferWhen.ts?message=docs(operators)%3A%20describe%20your%20change...#L7-L94\" aria-label=\"编辑建议\" title=\"编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/bufferWhen.ts#L7-L94\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/bufferWhen\", \"name\": \"bufferWhen\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"bufferwhen\">bufferWhen<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/bufferWhen#bufferwhen\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n    <label class=\"api-status-label operator\">操作符</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p>Buffers the source Observable values, using a factory function of closing\nObservables to determine when to close, emit, and reset the buffer.</p>\n<p><span class=\"informal\">Collects values from the past as an array. When it\nstarts collecting values, it calls a function that returns an Observable that\ntells when to close the buffer and restart collecting.</span></p>\n<p><img src=\"/assets/images/marble-diagrams/bufferWhen.svg\" width=\"100%\" alt=\"bufferWhen marble diagram\"></p>\n<p>Opens a buffer immediately, then closes the buffer when the observable\nreturned by calling <code>closingSelector</code> function emits a value. When it closes\nthe buffer, it immediately opens a new buffer and repeats the process.</p>\n<h2 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/bufferWhen#example\"><i class=\"material-icons\">link</i></a></h2>\n<p>Emit an array of the last clicks every [1-5] random seconds</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/bufferWhen\" class=\"code-anchor\">bufferWhen</a>, <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a> } from 'rxjs';\n\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst buffered = clicks.pipe(\n  <a href=\"api/index/function/bufferWhen\" class=\"code-anchor\">bufferWhen</a>(() => <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000 + Math.random() * 4000))\n);\nbuffered.subscribe(x => console.log(x));\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/bufferWhen\" class=\"code-anchor\">bufferWhen</a>&#x3C;T>(closingSelector: () => <a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a>&#x3C;any>): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, T[]></code-example>\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"closingSelector\"></a>\n        <code>closingSelector</code>\n      </td>\n      <td class=\"param-type\"><code>() => <a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a>&#x3C;any></code></td>\n      <td class=\"param-description\">\n      <p>        A function that takes no\narguments and returns an Observable that signals buffer closure.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n  <p><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, T[]></code>: A function that returns an Observable of arrays of buffered values.</p>\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/bufferWhen#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/operators/buffer\"><code>buffer</code></a>\n</li>\n    <li><a href=\"api/operators/bufferCount\"><code>bufferCount</code></a>\n</li>\n    <li><a href=\"api/operators/bufferTime\"><code>bufferTime</code></a>\n</li>\n    <li><a href=\"api/operators/bufferToggle\"><code>bufferToggle</code></a>\n</li>\n    <li><a href=\"api/operators/windowWhen\"><code>windowWhen</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/buffer\n - api/operators/bufferCount\n - api/operators/bufferTime\n - api/operators/bufferToggle\n - api/operators/windowWhen\n-->\n<!-- links from this doc:\n - /api\n - api/index/function/bufferWhen\n - api/index/function/fromEvent\n - api/index/function/interval\n - api/index/interface/OperatorFunction\n - api/index/type-alias/ObservableInput\n - api/operators\n - api/operators/buffer\n - api/operators/bufferCount\n - api/operators/bufferTime\n - api/operators/bufferToggle\n - api/operators/bufferWhen#bufferwhen\n - api/operators/bufferWhen#example\n - api/operators/bufferWhen#see-also\n - api/operators/windowWhen\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/bufferWhen.ts?message=docs(operators)%3A%20describe%20your%20change...#L7-L94\n - https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/bufferWhen.ts#L7-L94\n-->"
}