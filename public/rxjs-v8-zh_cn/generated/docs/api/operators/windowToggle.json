{
  "id": "api/operators/windowToggle",
  "title": "windowToggle",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/windowToggle.ts?message=docs(operators)%3A%20describe%20your%20change...#L10-L151\" aria-label=\"编辑建议\" title=\"编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/windowToggle.ts#L10-L151\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/windowToggle\", \"name\": \"windowToggle\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"windowtoggle\">windowToggle<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/windowToggle#windowtoggle\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n    <label class=\"api-status-label operator\">操作符</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p>Branch out the source Observable values as a nested Observable starting from\nan emission from <code>openings</code> and ending when the output of <code>closingSelector</code>\nemits.</p>\n<p>将源 Observable 的每个值分叉为一个嵌套 Observable，从 <code>openings</code> 发出值开始，到 <code>closingSelector</code> 的输出发出值结束。</p>\n<p><span class=\"informal\">It's like <a href=\"api/operators/bufferToggle\"><code>bufferToggle</code></a>, but emits a nested\nObservable instead of an array.</span></p>\n<p><span class=\"informal\">类似于 <a href=\"api/operators/bufferToggle\"><code>bufferToggle</code></a>，但它会发送一个嵌套的 Observable 而非数组。</span></p>\n<p><img src=\"/assets/images/marble-diagrams/windowToggle.png\" width=\"100%\" alt=\"windowToggle marble diagram\"></p>\n<p>Returns an Observable that emits windows of items it collects from the source\nObservable. The output Observable emits windows that contain those items\nemitted by the source Observable between the time when the <code>openings</code>\nObservable emits an item and when the Observable returned by\n<code>closingSelector</code> emits an item.</p>\n<p>返回一个 Observable，它会发出一些从源 Observable 收集来的条目的窗口。输出 Observable 会发送一些窗口，其中包含源 Observable 在从 <code>openings</code> Observable 发出条目到 <code>closingSelector</code> 返回的 Observable 发出条目之间发送的那些条目。</p>\n<h2 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/windowToggle#example\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"例子\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/windowToggle#例子\"><i class=\"material-icons\">link</i></a></h2>\n<p>Every other second, emit the click events from the next 500ms</p>\n<p>每隔一秒，发出接下来的 500 毫秒内发生的所有点击事件</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>, <a href=\"api/index/function/windowToggle\" class=\"code-anchor\">windowToggle</a>, <a href=\"api/index/const/EMPTY\" class=\"code-anchor\">EMPTY</a>, <a href=\"api/index/function/mergeAll\" class=\"code-anchor\">mergeAll</a> } from 'rxjs';\n\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst openings = <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000);\nconst result = clicks.pipe(\n  <a href=\"api/index/function/windowToggle\" class=\"code-anchor\">windowToggle</a>(openings, i => i % 2 ? <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(500) : <a href=\"api/index/const/EMPTY\" class=\"code-anchor\">EMPTY</a>),\n  <a href=\"api/index/function/mergeAll\" class=\"code-anchor\">mergeAll</a>()\n);\nresult.subscribe(x => console.log(x));\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/windowToggle\" class=\"code-anchor\">windowToggle</a>&#x3C;T, O>(openings: <a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a>&#x3C;O>, closingSelector: (openValue: O) => <a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a>&#x3C;any>): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T>></code-example>\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"openings\"></a>\n        <code>openings</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a>&#x3C;O></code></td>\n      <td class=\"param-description\">\n      <p>        An observable of notifications to start new\nwindows.</p>\n<p>一个 Observable，用作启动新窗口的通知。</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"closingSelector\"></a>\n        <code>closingSelector</code>\n      </td>\n      <td class=\"param-type\"><code>(openValue: O) => <a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a>&#x3C;any></code></td>\n      <td class=\"param-description\">\n      <p>        A function that takes\nthe value emitted by the <code>openings</code> observable and returns an Observable,\nwhich, when it emits a next notification, signals that the\nassociated window should complete.</p>\n<p>一个函数，它接受由 <code>openings</code> Observable 发来的值并返回一个 Observable，当它发出 next 通知时，表示其关联的窗口该完成了。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n  <p><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T>></code>: A function that returns an Observable of windows, which in turn are\nObservables.</p>\n<p>一个返回以窗口为条目的 Observable 的函数，这些窗口又都是 Observables。</p>\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/windowToggle#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/operators/window\"><code>window</code></a>\n</li>\n    <li><a href=\"api/operators/windowCount\"><code>windowCount</code></a>\n</li>\n    <li><a href=\"api/operators/windowTime\"><code>windowTime</code></a>\n</li>\n    <li><a href=\"api/operators/windowWhen\"><code>windowWhen</code></a>\n</li>\n    <li><a href=\"api/operators/bufferToggle\"><code>bufferToggle</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/bufferToggle\n - api/operators/window\n - api/operators/windowCount\n - api/operators/windowTime\n - api/operators/windowWhen\n-->\n<!-- links from this doc:\n - /api\n - api/index/class/Observable\n - api/index/const/EMPTY\n - api/index/function/fromEvent\n - api/index/function/interval\n - api/index/function/mergeAll\n - api/index/function/windowToggle\n - api/index/interface/OperatorFunction\n - api/index/type-alias/ObservableInput\n - api/operators\n - api/operators/bufferToggle\n - api/operators/window\n - api/operators/windowCount\n - api/operators/windowTime\n - api/operators/windowToggle#example\n - api/operators/windowToggle#see-also\n - api/operators/windowToggle#windowtoggle\n - api/operators/windowToggle#例子\n - api/operators/windowWhen\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/windowToggle.ts?message=docs(operators)%3A%20describe%20your%20change...#L10-L151\n - https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/windowToggle.ts#L10-L151\n-->"
}