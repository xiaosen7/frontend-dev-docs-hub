{
  "id": "api/operators/bufferCount",
  "title": "bufferCount",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/bufferCount.ts?message=docs(operators)%3A%20describe%20your%20change...#L5-L139\" aria-label=\"编辑建议\" title=\"编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/bufferCount.ts#L5-L139\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/bufferCount\", \"name\": \"bufferCount\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"buffercount\">bufferCount<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/bufferCount#buffercount\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n    <label class=\"api-status-label operator\">操作符</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p>Buffers the source Observable values until the size hits the maximum\n<code>bufferSize</code> given.</p>\n<p>缓冲源 Observable 值，直到大小达到给定的最大 <code>bufferSize</code>。</p>\n<p><span class=\"informal\">Collects values from the past as an array, and emits\nthat array only when its size reaches <code>bufferSize</code>.</span></p>\n<p><span class=\"informal\">将过去的值收集为一个数组，并仅在其大小达到 <code>bufferSize</code> 时发送该数组。</span></p>\n<p><img src=\"/assets/images/marble-diagrams/bufferCount.png\" width=\"100%\" alt=\"bufferCount marble diagram\"></p>\n<p>Buffers a number of values from the source Observable by <code>bufferSize</code> then\nemits the buffer and clears it, and starts a new buffer each\n<code>startBufferEvery</code> values. If <code>startBufferEvery</code> is not provided or is\n<code>null</code>, then new buffers are started immediately at the start of the source\nand when each buffer closes and is emitted.</p>\n<p>通过 <code>bufferSize</code> 缓冲来自源 Observable 的多个值，然后发送缓冲区并清除它，并且每过 <code>startBufferEvery</code> 次就启动一个新缓冲区。如果 <code>startBufferEvery</code> 未提供或为 <code>null</code>，则新缓冲区会在源开始处以及每个缓冲区关闭并发送时启动新缓冲区。</p>\n<h2 id=\"examples\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/bufferCount#examples\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"例子\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/bufferCount#例子\"><i class=\"material-icons\">link</i></a></h2>\n<p>Emit the last two click events as an array</p>\n<p>将最后两个点击事件作为数组进行发送</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/bufferCount\" class=\"code-anchor\">bufferCount</a> } from 'rxjs';\n\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst buffered = clicks.pipe(<a href=\"api/index/function/bufferCount\" class=\"code-anchor\">bufferCount</a>(2));\nbuffered.subscribe(x => console.log(x));\n</code-example>\n<p>On every click, emit the last two click events as an array</p>\n<p>每次单击时，将最后两个单击事件作为数组发送</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/bufferCount\" class=\"code-anchor\">bufferCount</a> } from 'rxjs';\n\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst buffered = clicks.pipe(<a href=\"api/index/function/bufferCount\" class=\"code-anchor\">bufferCount</a>(2, 1));\nbuffered.subscribe(x => console.log(x));\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/bufferCount\" class=\"code-anchor\">bufferCount</a>&#x3C;T>(bufferSize: number, startBufferEvery: number = null): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, T[]></code-example>\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"bufferSize\"></a>\n        <code>bufferSize</code>\n      </td>\n      <td class=\"param-type\"><code>number</code></td>\n      <td class=\"param-description\">\n      <p>        The maximum size of the buffer emitted.</p>\n<p>发送的缓冲区的最大大小。</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"startBufferEvery\"></a>\n        <code>startBufferEvery</code>\n      </td>\n      <td class=\"param-type\"><code>number</code></td>\n      <td class=\"param-description\">\n      <p>        可选。默认值为 <code>null</code>。</p>\n<p>        Interval at which to start a new buffer.\nFor example if <code>startBufferEvery</code> is <code>2</code>, then a new buffer will be started\non every other value from the source. A new buffer is started at the\nbeginning of the source by default.</p>\n<p>用于开始新缓冲区的时间间隔。例如，如果 <code>startBufferEvery</code> 是 <code>2</code> ，那么将在源的每个其他值上启动一个新缓冲区。默认情况下，会在源的开头启动一个新缓冲区。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n  <p><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, T[]></code>: A function that returns an Observable of arrays of buffered values.</p>\n<p>一个返回 Observable 的函数，该 Observable 的值是一些缓冲区构成的数组。</p>\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/bufferCount#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/operators/buffer\"><code>buffer</code></a>\n</li>\n    <li><a href=\"api/operators/bufferTime\"><code>bufferTime</code></a>\n</li>\n    <li><a href=\"api/operators/bufferToggle\"><code>bufferToggle</code></a>\n</li>\n    <li><a href=\"api/operators/bufferWhen\"><code>bufferWhen</code></a>\n</li>\n    <li><a href=\"api/operators/pairwise\"><code>pairwise</code></a>\n</li>\n    <li><a href=\"api/operators/windowCount\"><code>windowCount</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/buffer\n - api/operators/bufferTime\n - api/operators/bufferToggle\n - api/operators/bufferWhen\n - api/operators/pairwise\n - api/operators/windowCount\n-->\n<!-- links from this doc:\n - /api\n - api/index/function/bufferCount\n - api/index/function/fromEvent\n - api/index/interface/OperatorFunction\n - api/operators\n - api/operators/buffer\n - api/operators/bufferCount#buffercount\n - api/operators/bufferCount#examples\n - api/operators/bufferCount#see-also\n - api/operators/bufferCount#例子\n - api/operators/bufferTime\n - api/operators/bufferToggle\n - api/operators/bufferWhen\n - api/operators/pairwise\n - api/operators/windowCount\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/bufferCount.ts?message=docs(operators)%3A%20describe%20your%20change...#L5-L139\n - https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/bufferCount.ts#L5-L139\n-->"
}