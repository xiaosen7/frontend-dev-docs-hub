{
  "id": "api/operators/debounce",
  "title": "debounce",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/debounce.ts?message=docs(operators)%3A%20describe%20your%20change...#L7-L135\" aria-label=\"编辑建议\" title=\"编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/debounce.ts#L7-L135\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/debounce\", \"name\": \"debounce\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"debounce\">debounce<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/debounce#debounce\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n    <label class=\"api-status-label operator\">操作符</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p>Emits a notification from the source Observable only after a particular time span\ndetermined by another Observable has passed without another source emission.</p>\n<p>只有当已经过去了由另一个 Observable 确定的时间段，而且在此期间源没有发出过其它值时，才会从源 Observable 上发出通知。</p>\n<p><span class=\"informal\">It's like <a href=\"api/operators/debounceTime\"><code>debounceTime</code></a>, but the time span of\nemission silence is determined by a second Observable.</span></p>\n<p><span class=\"informal\">它很像 <a href=\"api/operators/debounceTime\"><code>debounceTime</code></a>，不过它发送时的静默时间跨度由第二个 Observable 决定。</span></p>\n<p><img src=\"/assets/images/marble-diagrams/debounce.svg\" width=\"100%\" alt=\"debounce marble diagram\"></p>\n<p><code><a href=\"api/index/function/debounce\" class=\"code-anchor\">debounce</a></code> delays notifications emitted by the source Observable, but drops previous\npending delayed emissions if a new notification arrives on the source Observable.\nThis operator keeps track of the most recent notification from the source\nObservable, and spawns a duration Observable by calling the\n<code>durationSelector</code> function. The notification is emitted only when the duration\nObservable emits a next notification, and if no other notification was emitted on\nthe source Observable since the duration Observable was spawned. If a new\nnotification appears before the duration Observable emits, the previous notification will\nnot be emitted and a new duration is scheduled from <code>durationSelector</code> is scheduled.\nIf the completing event happens during the scheduled duration the last cached notification\nis emitted before the completion event is forwarded to the output observable.\nIf the error event happens during the scheduled duration or after it only the error event is\nforwarded to the output observable. The cache notification is not emitted in this case.</p>\n<p><code><a href=\"api/index/function/debounce\" class=\"code-anchor\">debounce</a></code> 会推迟源 Observable 发送的通知，但如果源 Observable 上来了新的值，则会丢弃以前挂起的延迟发送物。该操作符会跟踪来自源 Observable 的最新通知，并通过调用 <code>durationSelector</code> 函数生成一个控制持续时间的 Observable。只有当持续时间 Observable 发出了 next 通知，并且自生成持续时间 Observable 以源 Observable 上没有发送过其它通知，它才会发出此通知。如果在持续时间 Observable 发送值之前出现了新的通知，则不会再发送早先的那些通知，并且会将新通知安排在由 <code>durationSelector</code> 确定的新持续时间。如果在计划的持续时间内发生了 complete 事件，则会在 complete 事件被转发到输出 observable 之前发送最后一个缓存的通知。如果在计划的持续时间内或之后发生了 error 事件，则仅将此 error 事件转发到输出 observable。在这种情况下不会发送缓存的通知。</p>\n<p>Like <a href=\"api/operators/debounceTime\"><code>debounceTime</code></a>, this is a rate-limiting operator, and also a\ndelay-like operator since output emissions do not necessarily occur at the\nsame time as they did on the source Observable.</p>\n<p>像 <a href=\"api/operators/debounceTime\"><code>debounceTime</code></a> 一样，这是一个限速操作符，也是一个延迟类的操作符，因为输出上的发送不一定会与源 Observable 上的发送同时发生。</p>\n<h2 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/debounce#example\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"例子\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/debounce#例子\"><i class=\"material-icons\">link</i></a></h2>\n<p>Emit the most recent click after a burst of clicks</p>\n<p>当收到一阵疯狂点击之后只发送最近的点击</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/scan\" class=\"code-anchor\">scan</a>, <a href=\"api/index/function/debounce\" class=\"code-anchor\">debounce</a>, <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a> } from 'rxjs';\n\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst result = clicks.pipe(\n  <a href=\"api/index/function/scan\" class=\"code-anchor\">scan</a>(i => ++i, 1),\n  <a href=\"api/index/function/debounce\" class=\"code-anchor\">debounce</a>(i => <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(200 * i))\n);\nresult.subscribe(x => console.log(x));\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/debounce\" class=\"code-anchor\">debounce</a>&#x3C;T>(durationSelector: (value: T) => <a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a>&#x3C;any>): <a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction</a>&#x3C;T></code-example>\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"durationSelector\"></a>\n        <code>durationSelector</code>\n      </td>\n      <td class=\"param-type\"><code>(value: T) => <a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a>&#x3C;any></code></td>\n      <td class=\"param-description\">\n      <p>        A function\nthat receives a value from the source Observable, for computing the timeout\nduration for each source value, returned as an Observable or a Promise.</p>\n<p>用于从源 Observable 接收值的函数，用于计算每个源值的超时持续时间，以 Observable 或 Promise 形式返回。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n  <p><code><a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction&#x3C;T></a></code>: A function that returns an Observable that delays the emissions of\nthe source Observable by the specified duration Observable returned by\n<code>durationSelector</code>, and may drop some values if they occur too frequently.</p>\n<p>一个返回 Observable 的函数。该函数将源 Observable 的发送进行延迟，其发送时间由 <code>durationSelector</code> 返回的持续时间 Observable 决定，如果它们发生得太频繁，可能会丢弃一些值。</p>\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/debounce#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/operators/audit\"><code>audit</code></a>\n</li>\n    <li><a href=\"api/operators/auditTime\"><code>auditTime</code></a>\n</li>\n    <li><a href=\"api/operators/debounceTime\"><code>debounceTime</code></a>\n</li>\n    <li><a href=\"api/operators/delay\"><code>delay</code></a>\n</li>\n    <li><a href=\"api/operators/sample\"><code>sample</code></a>\n</li>\n    <li><a href=\"api/operators/sampleTime\"><code>sampleTime</code></a>\n</li>\n    <li><a href=\"api/operators/throttle\"><code>throttle</code></a>\n</li>\n    <li><a href=\"api/operators/throttleTime\"><code>throttleTime</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/audit\n - api/operators/debounceTime\n - api/operators/delay\n - api/operators/delayWhen\n - api/operators/sample\n - api/operators/throttle\n-->\n<!-- links from this doc:\n - /api\n - api/index/function/debounce\n - api/index/function/fromEvent\n - api/index/function/interval\n - api/index/function/scan\n - api/index/interface/MonoTypeOperatorFunction\n - api/index/type-alias/ObservableInput\n - api/operators\n - api/operators/audit\n - api/operators/auditTime\n - api/operators/debounce#debounce\n - api/operators/debounce#example\n - api/operators/debounce#see-also\n - api/operators/debounce#例子\n - api/operators/debounceTime\n - api/operators/delay\n - api/operators/sample\n - api/operators/sampleTime\n - api/operators/throttle\n - api/operators/throttleTime\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/debounce.ts?message=docs(operators)%3A%20describe%20your%20change...#L7-L135\n - https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/debounce.ts#L7-L135\n-->"
}