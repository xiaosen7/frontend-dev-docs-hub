{
  "id": "deprecations/multicasting",
  "title": "Multicasting",
  "contents": "\n<div class=\"content\">\n<h1 id=\"multicasting\">Multicasting<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#multicasting\"><i class=\"material-icons\">link</i></a></h1>\n<p>In version 7, the multicasting APIs were simplified to just a few functions:</p>\n<ul>\n<li><a href=\"/api/index/function/connectable\">connectable</a></li>\n<li><a href=\"/api/operators/connect\">connect</a></li>\n<li><a href=\"/api/operators/share\">share</a></li>\n</ul>\n<p>And <a href=\"/api/operators/shareReplay\">shareReplay</a> - which is a thin wrapper around the now highly-configurable <a href=\"/api/operators/share\">share</a> operator.</p>\n<p>Other APIs that relate to multicasting are now deprecated.</p>\n<div class=\"alert is-important\">\n    <span>\n        These deprecations were introduced in RxJS 7.0 and will become breaking in RxJS 8.\n    </span>\n</div>\n<h2 id=\"apis-affected-by-this-change\">APIs affected by this Change<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#apis-affected-by-this-change\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li><a href=\"/api/index/class/ConnectableObservable\">ConnectableObservable</a></li>\n<li><a href=\"/api/operators/multicast\">multicast</a></li>\n<li><a href=\"/api/operators/publish\">publish</a></li>\n<li><a href=\"/api/operators/publishBehavior\">publishBehavior</a></li>\n<li><a href=\"/api/operators/publishLast\">publishLast</a></li>\n<li><a href=\"/api/operators/publishReplay\">publishReplay</a></li>\n<li><a href=\"/api/operators/refCount\">refCount</a></li>\n</ul>\n<h2 id=\"how-to-refactor\">How to refactor<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#how-to-refactor\"><i class=\"material-icons\">link</i></a></h2>\n<h3 id=\"connectableobservable\">ConnectableObservable<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#connectableobservable\"><i class=\"material-icons\">link</i></a></h3>\n<p>Instead of creating a <a href=\"/api/index/class/ConnectableObservable\">ConnectableObservable</a> instance, call the <a href=\"/api/index/function/connectable\">connectable</a> function to obtain a connectable observable.</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { ConnectableObservable, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a> } from 'rxjs';\n\n// deprecated\nconst tick$ = new ConnectableObservable(\n  <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000),\n  () => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>());\ntick$.connect();\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>(<a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000), {\n  connector: () => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>()\n});\ntick$.connect();\n</code-example>\n<p>In situations in which the <code>refCount</code> method is used, the <a href=\"/api/operators/share\">share</a> operator can be used instead.</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { ConnectableObservable, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a> } from 'rxjs';\n\n// deprecated\nconst tick$ = new ConnectableObservable(\n  <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000),\n  () => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>()\n).refCount();\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/share\" class=\"code-anchor\">share</a>, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/share\" class=\"code-anchor\">share</a>({ connector: () => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>() })\n);\n</code-example>\n<h3 id=\"multicast\">multicast<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#multicast\"><i class=\"material-icons\">link</i></a></h3>\n<p>Where <a href=\"/api/operators/multicast\">multicast</a> is called with a subject factory, can be replaced with <a href=\"/api/index/function/connectable\">connectable</a>.</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, multicast, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>, ConnectableObservable } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  multicast(() => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>())\n) as ConnectableObservable&#x3C;number>;\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>(<a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000), {\n  connector: () => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>()\n});\n</code-example>\n<p>Where <a href=\"/api/operators/multicast\">multicast</a> is called with a subject instance, it can be replaced with <a href=\"/api/index/function/connectable\">connectable</a> and a local subject instance.</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, multicast, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>, ConnectableObservable } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  multicast(new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>())\n) as ConnectableObservable&#x3C;number>;\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>(<a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000), {\n  connector: () => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>(),\n  resetOnDisconnect: false\n});\n</code-example>\n<p>Where <a href=\"/api/operators/multicast\">multicast</a> is used in conjunction with <a href=\"/api/operators/refCount\">refCount</a>, it can be replaced with <a href=\"/api/index/function/connectable\">share</a>.</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, multicast, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>, refCount } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  multicast(() => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>()),\n  refCount()\n);\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/share\" class=\"code-anchor\">share</a>, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/share\" class=\"code-anchor\">share</a>({ connector: () => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>() })\n);\n</code-example>\n<p>Where <a href=\"/api/operators/multicast\">multicast</a> is used with a selector, it can be replaced with <a href=\"/api/index/function/connect\">connect</a>.</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, multicast, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>, <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a> } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  multicast(\n    () => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>(),\n    (source) => <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a>([source, source])\n  )\n);\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/connect\" class=\"code-anchor\">connect</a>, <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a>, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/connect\" class=\"code-anchor\">connect</a>((source) => <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a>([source, source]), {\n    connector: () => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>()\n  })\n);\n</code-example>\n<h3 id=\"publish\">publish<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#publish\"><i class=\"material-icons\">link</i></a></h3>\n<p>If you're using <a href=\"/api/operators/publish\">publish</a> to create a <a href=\"/api/index/class/ConnectableObservable\">ConnectableObservable</a>, you can use <a href=\"/api/index/function/connectable\">connectable</a> instead.</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, publish, ConnectableObservable } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  publish()\n) as ConnectableObservable&#x3C;number>;\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>(<a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000), {\n  connector: () => new <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>&#x3C;number>(),\n  resetOnDisconnect: false\n});\n</code-example>\n<p>And if <a href=\"/api/operators/refCount\">refCount</a> is being applied to the result of <a href=\"/api/operators/publish\">publish</a>, you can use <a href=\"/api/operators/share\">share</a> to replace both.</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, publish, refCount } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  publish(),\n  refCount()\n);\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/share\" class=\"code-anchor\">share</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/share\" class=\"code-anchor\">share</a>({\n    resetOnError: false,\n    resetOnComplete: false,\n    resetOnRefCountZero: false\n  })\n);\n</code-example>\n<p>If <a href=\"/api/operators/publish\">publish</a> is being called with a selector, you can use the <a href=\"/api/operators/connect\">connect</a> operator instead.</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, publish, <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a> } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  publish((source) => <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a>([source, source]))\n);\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/connect\" class=\"code-anchor\">connect</a>, <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/connect\" class=\"code-anchor\">connect</a>((source) => <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a>([source, source]))\n);\n</code-example>\n<h3 id=\"publishbehavior\">publishBehavior<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#publishbehavior\"><i class=\"material-icons\">link</i></a></h3>\n<p>If you're using <a href=\"/api/operators/publishBehavior\">publishBehavior</a> to create a <a href=\"/api/index/class/ConnectableObservable\">ConnectableObservable</a>, you can use <a href=\"/api/index/function/connectable\">connectable</a> and a <a href=\"api/index/class/BehaviorSubject\">BehaviorSubject</a> instead.</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, publishBehavior, ConnectableObservable } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  publishBehavior(0)\n) as ConnectableObservable&#x3C;number>;\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/class/BehaviorSubject\" class=\"code-anchor\">BehaviorSubject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>(<a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000), {\n  connector: () => new <a href=\"api/index/class/BehaviorSubject\" class=\"code-anchor\">BehaviorSubject</a>(0),\n  resetOnDisconnect: false\n});\n</code-example>\n<p>And if <a href=\"/api/operators/refCount\">refCount</a> is being applied to the result of <a href=\"/api/operators/publishBehavior\">publishBehavior</a>, you can use the <a href=\"/api/operators/share\">share</a> operator - with a <a href=\"api/index/class/BehaviorSubject\">BehaviorSubject</a> connector - to replace both.</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, publishBehavior, refCount } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  publishBehavior(0),\n  refCount()\n);\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/share\" class=\"code-anchor\">share</a>, <a href=\"api/index/class/BehaviorSubject\" class=\"code-anchor\">BehaviorSubject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/share\" class=\"code-anchor\">share</a>({\n    connector: () => new <a href=\"api/index/class/BehaviorSubject\" class=\"code-anchor\">BehaviorSubject</a>(0),\n    resetOnError: false,\n    resetOnComplete: false,\n    resetOnRefCountZero: false\n  })\n);\n</code-example>\n<h3 id=\"publishlast\">publishLast<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#publishlast\"><i class=\"material-icons\">link</i></a></h3>\n<p>If you're using <a href=\"/api/operators/publishLast\">publishLast</a> to create a <a href=\"/api/index/class/ConnectableObservable\">ConnectableObservable</a>, you can use <a href=\"/api/index/function/connectable\">connectable</a> and an <a href=\"api/index/class/AsyncSubject\">AsyncSubject</a> instead.</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, publishLast, ConnectableObservable } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  publishLast()\n) as ConnectableObservable&#x3C;number>;\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/class/AsyncSubject\" class=\"code-anchor\">AsyncSubject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>(<a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000), {\n  connector: () => new <a href=\"api/index/class/AsyncSubject\" class=\"code-anchor\">AsyncSubject</a>&#x3C;number>(),\n  resetOnDisconnect: false\n});\n</code-example>\n<p>And if <a href=\"/api/operators/refCount\">refCount</a> is being applied to the result of <a href=\"/api/operators/publishLast\">publishLast</a>, you can use the <a href=\"/api/operators/share\">share</a> operator - with an <a href=\"api/index/class/AsyncSubject\">AsyncSubject</a> connector - to replace both.</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, publishLast, refCount } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  publishLast(),\n  refCount()\n);\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/share\" class=\"code-anchor\">share</a>, <a href=\"api/index/class/AsyncSubject\" class=\"code-anchor\">AsyncSubject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/share\" class=\"code-anchor\">share</a>({\n    connector: () => new <a href=\"api/index/class/AsyncSubject\" class=\"code-anchor\">AsyncSubject</a>(),\n    resetOnError: false,\n    resetOnComplete: false,\n    resetOnRefCountZero: false\n  })\n);\n</code-example>\n<h3 id=\"publishreplay\">publishReplay<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#publishreplay\"><i class=\"material-icons\">link</i></a></h3>\n<p>If you're using <a href=\"/api/operators/publishReplay\">publishReplay</a> to create a <a href=\"/api/index/class/ConnectableObservable\">ConnectableObservable</a>, you can use <a href=\"/api/index/function/connectable\">connectable</a> and a <a href=\"api/index/class/ReplaySubject\">ReplaySubject</a> instead.</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, publishReplay, ConnectableObservable } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  publishReplay(1)\n) as ConnectableObservable&#x3C;number>;\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a>(<a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000), {\n  connector: () => new <a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a>&#x3C;number>(1),\n  resetOnDisconnect: false\n});\n</code-example>\n<p>And if <a href=\"/api/operators/refCount\">refCount</a> is being applied to the result of <a href=\"/api/operators/publishReplay\">publishReplay</a>, you can use the <a href=\"/api/operators/share\">share</a> operator - with a <a href=\"api/index/class/ReplaySubject\">ReplaySubject</a> connector - to replace both.</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, publishReplay, refCount } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  publishReplay(1),\n  refCount()\n);\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/share\" class=\"code-anchor\">share</a>, <a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/share\" class=\"code-anchor\">share</a>({\n    connector: () => new <a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a>(1),\n    resetOnError: false,\n    resetOnComplete: false,\n    resetOnRefCountZero: false\n  })\n);\n</code-example>\n<p>If <a href=\"/api/operators/publishReplay\">publishReplay</a> is being called with a selector, you can use the <a href=\"/api/operators/connect\">connect</a> operator - with a <a href=\"api/index/class/ReplaySubject\">ReplaySubject</a> connector - instead.</p>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, publishReplay, <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a> } from 'rxjs';\n\n// deprecated\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  publishReplay(1, undefined, (source) => <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a>([source, source]))\n);\n</code-example>\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/connect\" class=\"code-anchor\">connect</a>, <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a>, <a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a> } from 'rxjs';\n\n// suggested refactor\nconst tick$ = <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(1_000).pipe(\n  <a href=\"api/index/function/connect\" class=\"code-anchor\">connect</a>((source) => <a href=\"api/index/function/combineLatest\" class=\"code-anchor\">combineLatest</a>([source, source]), {\n    connector: () => new <a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a>(1)\n  })\n);\n</code-example>\n<h3 id=\"refcount\">refCount<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/multicasting#refcount\"><i class=\"material-icons\">link</i></a></h3>\n<p>Instead of applying the <a href=\"/api/operators/refCount\">refCount</a> operator to the <a href=\"/api/index/class/ConnectableObservable\">ConnectableObservable</a> obtained from a <a href=\"/api/operators/multicast\">multicast</a>\nor <a href=\"/api/operators/publish\">publish</a> operator, use the <a href=\"/api/operators/share\">share</a> operator to replace both.</p>\n<p>The properties passed to <a href=\"/api/operators/share\">share</a> will depend upon the operators that are being replaced. The refactors for using <a href=\"/api/operators/refCount\">refCount</a> with <a href=\"/api/operators/multicast\">multicast</a>, <a href=\"/api/operators/publish\">publish</a>, <a href=\"/api/operators/publishBehavior\">publishBehavior</a>, <a href=\"/api/operators/publishLast\">publishLast</a> and <a href=\"/api/operators/publishReplay\">publishReplay</a> are detailed above.</p>\n\n</div>\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - /api/index/class/ConnectableObservable\n - /api/index/function/connect\n - /api/index/function/connectable\n - /api/operators/connect\n - /api/operators/multicast\n - /api/operators/publish\n - /api/operators/publishBehavior\n - /api/operators/publishLast\n - /api/operators/publishReplay\n - /api/operators/refCount\n - /api/operators/share\n - /api/operators/shareReplay\n - api/index/class/AsyncSubject\n - api/index/class/BehaviorSubject\n - api/index/class/ReplaySubject\n - api/index/class/Subject\n - api/index/function/combineLatest\n - api/index/function/connect\n - api/index/function/connectable\n - api/index/function/share\n - api/index/function/timer\n - deprecations/multicasting#apis-affected-by-this-change\n - deprecations/multicasting#connectableobservable\n - deprecations/multicasting#how-to-refactor\n - deprecations/multicasting#multicast\n - deprecations/multicasting#multicasting\n - deprecations/multicasting#publish\n - deprecations/multicasting#publishbehavior\n - deprecations/multicasting#publishlast\n - deprecations/multicasting#publishreplay\n - deprecations/multicasting#refcount\n-->"
}