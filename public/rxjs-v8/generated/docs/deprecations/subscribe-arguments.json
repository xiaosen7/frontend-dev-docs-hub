{
  "id": "deprecations/subscribe-arguments",
  "title": "Subscribe Arguments",
  "contents": "\n<div class=\"content\">\n<h1 id=\"subscribe-arguments\">Subscribe Arguments<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/subscribe-arguments#subscribe-arguments\"><i class=\"material-icons\">link</i></a></h1>\n<p>You might have seen that we deprecated some signatures of the <code>subscribe</code> method, which might have caused some confusion.\nThe <code>subscribe</code> method itself is not deprecated. This deprecation also affects the <a href=\"../../api/operators/tap\"><code>tap</code> operator</a>, as tap supports the same signature as the <code>subscribe</code> method.</p>\n<p>This is to get ready for a future where we may allow configuration of <code>subscribe</code> via the second argument, for things like <code>AbortSignal</code> or the like (imagine <code>source$.subscribe(fn, { signal })</code>, etc). This deprecation is also because 2-3 function arguments can contribute to harder-to-read code. For example someone could name functions poorly and confuse the next reader: <code>source$.subscribe(doSomething, doSomethingElse, lol)</code> With that signature, you have to know unapparent details about <code>subscribe</code>, where using a partial observer solves that neatly: <code>source$.subscribe({ next: doSomething, error: doSomethingElse, complete: lol })</code>.</p>\n<div class=\"alert is-important\">\n    <span>\n        This deprecation was introduced in RxJS 6.4.\n    </span>\n</div>\n<p>In short we deprecated all signatures where you specified an anonymous <code>error</code> or <code>complete</code> callback and passed an empty function to one of the callbacks before. </p>\n<h2 id=\"what-signature-is-affected\">What Signature is affected<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/subscribe-arguments#what-signature-is-affected\"><i class=\"material-icons\">link</i></a></h2>\n<p><strong>We have deprecated all signatures of <code>subscribe</code> that take more than 1 argument.</strong> </p>\n<p>We deprecated signatures for just passing the <code>complete</code> callback.</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a> } from 'rxjs';\n\n// deprecated\n<a href=\"api/index/function/of\" class=\"code-anchor\">of</a>([1,2,3]).subscribe(null, null, console.info); // difficult to read\n// suggested change\n<a href=\"api/index/function/of\" class=\"code-anchor\">of</a>([1,2,3]).subscribe({complete: console.info});\n</code-example>\n<p>Similarly, we also deprecated signatures for solely passing the <code>error</code> callback.</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a> } from 'rxjs';\n\n// deprecated \n<a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>('I am an error').subscribe(null, console.error);\n// suggested change\n<a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>('I am an error').subscribe({error: console.error});\n</code-example>\n<p>Do notice, in general it is recommended only to use the anonymous function if you only specify the <code>next</code> callback otherwise\nwe recommend to pass an <code><a href=\"api/index/interface/Observer\" class=\"code-anchor\">Observer</a></code></p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a> } from 'rxjs';\n\n// recommended \n<a href=\"api/index/function/of\" class=\"code-anchor\">of</a>([1,2,3]).subscribe((v) => console.info(v));\n// also recommended\n<a href=\"api/index/function/of\" class=\"code-anchor\">of</a>([1,2,3]).subscribe({\n    next: (v) => console.log(v),\n    error: (e) => console.error(e),\n    complete: () => console.info('complete') \n})\n</code-example>\n\n</div>\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - ../../api/operators/tap\n - api/index/function/of\n - api/index/function/throwError\n - api/index/interface/Observer\n - deprecations/subscribe-arguments#subscribe-arguments\n - deprecations/subscribe-arguments#what-signature-is-affected\n-->"
}