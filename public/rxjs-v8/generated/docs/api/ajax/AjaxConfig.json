{
  "id": "api/ajax/AjaxConfig",
  "title": "AjaxConfig",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/ReactiveX/rxjs/edit/master/src/internal/ajax/types.ts?message=docs(ajax)%3A%20describe%20your%20change...#L78-L235\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/ReactiveX/rxjs/tree/8.0.0-alpha.14/src/internal/ajax/types.ts#L78-L235\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/ajax\", \"name\": \"rxjs/ajax\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/ajax/AjaxConfig\", \"name\": \"AjaxConfig\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/ajax\">rxjs/ajax</a>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"ajaxconfig\">AjaxConfig<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/ajax/AjaxConfig#ajaxconfig\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label interface\">interface</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p>Configuration for the <a href=\"api/ajax/ajax\"><code>ajax</code></a> creation function.</p>\n<p></p>\n  \n  \n  <section class=\"interface-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface <a href=\"api/ajax/AjaxConfig\" class=\"code-anchor\">AjaxConfig</a> {\n  <a class=\"code-anchor\" href=\"api/ajax/AjaxConfig#url\">url: string</a>\n  <a class=\"code-anchor\" href=\"api/ajax/AjaxConfig#body\">body?: any</a>\n  <a class=\"code-anchor\" href=\"api/ajax/AjaxConfig#async\">async?: boolean</a>\n  <a class=\"code-anchor\" href=\"api/ajax/AjaxConfig#method\">method?: string</a>\n  <a class=\"code-anchor\" href=\"api/ajax/AjaxConfig#headers\">headers?: Readonly&#x3C;Record&#x3C;string, any>></a>\n  <a class=\"code-anchor\" href=\"api/ajax/AjaxConfig#timeout\">timeout?: number</a>\n  <a class=\"code-anchor\" href=\"api/ajax/AjaxConfig#user\">user?: string</a>\n  <a class=\"code-anchor\" href=\"api/ajax/AjaxConfig#password\">password?: string</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/ajax/AjaxConfig#crossDomain\">crossDomain?: boolean</a>\n  <a class=\"code-anchor\" href=\"api/ajax/AjaxConfig#withCredentials\">withCredentials?: boolean</a>\n  <a class=\"code-anchor\" href=\"api/ajax/AjaxConfig#xsrfCookieName\">xsrfCookieName?: string</a>\n  <a class=\"code-anchor\" href=\"api/ajax/AjaxConfig#xsrfHeaderName\">xsrfHeaderName?: string</a>\n  <a class=\"code-anchor\" href=\"api/ajax/AjaxConfig#responseType\">responseType?: XMLHttpRequestResponseType</a>\n  <a class=\"code-anchor\" href=\"api/ajax/AjaxConfig#createXHR\">createXHR?: () => XMLHttpRequest</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/ajax/AjaxConfig#progressSubscriber\">progressSubscriber?: PartialObserver&#x3C;ProgressEvent></a>\n  <a class=\"code-anchor\" href=\"api/ajax/AjaxConfig#includeDownloadProgress\">includeDownloadProgress?: boolean</a>\n  <a class=\"code-anchor\" href=\"api/ajax/AjaxConfig#includeUploadProgress\">includeUploadProgress?: boolean</a>\n  <a class=\"code-anchor\" href=\"api/ajax/AjaxConfig#queryParams\">queryParams?: string | URLSearchParams | Record&#x3C;string, string | number | boolean | string[] | number[] | boolean[]> | [...]</a>\n}\n</code-example>\n\n  \n  \n\n\n  \n  \n\n</section>\n  \n  \n  \n<section class=\"instance-properties\">\n  <h2 id=\"properties\">Properties<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/ajax/AjaxConfig#properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table properties-table\">\n    <thead>\n      <tr><th>Property</th><th>Type</th><th>Description</th></tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"url\"></a><code class=\"\">url</code></td>\n        <td><label class=\"property-type-label\"><code>string</code></label></td>\n        <td>\n          <p>The address of the resource to request via HTTP.</p>\n\n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"body\"></a><code class=\"\">body</code></td>\n        <td><label class=\"property-type-label\"><code>any</code></label></td>\n        <td>\n          <p>The body of the HTTP request to send.</p>\n\n          <p>This is serialized, by default, based off of the value of the <code>\"content-type\"</code> header.\nFor example, if the <code>\"content-type\"</code> is <code>\"application/json\"</code>, the body will be serialized\nas JSON. If the <code>\"content-type\"</code> is <code>\"application/x-www-form-urlencoded\"</code>, whatever object passed\nto the body will be serialized as URL, using key-value pairs based off of the keys and values of the object.\nIn all other cases, the body will be passed directly.</p>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"async\"></a><code class=\"\">async</code></td>\n        <td><label class=\"property-type-label\"><code>boolean</code></label></td>\n        <td>\n          <p>Whether or not to send the request asynchronously. Defaults to <code>true</code>.\nIf set to <code>false</code>, this will block the thread until the AJAX request responds.</p>\n\n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"method\"></a><code class=\"\">method</code></td>\n        <td><label class=\"property-type-label\"><code>string</code></label></td>\n        <td>\n          <p>The HTTP Method to use for the request. Defaults to \"GET\".</p>\n\n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"headers\"></a><code class=\"\">headers</code></td>\n        <td><label class=\"property-type-label\"><code>Readonly&#x3C;Record&#x3C;string, any>></code></label></td>\n        <td>\n          <p>The HTTP headers to apply.</p>\n\n          <p>Note that, by default, RxJS will add the following headers under certain conditions:</p>\n<ol>\n<li>If the <code>\"content-type\"</code> header is <strong>NOT</strong> set, and the <code>body</code> is <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FormData\"><code>FormData</code></a>,\na <code>\"content-type\"</code> of <code>\"application/x-www-form-urlencoded; charset=UTF-8\"</code> will be set automatically.</li>\n<li>If the <code>\"x-requested-with\"</code> header is <strong>NOT</strong> set, and the <code>crossDomain</code> configuration property is <strong>NOT</strong> explicitly set to <code>true</code>,\n(meaning it is not a CORS request), a <code>\"x-requested-with\"</code> header with a value of <code>\"XMLHttpRequest\"</code> will be set automatically.\nThis header is generally meaningless, and is set by libraries and frameworks using <code>XMLHttpRequest</code> to make HTTP requests.</li>\n</ol>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"timeout\"></a><code class=\"\"><a href=\"api/index/function/timeout\" class=\"code-anchor\">timeout</a></code></td>\n        <td><label class=\"property-type-label\"><code>number</code></label></td>\n        <td>\n          <p>The time to wait before causing the underlying XMLHttpRequest to timeout. This is only honored if the\n<code>async</code> configuration setting is unset or set to <code>true</code>. Defaults to <code>0</code>, which is idiomatic for \"never timeout\".</p>\n\n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"user\"></a><code class=\"\">user</code></td>\n        <td><label class=\"property-type-label\"><code>string</code></label></td>\n        <td>\n          <p>The user credentials user name to send with the HTTP request</p>\n\n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"password\"></a><code class=\"\">password</code></td>\n        <td><label class=\"property-type-label\"><code>string</code></label></td>\n        <td>\n          <p>The user credentials password to send with the HTTP request</p>\n\n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"crossDomain\"></a><code class=\"deprecated-api-item\">crossDomain</code></td>\n        <td><label class=\"property-type-label\"><code>boolean</code></label></td>\n        <td>\n          <p>Whether or not to send the HTTP request as a CORS request.\nDefaults to <code>false</code>.</p>\n\n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"withCredentials\"></a><code class=\"\">withCredentials</code></td>\n        <td><label class=\"property-type-label\"><code>boolean</code></label></td>\n        <td>\n          <p>To send user credentials in a CORS request, set to <code>true</code>. To exclude user credentials from\na CORS request, <em>OR</em> when cookies are to be ignored by the CORS response, set to <code>false</code>.</p>\n\n          <p>Defaults to <code>false</code>.</p>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"xsrfCookieName\"></a><code class=\"\">xsrfCookieName</code></td>\n        <td><label class=\"property-type-label\"><code>string</code></label></td>\n        <td>\n          <p>The name of your site's XSRF cookie.</p>\n\n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"xsrfHeaderName\"></a><code class=\"\">xsrfHeaderName</code></td>\n        <td><label class=\"property-type-label\"><code>string</code></label></td>\n        <td>\n          <p>The name of a custom header that you can use to send your XSRF cookie.</p>\n\n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"responseType\"></a><code class=\"\">responseType</code></td>\n        <td><label class=\"property-type-label\"><code>XMLHttpRequestResponseType</code></label></td>\n        <td>\n          <p>Can be set to change the response type.\nValid values are <code>\"arraybuffer\"</code>, <code>\"blob\"</code>, <code>\"document\"</code>, <code>\"json\"</code>, and <code>\"text\"</code>.\nNote that the type of <code>\"document\"</code> (such as an XML document) is ignored if the global context is\nnot <code>Window</code>.</p>\n\n          <p>Defaults to <code>\"json\"</code>.</p>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"createXHR\"></a><code class=\"\">createXHR</code></td>\n        <td><label class=\"property-type-label\"><code>() => XMLHttpRequest</code></label></td>\n        <td>\n          <p>An optional factory used to create the XMLHttpRequest object used to make the AJAX request.\nThis is useful in environments that lack <code>XMLHttpRequest</code>, or in situations where you\nwish to override the default <code>XMLHttpRequest</code> for some reason.</p>\n\n          <p>If not provided, the <code>XMLHttpRequest</code> in global scope will be used.</p>\n<p>NOTE: This AJAX implementation relies on the built-in serialization and setting\nof Content-Type headers that is provided by standards-compliant XMLHttpRequest implementations,\nbe sure any implementation you use meets that standard.</p>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"progressSubscriber\"></a><code class=\"deprecated-api-item\">progressSubscriber</code></td>\n        <td><label class=\"property-type-label\"><code><a href=\"api/index/type-alias/PartialObserver\" class=\"code-anchor\">PartialObserver</a>&#x3C;ProgressEvent></code></label></td>\n        <td>\n          <p>An observer for watching the upload progress of an HTTP request. Will\nemit progress events, and completes on the final upload load event, will error for\nany XHR error or timeout.</p>\n\n          <p>This will <strong>not</strong> error for errored status codes. Rather, it will always <em>complete</em> when\nthe HTTP response comes back.</p>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"includeDownloadProgress\"></a><code class=\"\">includeDownloadProgress</code></td>\n        <td><label class=\"property-type-label\"><code>boolean</code></label></td>\n        <td>\n          <p>If <code>true</code>, will emit all download progress and load complete events as <a href=\"api/ajax/AjaxResponse\"><code>AjaxResponse</code></a>\nfrom the observable. The final download event will also be emitted as a <a href=\"api/ajax/AjaxResponse\"><code>AjaxResponse</code></a>.</p>\n\n          <p>If both this and <a href=\"api/ajax/AjaxConfig#includeUploadProgress\"><code>includeUploadProgress</code></a> are <code>false</code>, then only the <a href=\"api/ajax/AjaxResponse\"><code>AjaxResponse</code></a> will\nbe emitted from the resulting observable.</p>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"includeUploadProgress\"></a><code class=\"\">includeUploadProgress</code></td>\n        <td><label class=\"property-type-label\"><code>boolean</code></label></td>\n        <td>\n          <p>If <code>true</code>, will emit all upload progress and load complete events as <a href=\"api/ajax/AjaxResponse\"><code>AjaxResponse</code></a>\nfrom the observable. The final download event will also be emitted as a <a href=\"api/ajax/AjaxResponse\"><code>AjaxResponse</code></a>.</p>\n\n          <p>If both this and <a href=\"api/ajax/AjaxConfig#includeDownloadProgress\"><code>includeDownloadProgress</code></a> are <code>false</code>, then only the <a href=\"api/ajax/AjaxResponse\"><code>AjaxResponse</code></a> will\nbe emitted from the resulting observable.</p>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"queryParams\"></a><code class=\"\">queryParams</code></td>\n        <td><label class=\"property-type-label\"><code>string | URLSearchParams | Record&#x3C;string, string | number | boolean | string[] | number[] | boolean[]> | [\n    string,\n    string | number | boolean | string[] | number[] | boolean[]\n][]</code></label></td>\n        <td>\n          <p>Query string parameters to add to the URL in the request.\n<em>This will require a polyfill for <code>URL</code> and <code>URLSearchParams</code> in Internet Explorer!</em></p>\n\n          <p>Accepts either a query string, a <code>URLSearchParams</code> object, a dictionary of key/value pairs, or an\narray of key/value entry tuples. (Essentially, it takes anything that <code>new URLSearchParams</code> would normally take).</p>\n<p>If, for some reason you have a query string in the <code>url</code> argument, this will append to the query string in the url,\nbut it will also overwrite the value of any keys that are an exact match. In other words, a url of <code>/test?a=1&#x26;b=2</code>,\nwith queryParams of <code>{ b: 5, c: 6 }</code> will result in a url of roughly <code>/test?a=1&#x26;b=5&#x26;c=6</code>.</p>\n\n          \n        </td>\n    </tr>\n    \n    </tbody>\n  </table>\n</section>\n  \n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - 6-to-7-change-summary\n - api/ajax\n - api/ajax/AjaxResponse\n - deprecations/breaking-changes\n-->\n<!-- links from this doc:\n - /api\n - api/ajax\n - api/ajax/AjaxConfig#ajaxconfig\n - api/ajax/AjaxConfig#async\n - api/ajax/AjaxConfig#body\n - api/ajax/AjaxConfig#createXHR\n - api/ajax/AjaxConfig#crossDomain\n - api/ajax/AjaxConfig#headers\n - api/ajax/AjaxConfig#includeDownloadProgress\n - api/ajax/AjaxConfig#includeUploadProgress\n - api/ajax/AjaxConfig#method\n - api/ajax/AjaxConfig#password\n - api/ajax/AjaxConfig#progressSubscriber\n - api/ajax/AjaxConfig#properties\n - api/ajax/AjaxConfig#queryParams\n - api/ajax/AjaxConfig#responseType\n - api/ajax/AjaxConfig#timeout\n - api/ajax/AjaxConfig#url\n - api/ajax/AjaxConfig#user\n - api/ajax/AjaxConfig#withCredentials\n - api/ajax/AjaxConfig#xsrfCookieName\n - api/ajax/AjaxConfig#xsrfHeaderName\n - api/ajax/AjaxResponse\n - api/ajax/ajax\n - api/index/function/timeout\n - api/index/type-alias/PartialObserver\n - https://developer.mozilla.org/en-US/docs/Web/API/FormData\n - https://github.com/ReactiveX/rxjs/edit/master/src/internal/ajax/types.ts?message=docs(ajax)%3A%20describe%20your%20change...#L78-L235\n - https://github.com/ReactiveX/rxjs/tree/8.0.0-alpha.14/src/internal/ajax/types.ts#L78-L235\n-->"
}