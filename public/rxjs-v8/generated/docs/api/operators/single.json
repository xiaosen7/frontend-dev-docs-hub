{
  "id": "api/operators/single",
  "title": "single",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/ReactiveX/rxjs/edit/master/src/internal/operators/single.ts?message=docs(operators)%3A%20describe%20your%20change...#L10-L120\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/ReactiveX/rxjs/tree/8.0.0-alpha.14/src/internal/operators/single.ts#L10-L120\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/single\", \"name\": \"single\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"single\">single<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/single#single\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n    <label class=\"api-status-label operator\">operator</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p>Returns an observable that asserts that only one value is\nemitted from the observable that matches the predicate. If no\npredicate is provided, then it will assert that the observable\nonly emits one value.</p>\n<p></p>\n  \n  \n  \n<code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/single\" class=\"code-anchor\">single</a>(predicate: BooleanConstructor): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/type-alias/TruthyTypesOf\" class=\"code-anchor\">TruthyTypesOf</a>&#x3C;T>></code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"predicate\"></a>\n        <code>predicate</code>\n      </td>\n      <td class=\"param-type\"><code>BooleanConstructor</code></td>\n      <td class=\"param-description\">\nn      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns\">Returns</h4>\n<p><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/type-alias/TruthyTypesOf\" class=\"code-anchor\">TruthyTypesOf</a>&#x3C;T>></code></p>\n\n\n\n\n\n\n\n    <hr class=\"hr-margin fullwidth\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/single\" class=\"code-anchor\">single</a>(predicate?: (value: T, index: number, source: Observable&#x3C;T>) => boolean): <a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction</a>&#x3C;T></code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters-1\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"predicate\"></a>\n        <code>predicate</code>\n      </td>\n      <td class=\"param-type\"><code>(value: T, index: number, source: Observable&#x3C;T>) => boolean</code></td>\n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns-1\">Returns</h4>\n<p><code><a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction&#x3C;T></a></code></p>\n\n\n\n\n\n\n\n    \n  \n\n  \n\n<section class=\"description\">\n  <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/single#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p>If the source Observable did not emit <code>next</code> before completion, it\nwill emit an <a href=\"api/index/class/EmptyError\"><code>EmptyError</code></a> to the Observer's <code>error</code> callback.</p>\n<p>In the event that two values are found that match the predicate,\nor when there are two values emitted and no predicate, it will\nemit a <a href=\"api/index/class/SequenceError\"><code>SequenceError</code></a> to the Observer's <code>error</code> callback.</p>\n<p>In the event that no values match the predicate, if one is provided,\nit will emit a <a href=\"api/index/class/NotFoundError\"><code>NotFoundError</code></a> to the Observer's <code>error</code> callback.</p>\n<h2 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/single#example\"><i class=\"material-icons\">link</i></a></h2>\n<p>Expect only <code>name</code> beginning with <code>'B'</code></p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/single\" class=\"code-anchor\">single</a> } from 'rxjs';\n\nconst source1 = <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(\n { name: 'Ben' },\n { name: 'Tracy' },\n { name: 'Laney' },\n { name: 'Lily' }\n);\n\nsource1\n  .pipe(<a href=\"api/index/function/single\" class=\"code-anchor\">single</a>(x => x.name.startsWith('B')))\n  .subscribe(x => console.log(x));\n// Emits 'Ben'\n\n\nconst source2 = <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(\n { name: 'Ben' },\n { name: 'Tracy' },\n { name: 'Bradley' },\n { name: 'Lincoln' }\n);\n\nsource2\n  .pipe(<a href=\"api/index/function/single\" class=\"code-anchor\">single</a>(x => x.name.startsWith('B')))\n  .subscribe({ error: err => console.error(err) });\n// Error emitted: <a href=\"api/index/class/SequenceError\" class=\"code-anchor\">SequenceError</a>('Too many values match')\n\n\nconst source3 = <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(\n { name: 'Laney' },\n { name: 'Tracy' },\n { name: 'Lily' },\n { name: 'Lincoln' }\n);\n\nsource3\n  .pipe(<a href=\"api/index/function/single\" class=\"code-anchor\">single</a>(x => x.name.startsWith('B')))\n  .subscribe({ error: err => console.error(err) });\n// Error emitted: <a href=\"api/index/class/NotFoundError\" class=\"code-anchor\">NotFoundError</a>('No values match')\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">See Also<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/single#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/operators/first\"><code>first</code></a>\n</li>\n    <li><a href=\"api/operators/find\"><code>find</code></a>\n</li>\n    <li><a href=\"api/operators/findIndex\"><code>findIndex</code></a>\n</li>\n    <li><a href=\"api/operators/elementAt\"><code>elementAt</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index/class/NotFoundError\n - api/index/class/SequenceError\n - api/operators\n - api/operators/elementAt\n-->\n<!-- links from this doc:\n - /api\n - api/index/class/EmptyError\n - api/index/class/NotFoundError\n - api/index/class/SequenceError\n - api/index/function/of\n - api/index/function/single\n - api/index/interface/MonoTypeOperatorFunction\n - api/index/interface/OperatorFunction\n - api/index/type-alias/TruthyTypesOf\n - api/operators\n - api/operators/elementAt\n - api/operators/find\n - api/operators/findIndex\n - api/operators/first\n - api/operators/single#description\n - api/operators/single#example\n - api/operators/single#see-also\n - api/operators/single#single\n - https://github.com/ReactiveX/rxjs/edit/master/src/internal/operators/single.ts?message=docs(operators)%3A%20describe%20your%20change...#L10-L120\n - https://github.com/ReactiveX/rxjs/tree/8.0.0-alpha.14/src/internal/operators/single.ts#L10-L120\n-->"
}