{
  "id": "api/operators/mergeScan",
  "title": "mergeScan",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/ReactiveX/rxjs/edit/master/src/internal/operators/mergeScan.ts?message=docs(operators)%3A%20describe%20your%20change...#L4-L95\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/ReactiveX/rxjs/tree/8.0.0-alpha.14/src/internal/operators/mergeScan.ts#L4-L95\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/mergeScan\", \"name\": \"mergeScan\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"mergescan\">mergeScan<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/mergeScan#mergescan\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n    <label class=\"api-status-label operator\">operator</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p>Applies an accumulator function over the source Observable where the\naccumulator function itself returns an Observable, then each intermediate\nObservable returned is merged into the output Observable.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a>&#x3C;T, R>(accumulator: (acc: R, value: T, index: number) => any, seed: R, concurrent: number = Infinity): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, R></code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"accumulator\"></a>\n        <code>accumulator</code>\n      </td>\n      <td class=\"param-type\"><code>(acc: R, value: T, index: number) => any</code></td>\n      <td class=\"param-description\">\n              <p>The accumulator function called on each source value.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"seed\"></a>\n        <code>seed</code>\n      </td>\n      <td class=\"param-type\"><code>R</code></td>\n      <td class=\"param-description\">\n              <p>The initial accumulation value.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"concurrent\"></a>\n        <code>concurrent</code>\n      </td>\n      <td class=\"param-type\"><code>number</code></td>\n      <td class=\"param-description\">\n      <p>        Optional. Default is <code>Infinity</code>.</p>\n<p>        Maximum number of input Observables being subscribed to\nconcurrently.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns\">Returns</h4>\n<p><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction&#x3C;T, R></a></code>: A function that returns an Observable of the accumulated values.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/mergeScan#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p><span class=\"informal\">It's like <a href=\"api/operators/scan\"><code>scan</code></a>, but the Observables returned\nby the accumulator are merged into the outer Observable.</span></p>\n<p>The first parameter of the <code><a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a></code> is an <code>accumulator</code> function which is\nbeing called every time the source Observable emits a value. <code><a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a></code> will\nsubscribe to the value returned by the <code>accumulator</code> function and will emit\nvalues to the subscriber emitted by inner Observable.</p>\n<p>The <code>accumulator</code> function is being called with three parameters passed to it:\n<code>acc</code>, <code>value</code> and <code>index</code>. The <code>acc</code> parameter is used as the state parameter\nwhose value is initially set to the <code>seed</code> parameter (the second parameter\npassed to the <code><a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a></code> operator).</p>\n<p><code><a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a></code> internally keeps the value of the <code>acc</code> parameter: as long as the\nsource Observable emits without inner Observable emitting, the <code>acc</code> will be\nset to <code>seed</code>. The next time the inner Observable emits a value, <code><a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a></code>\nwill internally remember it and it will be passed to the <code>accumulator</code>\nfunction as <code>acc</code> parameter the next time source emits.</p>\n<p>The <code>value</code> parameter of the <code>accumulator</code> function is the value emitted by the\nsource Observable, while the <code>index</code> is a number which represent the order of the\ncurrent emission by the source Observable. It starts with 0.</p>\n<p>The last parameter to the <code><a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a></code> is the <code>concurrent</code> value which defaults\nto Infinity. It represents the maximum number of inner Observable subscriptions\nat a time.</p>\n<h2 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/mergeScan#example\"><i class=\"material-icons\">link</i></a></h2>\n<p>Count the number of click events</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>, <a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a>, <a href=\"api/index/function/of\" class=\"code-anchor\">of</a> } from 'rxjs';\n\nconst click$ = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst one$ = click$.pipe(<a href=\"api/index/function/map\" class=\"code-anchor\">map</a>(() => 1));\nconst seed = 0;\nconst <a href=\"api/index/function/count\" class=\"code-anchor\">count</a>$ = one$.pipe(\n  <a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a>((acc, one) => <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(acc + one), seed)\n);\n\n<a href=\"api/index/function/count\" class=\"code-anchor\">count</a>$.subscribe(x => console.log(x));\n\n// Results:\n// 1\n// 2\n// 3\n// 4\n// ...and so on for each click\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">See Also<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/mergeScan#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/operators/scan\"><code>scan</code></a>\n</li>\n    <li><a href=\"api/operators/switchScan\"><code>switchScan</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/expand\n - api/operators/mergeAll\n - api/operators/mergeMap\n - api/operators/mergeMapTo\n - api/operators/reduce\n - api/operators/scan\n - api/operators/switchScan\n-->\n<!-- links from this doc:\n - /api\n - api/index/function/count\n - api/index/function/fromEvent\n - api/index/function/map\n - api/index/function/mergeScan\n - api/index/function/of\n - api/index/interface/OperatorFunction\n - api/operators\n - api/operators/mergeScan#description\n - api/operators/mergeScan#example\n - api/operators/mergeScan#mergescan\n - api/operators/mergeScan#see-also\n - api/operators/scan\n - api/operators/switchScan\n - https://github.com/ReactiveX/rxjs/edit/master/src/internal/operators/mergeScan.ts?message=docs(operators)%3A%20describe%20your%20change...#L4-L95\n - https://github.com/ReactiveX/rxjs/tree/8.0.0-alpha.14/src/internal/operators/mergeScan.ts#L4-L95\n-->"
}