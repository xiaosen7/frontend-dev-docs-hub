{
  "id": "api/operators/skipUntil",
  "title": "skipUntil",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/ReactiveX/rxjs/edit/master/src/internal/operators/skipUntil.ts?message=docs(operators)%3A%20describe%20your%20change...#L4-L68\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/ReactiveX/rxjs/tree/8.0.0-alpha.14/src/internal/operators/skipUntil.ts#L4-L68\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/skipUntil\", \"name\": \"skipUntil\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"skipuntil\">skipUntil<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/skipUntil#skipuntil\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n    <label class=\"api-status-label operator\">operator</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p>Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/skipUntil\" class=\"code-anchor\">skipUntil</a>&#x3C;T>(notifier: any): <a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction</a>&#x3C;T></code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"notifier\"></a>\n        <code>notifier</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p>        An <code><a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a></code> that has to emit an item before the source Observable elements begin to\nbe mirrored by the resulting Observable.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns\">Returns</h4>\n<p><code><a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction&#x3C;T></a></code>: A function that returns an Observable that skips items from the\nsource Observable until the <code>notifier</code> Observable emits an item, then emits the\nremaining items.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/skipUntil#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p>The <code><a href=\"api/index/function/skipUntil\" class=\"code-anchor\">skipUntil</a></code> operator causes the observable stream to skip the emission of values until the passed in observable\nemits the first value. This can be particularly useful in combination with user interactions, responses of HTTP\nrequests or waiting for specific times to pass by.</p>\n<p><img src=\"/assets/images/marble-diagrams/skipUntil.png\" width=\"100%\" alt=\"skipUntil marble diagram\"></p>\n<p>Internally, the <code><a href=\"api/index/function/skipUntil\" class=\"code-anchor\">skipUntil</a></code> operator subscribes to the passed in <code>notifier</code> <code><a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a></code> (which gets converted\nto an Observable) in order to recognize the emission of its first value. When <code>notifier</code> emits next, the operator\nunsubscribes from it and starts emitting the values of the <em>source</em> observable until it completes or errors. It\nwill never let the <em>source</em> observable emit any values if the <code>notifier</code> completes or throws an error without\nemitting a value before.</p>\n<h2 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/skipUntil#example\"><i class=\"material-icons\">link</i></a></h2>\n<p>In the following example, all emitted values of the interval observable are skipped until the user clicks anywhere\nwithin the page</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>, <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/skipUntil\" class=\"code-anchor\">skipUntil</a> } from 'rxjs';\n\nconst intervalObservable = <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000);\nconst click = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\n\nconst emitAfterClick = intervalObservable.pipe(\n  <a href=\"api/index/function/skipUntil\" class=\"code-anchor\">skipUntil</a>(click)\n);\n// clicked at 4.6s. output: 5...6...7...8........ or\n// clicked at 7.3s. output: 8...9...10..11.......\nemitAfterClick.subscribe(value => console.log(value));\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">See Also<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/skipUntil#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/operators/last\"><code>last</code></a>\n</li>\n    <li><a href=\"api/operators/skip\"><code>skip</code></a>\n</li>\n    <li><a href=\"api/operators/skipWhile\"><code>skipWhile</code></a>\n</li>\n    <li><a href=\"api/operators/skipLast\"><code>skipLast</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/last\n - api/operators/skip\n - api/operators/skipLast\n - api/operators/skipWhile\n-->\n<!-- links from this doc:\n - /api\n - api/index/function/fromEvent\n - api/index/function/interval\n - api/index/function/skipUntil\n - api/index/interface/MonoTypeOperatorFunction\n - api/index/type-alias/ObservableInput\n - api/operators\n - api/operators/last\n - api/operators/skip\n - api/operators/skipLast\n - api/operators/skipUntil#description\n - api/operators/skipUntil#example\n - api/operators/skipUntil#see-also\n - api/operators/skipUntil#skipuntil\n - api/operators/skipWhile\n - https://github.com/ReactiveX/rxjs/edit/master/src/internal/operators/skipUntil.ts?message=docs(operators)%3A%20describe%20your%20change...#L4-L68\n - https://github.com/ReactiveX/rxjs/tree/8.0.0-alpha.14/src/internal/operators/skipUntil.ts#L4-L68\n-->"
}