{
  "id": "api/operators/count",
  "title": "count",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/ReactiveX/rxjs/edit/master/src/internal/operators/count.ts?message=docs(operators)%3A%20describe%20your%20change...#L3-L61\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/ReactiveX/rxjs/tree/8.0.0-alpha.14/src/internal/operators/count.ts#L3-L61\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/count\", \"name\": \"count\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"count\">count<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/count#count\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n    <label class=\"api-status-label operator\">operator</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p>Counts the number of emissions on the source and emits that number when the\nsource completes.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/count\" class=\"code-anchor\">count</a>&#x3C;T>(predicate?: (value: T, index: number) => boolean): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, number></code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"predicate\"></a>\n        <code>predicate</code>\n      </td>\n      <td class=\"param-type\"><code>(value: T, index: number) => boolean</code></td>\n      <td class=\"param-description\">\n      <p>        Optional. Default is <code>undefined</code>.</p>\n<p>        A function that is used to analyze the value and the index and\ndetermine whether or not to increment the count. Return <code>true</code> to increment the count,\nand return <code>false</code> to keep the count the same.\nIf the predicate is not provided, every value will be counted.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns\">Returns</h4>\n<p><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, number></code>: A function that returns an Observable that emits one number that\nrepresents the count of emissions.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/count#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p><span class=\"informal\">Tells how many values were emitted, when the source\ncompletes.</span></p>\n<p><img src=\"/assets/images/marble-diagrams/count.png\" width=\"100%\" alt=\"count marble diagram\"></p>\n<p><code><a href=\"api/index/function/count\" class=\"code-anchor\">count</a></code> transforms an Observable that emits values into an Observable that\nemits a single value that represents the number of values emitted by the\nsource Observable. If the source Observable terminates with an error, <code><a href=\"api/index/function/count\" class=\"code-anchor\">count</a></code>\nwill pass this error notification along without emitting a value first. If\nthe source Observable does not terminate at all, <code><a href=\"api/index/function/count\" class=\"code-anchor\">count</a></code> will neither emit\na value nor terminate. This operator takes an optional <code>predicate</code> function\nas argument, in which case the output emission will represent the number of\nsource values that matched <code>true</code> with the <code>predicate</code>.</p>\n<h2 id=\"examples\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/count#examples\"><i class=\"material-icons\">link</i></a></h2>\n<p>Counts how many seconds have passed before the first click happened</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>, <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/takeUntil\" class=\"code-anchor\">takeUntil</a>, <a href=\"api/index/function/count\" class=\"code-anchor\">count</a> } from 'rxjs';\n\nconst seconds = <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000);\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst secondsBeforeClick = seconds.pipe(<a href=\"api/index/function/takeUntil\" class=\"code-anchor\">takeUntil</a>(clicks));\nconst result = secondsBeforeClick.pipe(<a href=\"api/index/function/count\" class=\"code-anchor\">count</a>());\nresult.subscribe(x => console.log(x));\n</code-example>\n<p>Counts how many odd numbers are there between 1 and 7</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/range\" class=\"code-anchor\">range</a>, <a href=\"api/index/function/count\" class=\"code-anchor\">count</a> } from 'rxjs';\n\nconst numbers = <a href=\"api/index/function/range\" class=\"code-anchor\">range</a>(1, 7);\nconst result = numbers.pipe(<a href=\"api/index/function/count\" class=\"code-anchor\">count</a>(i => i % 2 === 1));\nresult.subscribe(x => console.log(x));\n// Results in:\n// 4\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">See Also<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/count#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/operators/max\"><code>max</code></a>\n</li>\n    <li><a href=\"api/operators/min\"><code>min</code></a>\n</li>\n    <li><a href=\"api/operators/reduce\"><code>reduce</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/isEmpty\n - api/operators/reduce\n-->\n<!-- links from this doc:\n - /api\n - api/index/function/count\n - api/index/function/fromEvent\n - api/index/function/interval\n - api/index/function/range\n - api/index/function/takeUntil\n - api/index/interface/OperatorFunction\n - api/operators\n - api/operators/count#count\n - api/operators/count#description\n - api/operators/count#examples\n - api/operators/count#see-also\n - api/operators/max\n - api/operators/min\n - api/operators/reduce\n - https://github.com/ReactiveX/rxjs/edit/master/src/internal/operators/count.ts?message=docs(operators)%3A%20describe%20your%20change...#L3-L61\n - https://github.com/ReactiveX/rxjs/tree/8.0.0-alpha.14/src/internal/operators/count.ts#L3-L61\n-->"
}