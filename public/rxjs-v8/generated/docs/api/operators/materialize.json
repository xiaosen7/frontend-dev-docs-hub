{
  "id": "api/operators/materialize",
  "title": "materialize",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/ReactiveX/rxjs/edit/master/src/internal/operators/materialize.ts?message=docs(operators)%3A%20describe%20your%20change...#L3-L72\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/ReactiveX/rxjs/tree/8.0.0-alpha.14/src/internal/operators/materialize.ts#L3-L72\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/materialize\", \"name\": \"materialize\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"materialize\">materialize<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/materialize#materialize\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n    <label class=\"api-status-label operator\">operator</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p>Represents all of the notifications from the source Observable as <code>next</code>\nemissions marked with their original types within <a href=\"api/index/type-alias/ObservableNotification\"><code>ObservableNotification</code></a>\nobjects.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/materialize\" class=\"code-anchor\">materialize</a>&#x3C;T>(): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/type-alias/ObservableNotification\" class=\"code-anchor\">ObservableNotification</a>&#x3C;T>></code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters\">Parameters</h4>\n<p>There are no parameters.</p>\n\n\n<h4 class=\"no-anchor\" id=\"returns\">Returns</h4>\n<p><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/type-alias/ObservableNotification\" class=\"code-anchor\">ObservableNotification</a>&#x3C;T>></code>: A function that returns an Observable that emits\n<a href=\"api/index/type-alias/ObservableNotification\"><code>ObservableNotification</code></a> objects that wrap the original emissions from the\nsource Observable with metadata.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/materialize#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p><span class=\"informal\">Wraps <code>next</code>, <code>error</code> and <code>complete</code> emissions in\n<a href=\"api/index/type-alias/ObservableNotification\"><code>ObservableNotification</code></a> objects, emitted as <code>next</code> on the output Observable.\n</span></p>\n<p><img src=\"/assets/images/marble-diagrams/materialize.png\" width=\"100%\" alt=\"materialize marble diagram\"></p>\n<p><code><a href=\"api/index/function/materialize\" class=\"code-anchor\">materialize</a></code> returns an Observable that emits a <code>next</code> notification for each\n<code>next</code>, <code>error</code>, or <code>complete</code> emission of the source Observable. When the\nsource Observable emits <code>complete</code>, the output Observable will emit <code>next</code> as\na Notification of type \"complete\", and then it will emit <code>complete</code> as well.\nWhen the source Observable emits <code>error</code>, the output will emit <code>next</code> as a\nNotification of type \"error\", and then <code>complete</code>.</p>\n<p>This operator is useful for producing metadata of the source Observable, to\nbe consumed as <code>next</code> emissions. Use it in conjunction with\n<a href=\"api/operators/dematerialize\"><code>dematerialize</code></a>.</p>\n<h2 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/materialize#example\"><i class=\"material-icons\">link</i></a></h2>\n<p>Convert a faulty Observable to an Observable of Notifications</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/materialize\" class=\"code-anchor\">materialize</a>, <a href=\"api/index/function/map\" class=\"code-anchor\">map</a> } from 'rxjs';\n\nconst letters = <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>('a', 'b', 13, 'd');\nconst upperCase = letters.pipe(<a href=\"api/index/function/map\" class=\"code-anchor\">map</a>((x: any) => x.toUpperCase()));\nconst materialized = upperCase.pipe(<a href=\"api/index/function/materialize\" class=\"code-anchor\">materialize</a>());\n\nmaterialized.subscribe(x => console.log(x));\n\n// Results in the following:\n// - Notification { kind: 'N', value: 'A', error: undefined, hasValue: true }\n// - Notification { kind: 'N', value: 'B', error: undefined, hasValue: true }\n// - Notification { kind: 'E', value: undefined, error: TypeError { message: x.toUpperCase is not a function }, hasValue: false }\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">See Also<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/materialize#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/index/type-alias/ObservableNotification\"><code>ObservableNotification</code></a>\n</li>\n    <li><a href=\"api/operators/dematerialize\"><code>dematerialize</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/dematerialize\n-->\n<!-- links from this doc:\n - /api\n - api/index/function/map\n - api/index/function/materialize\n - api/index/function/of\n - api/index/interface/OperatorFunction\n - api/index/type-alias/ObservableNotification\n - api/operators\n - api/operators/dematerialize\n - api/operators/materialize#description\n - api/operators/materialize#example\n - api/operators/materialize#materialize\n - api/operators/materialize#see-also\n - https://github.com/ReactiveX/rxjs/edit/master/src/internal/operators/materialize.ts?message=docs(operators)%3A%20describe%20your%20change...#L3-L72\n - https://github.com/ReactiveX/rxjs/tree/8.0.0-alpha.14/src/internal/operators/materialize.ts#L3-L72\n-->"
}