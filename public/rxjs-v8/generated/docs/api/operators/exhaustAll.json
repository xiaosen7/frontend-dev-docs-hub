{
  "id": "api/operators/exhaustAll",
  "title": "exhaustAll",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/ReactiveX/rxjs/edit/master/src/internal/operators/exhaustAll.ts?message=docs(operators)%3A%20describe%20your%20change...#L4-L51\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/ReactiveX/rxjs/tree/8.0.0-alpha.14/src/internal/operators/exhaustAll.ts#L4-L51\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/exhaustAll\", \"name\": \"exhaustAll\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"exhaustall\">exhaustAll<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/exhaustAll#exhaustall\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n    <label class=\"api-status-label operator\">operator</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p>Converts a higher-order Observable into a first-order Observable by dropping\ninner Observables while the previous inner Observable has not yet completed.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/exhaustAll\" class=\"code-anchor\">exhaustAll</a>&#x3C;O extends <a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a>&#x3C;any>>(): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;O, <a href=\"api/index/type-alias/ObservedValueOf\" class=\"code-anchor\">ObservedValueOf</a>&#x3C;O>></code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters\">Parameters</h4>\n<p>There are no parameters.</p>\n\n\n<h4 class=\"no-anchor\" id=\"returns\">Returns</h4>\n<p><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;O, <a href=\"api/index/type-alias/ObservedValueOf\" class=\"code-anchor\">ObservedValueOf</a>&#x3C;O>></code>: A function that returns an Observable that takes a source of\nObservables and propagates the first Observable exclusively until it\ncompletes before subscribing to the next.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/exhaustAll#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p><span class=\"informal\">Flattens an Observable-of-Observables by dropping the\nnext inner Observables while the current inner is still executing.</span></p>\n<p><img src=\"/assets/images/marble-diagrams/exhaustAll.svg\" width=\"100%\" alt=\"exhaustAll marble diagram\"></p>\n<p><code><a href=\"api/index/function/exhaustAll\" class=\"code-anchor\">exhaustAll</a></code> subscribes to an Observable that emits Observables, also known as a\nhigher-order Observable. Each time it observes one of these emitted inner\nObservables, the output Observable begins emitting the items emitted by that\ninner Observable. So far, it behaves like <a href=\"api/operators/mergeAll\"><code>mergeAll</code></a>. However,\n<code><a href=\"api/index/function/exhaustAll\" class=\"code-anchor\">exhaustAll</a></code> ignores every new inner Observable if the previous Observable has\nnot yet completed. Once that one completes, it will accept and flatten the\nnext inner Observable and repeat this process.</p>\n<h2 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/exhaustAll#example\"><i class=\"material-icons\">link</i></a></h2>\n<p>Run a finite timer for each click, only if there is no currently active timer</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>, <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>, <a href=\"api/index/function/take\" class=\"code-anchor\">take</a>, <a href=\"api/index/function/exhaustAll\" class=\"code-anchor\">exhaustAll</a> } from 'rxjs';\n\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst higherOrder = clicks.pipe(\n  <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>(() => <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000).pipe(<a href=\"api/index/function/take\" class=\"code-anchor\">take</a>(5)))\n);\nconst result = higherOrder.pipe(<a href=\"api/index/function/exhaustAll\" class=\"code-anchor\">exhaustAll</a>());\nresult.subscribe(x => console.log(x));\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">See Also<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/exhaustAll#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/operators/combineLatestAll\"><code>combineLatestAll</code></a>\n</li>\n    <li><a href=\"api/operators/concatAll\"><code>concatAll</code></a>\n</li>\n    <li><a href=\"api/operators/switchAll\"><code>switchAll</code></a>\n</li>\n    <li><a href=\"api/operators/switchMap\"><code>switchMap</code></a>\n</li>\n    <li><a href=\"api/operators/mergeAll\"><code>mergeAll</code></a>\n</li>\n    <li><a href=\"api/operators/exhaustMap\"><code>exhaustMap</code></a>\n</li>\n    <li><a href=\"api/operators/zipAll\"><code>zipAll</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/concatAll\n - api/operators/exhaustMap\n - api/operators/mergeAll\n - api/operators/switchAll\n-->\n<!-- links from this doc:\n - /api\n - api/index/function/exhaustAll\n - api/index/function/fromEvent\n - api/index/function/interval\n - api/index/function/map\n - api/index/function/take\n - api/index/interface/OperatorFunction\n - api/index/type-alias/ObservableInput\n - api/index/type-alias/ObservedValueOf\n - api/operators\n - api/operators/combineLatestAll\n - api/operators/concatAll\n - api/operators/exhaustAll#description\n - api/operators/exhaustAll#example\n - api/operators/exhaustAll#exhaustall\n - api/operators/exhaustAll#see-also\n - api/operators/exhaustMap\n - api/operators/mergeAll\n - api/operators/switchAll\n - api/operators/switchMap\n - api/operators/zipAll\n - https://github.com/ReactiveX/rxjs/edit/master/src/internal/operators/exhaustAll.ts?message=docs(operators)%3A%20describe%20your%20change...#L4-L51\n - https://github.com/ReactiveX/rxjs/tree/8.0.0-alpha.14/src/internal/operators/exhaustAll.ts#L4-L51\n-->"
}