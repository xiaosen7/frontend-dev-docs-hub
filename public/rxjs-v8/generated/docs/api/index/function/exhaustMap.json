{
  "id": "api/index/function/exhaustMap",
  "title": "exhaustMap",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/ReactiveX/rxjs/edit/master/src/internal/operators/exhaustMap.ts?message=docs(index)%3A%20describe%20your%20change...#L4-L78\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/ReactiveX/rxjs/tree/8.0.0-alpha.14/src/internal/operators/exhaustMap.ts#L4-L78\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/exhaustMap\", \"name\": \"exhaustMap\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"exhaustmap\">exhaustMap<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/exhaustMap#exhaustmap\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n    <label class=\"api-status-label operator\">operator</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p>Projects each source value to an Observable which is merged in the output\nObservable only if the previous projected Observable has completed.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/exhaustMap\" class=\"code-anchor\">exhaustMap</a>&#x3C;T, O extends <a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a>&#x3C;any>>(project: (value: T, index: number) => O): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/type-alias/ObservedValueOf\" class=\"code-anchor\">ObservedValueOf</a>&#x3C;O>></code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"project\"></a>\n        <code>project</code>\n      </td>\n      <td class=\"param-type\"><code>(value: T, index: number) => O</code></td>\n      <td class=\"param-description\">\n      <p>        A function that, when applied to an item emitted by the source\nObservable, returns an Observable.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns\">Returns</h4>\n<p><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/type-alias/ObservedValueOf\" class=\"code-anchor\">ObservedValueOf</a>&#x3C;O>></code>: A function that returns an Observable containing projected\nObservables of each item of the source, ignoring projected Observables that\nstart before their preceding Observable has completed.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/exhaustMap#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p><span class=\"informal\">Maps each value to an Observable, then flattens all of\nthese inner Observables using <a href=\"api/index/function/exhaustAll\"><code>exhaustAll</code></a>.</span></p>\n<p><img src=\"/assets/images/marble-diagrams/exhaustMap.png\" width=\"100%\" alt=\"exhaustMap marble diagram\"></p>\n<p>Returns an Observable that emits items based on applying a function that you\nsupply to each item emitted by the source Observable, where that function\nreturns an (so-called \"inner\") Observable. When it projects a source value to\nan Observable, the output Observable begins emitting the items emitted by\nthat projected Observable. However, <code><a href=\"api/index/function/exhaustMap\" class=\"code-anchor\">exhaustMap</a></code> ignores every new projected\nObservable if the previous projected Observable has not yet completed. Once\nthat one completes, it will accept and flatten the next projected Observable\nand repeat this process.</p>\n<h2 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/exhaustMap#example\"><i class=\"material-icons\">link</i></a></h2>\n<p>Run a finite timer for each click, only if there is no currently active timer</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/exhaustMap\" class=\"code-anchor\">exhaustMap</a>, <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>, <a href=\"api/index/function/take\" class=\"code-anchor\">take</a> } from 'rxjs';\n\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst result = clicks.pipe(\n  <a href=\"api/index/function/exhaustMap\" class=\"code-anchor\">exhaustMap</a>(() => <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000).pipe(<a href=\"api/index/function/take\" class=\"code-anchor\">take</a>(5)))\n);\nresult.subscribe(x => console.log(x));\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">See Also<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/exhaustMap#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/index/function/concatMap\"><code>concatMap</code></a>\n</li>\n    <li><a href=\"api/index/function/exhaustAll\"><code>exhaustAll</code></a>\n</li>\n    <li><a href=\"api/index/function/mergeMap\"><code>mergeMap</code></a>\n</li>\n    <li><a href=\"api/index/function/switchMap\"><code>switchMap</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index\n - api/index/function/concatMap\n - api/index/function/exhaustAll\n - api/index/function/mergeMap\n - api/index/function/switchMap\n - api/operators/exhaustMap\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/function/concatMap\n - api/index/function/exhaustAll\n - api/index/function/exhaustMap#description\n - api/index/function/exhaustMap#example\n - api/index/function/exhaustMap#exhaustmap\n - api/index/function/exhaustMap#see-also\n - api/index/function/fromEvent\n - api/index/function/interval\n - api/index/function/mergeMap\n - api/index/function/switchMap\n - api/index/function/take\n - api/index/interface/OperatorFunction\n - api/index/type-alias/ObservableInput\n - api/index/type-alias/ObservedValueOf\n - https://github.com/ReactiveX/rxjs/edit/master/src/internal/operators/exhaustMap.ts?message=docs(index)%3A%20describe%20your%20change...#L4-L78\n - https://github.com/ReactiveX/rxjs/tree/8.0.0-alpha.14/src/internal/operators/exhaustMap.ts#L4-L78\n-->"
}