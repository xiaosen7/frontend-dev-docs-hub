{
  "id": "api/index/function/generate",
  "title": "generate",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/ReactiveX/rxjs/edit/master/src/internal/observable/generate.ts?message=docs(index)%3A%20describe%20your%20change...#L335-L387\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/ReactiveX/rxjs/tree/8.0.0-alpha.14/src/internal/observable/generate.ts#L335-L387\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/generate\", \"name\": \"generate\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"generate\">generate<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/generate#generate\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>&#x3C;T, S>(initialStateOrOptions: S | GenerateOptions&#x3C;T, S>, condition?: ConditionFunc&#x3C;S>, iterate?: IterateFunc&#x3C;S>, resultSelectorOrScheduler?: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a> | ResultFunc&#x3C;S, T>, scheduler?: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a>): Observable&#x3C;T></code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"initialStateOrOptions\"></a>\n        <code>initialStateOrOptions</code>\n      </td>\n      <td class=\"param-type\"><code>S | GenerateOptions&#x3C;T, S></code></td>\n      <td class=\"param-description\">\nn      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"condition\"></a>\n        <code>condition</code>\n      </td>\n      <td class=\"param-type\"><code>ConditionFunc&#x3C;S></code></td>\n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"iterate\"></a>\n        <code>iterate</code>\n      </td>\n      <td class=\"param-type\"><code>IterateFunc&#x3C;S></code></td>\n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"resultSelectorOrScheduler\"></a>\n        <code>resultSelectorOrScheduler</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a> | ResultFunc&#x3C;S, T></code></td>\n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"scheduler\"></a>\n        <code>scheduler</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a></code></td>\n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns\">Returns</h4>\n<p><code>Observable&#x3C;T></code></p>\n\n\n\n\n\n\n\n\n\n  \n\n\n<section class=\"overloads\">\n  <h2 id=\"overloads\">Overloads<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/generate#overloads\"><i class=\"material-icons\">link</i></a></h2>\n  <table>\n  \n  <tbody><tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\"> <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>(initialState: S, condition: ConditionFunc&#x3C;S>, iterate: IterateFunc&#x3C;S>, resultSelector: ResultFunc&#x3C;S, T>, scheduler?: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a>): Observable&#x3C;T></code-example>\n\n\n<div class=\"short-description\">\n  <p>Generates an observable sequence by running a state-driven loop\nproducing the sequence's elements, using the specified scheduler\nto send out observer messages.</p>\n\n</div>\n\n<h4 class=\"no-anchor\" id=\"parameters-1\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"initialState\"></a>\n        <code>initialState</code>\n      </td>\n      <td class=\"param-type\"><code>S</code></td>\n      <td class=\"param-description\">\n              <p>Initial state.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"condition\"></a>\n        <code>condition</code>\n      </td>\n      <td class=\"param-type\"><code>ConditionFunc&#x3C;S></code></td>\n      <td class=\"param-description\">\n              <p>Condition to terminate generation (upon returning false).</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"iterate\"></a>\n        <code>iterate</code>\n      </td>\n      <td class=\"param-type\"><code>IterateFunc&#x3C;S></code></td>\n      <td class=\"param-description\">\n              <p>Iteration step function.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"resultSelector\"></a>\n        <code>resultSelector</code>\n      </td>\n      <td class=\"param-type\"><code>ResultFunc&#x3C;S, T></code></td>\n      <td class=\"param-description\">\n              <p>Selector function for results produced in the sequence.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"scheduler\"></a>\n        <code>scheduler</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a></code></td>\n      <td class=\"param-description\">\n      <p>        Optional. Default is <code>undefined</code>.</p>\n<p>        A <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a> on which to run the generator loop.\nIf not provided, defaults to emit immediately.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns-1\">Returns</h4>\n<p><code>Observable&#x3C;T></code>: The generated sequence.</p>\n\n\n\n\n\n\n<div class=\"description\">\n  <p><img src=\"/assets/images/marble-diagrams/generate.png\" width=\"100%\" alt=\"generate marble diagram\"></p>\n<h2 id=\"examples\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/generate#examples\"><i class=\"material-icons\">link</i></a></h2>\n<p>Produces sequence of numbers</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a> } from 'rxjs';\n\nconst result = <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>(0, x => x &#x3C; 3, x => x + 1, x => x);\n\nresult.subscribe(x => console.log(x));\n\n// Logs:\n// 0\n// 1\n// 2\n</code-example>\n<p>Use <code><a href=\"api/index/const/asapScheduler\" class=\"code-anchor\">asapScheduler</a></code></p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>, <a href=\"api/index/const/asapScheduler\" class=\"code-anchor\">asapScheduler</a> } from 'rxjs';\n\nconst result = <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>(1, x => x &#x3C; 5, x => x * 2, x => x + 1, <a href=\"api/index/const/asapScheduler\" class=\"code-anchor\">asapScheduler</a>);\n\nresult.subscribe(x => console.log(x));\n\n// Logs:\n// 2\n// 3\n// 5\n</code-example>\n\n</div>\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\"> <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>(initialState: S, condition: ConditionFunc&#x3C;S>, iterate: IterateFunc&#x3C;S>, scheduler?: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a>): Observable&#x3C;S></code-example>\n\n\n<div class=\"short-description\">\n  <p>Generates an Observable by running a state-driven loop\nthat emits an element on each iteration.</p>\n\n</div>\n\n<h4 class=\"no-anchor\" id=\"parameters-2\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"initialState\"></a>\n        <code>initialState</code>\n      </td>\n      <td class=\"param-type\"><code>S</code></td>\n      <td class=\"param-description\">\n              <p>Initial state.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"condition\"></a>\n        <code>condition</code>\n      </td>\n      <td class=\"param-type\"><code>ConditionFunc&#x3C;S></code></td>\n      <td class=\"param-description\">\n              <p>Condition to terminate generation (upon returning false).</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"iterate\"></a>\n        <code>iterate</code>\n      </td>\n      <td class=\"param-type\"><code>IterateFunc&#x3C;S></code></td>\n      <td class=\"param-description\">\n              <p>Iteration step function.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"scheduler\"></a>\n        <code>scheduler</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a></code></td>\n      <td class=\"param-description\">\n      <p>        Optional. Default is <code>undefined</code>.</p>\n<p>        A <a href=\"api/index/class/Scheduler\"><code>Scheduler</code></a> on which to run the generator loop. If not\nprovided, defaults to emitting immediately.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns-2\">Returns</h4>\n<p><code>Observable&#x3C;S></code>: The generated sequence.</p>\n\n\n\n\n\n\n<div class=\"description\">\n  <p><span class=\"informal\">Use it instead of nexting values in a for loop.</span></p>\n<p><img src=\"/assets/images/marble-diagrams/generate.png\" width=\"100%\" alt=\"generate marble diagram\"></p>\n<p><code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code> allows you to create a stream of values generated with a loop very similar to\na traditional for loop. The first argument of <code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code> is a beginning value. The second argument\nis a function that accepts this value and tests if some condition still holds. If it does,\nthen the loop continues, if not, it stops. The third value is a function which takes the\npreviously defined value and modifies it in some way on each iteration. Note how these three parameters\nare direct equivalents of three expressions in a traditional for loop: the first expression\ninitializes some state (for example, a numeric index), the second tests if the loop can perform the next\niteration (for example, if the index is lower than 10) and the third states how the defined value\nwill be modified on every step (for example, the index will be incremented by one).</p>\n<p>Return value of a <code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code> operator is an Observable that on each loop iteration\nemits a value. First of all, the condition function is ran. If it returns true, then the Observable\nemits the currently stored value (initial value at the first iteration) and finally updates\nthat value with iterate function. If at some point the condition returns false, then the Observable\ncompletes at that moment.</p>\n<p>Optionally you can pass a fourth parameter to <code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code> - a result selector function which allows you\nto immediately map the value that would normally be emitted by an Observable.</p>\n<p>If you find three anonymous functions in <code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code> call hard to read, you can provide\na single object to the operator instead where the object has the properties: <code>initialState</code>,\n<code>condition</code>, <code>iterate</code> and <code>resultSelector</code>, which should have respective values that you\nwould normally pass to <code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code>. <code>resultSelector</code> is still optional, but that form\nof calling <code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code> allows you to omit <code>condition</code> as well. If you omit it, that means\ncondition always holds, or in other words the resulting Observable will never complete.</p>\n<p>Both forms of <code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code> can optionally accept a scheduler. In case of a multi-parameter call,\nscheduler simply comes as a last argument (no matter if there is a <code>resultSelector</code>\nfunction or not). In case of a single-parameter call, you can provide it as a\n<code>scheduler</code> property on the object passed to the operator. In both cases, a scheduler decides when\nthe next iteration of the loop will happen and therefore when the next value will be emitted\nby the Observable. For example, to ensure that each value is pushed to the Observer\non a separate task in the event loop, you could use the <code><a href=\"api/index/const/asyncScheduler\" class=\"code-anchor\">asyncScheduler</a></code> scheduler. Note that\nby default (when no scheduler is passed) values are simply emitted synchronously.</p>\n<h2 id=\"examples-1\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/generate#examples-1\"><i class=\"material-icons\">link</i></a></h2>\n<p>Use with condition and iterate functions</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a> } from 'rxjs';\n\nconst result = <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>(0, x => x &#x3C; 3, x => x + 1);\n\nresult.subscribe({\n  next: value => console.log(value),\n  complete: () => console.log('Complete!')\n});\n\n// Logs:\n// 0\n// 1\n// 2\n// 'Complete!'\n</code-example>\n<p>Use with condition, iterate and resultSelector functions</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a> } from 'rxjs';\n\nconst result = <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>(0, x => x &#x3C; 3, x => x + 1, x => x * 1000);\n\nresult.subscribe({\n  next: value => console.log(value),\n  complete: () => console.log('Complete!')\n});\n\n// Logs:\n// 0\n// 1000\n// 2000\n// 'Complete!'\n</code-example>\n<p>Use with options object</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a> } from 'rxjs';\n\nconst result = <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>({\n  initialState: 0,\n  condition(value) { return value &#x3C; 3; },\n  iterate(value) { return value + 1; },\n  resultSelector(value) { return value * 1000; }\n});\n\nresult.subscribe({\n  next: value => console.log(value),\n  complete: () => console.log('Complete!')\n});\n\n// Logs:\n// 0\n// 1000\n// 2000\n// 'Complete!'\n</code-example>\n<p>Use options object without condition function</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a> } from 'rxjs';\n\nconst result = <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>({\n  initialState: 0,\n  iterate(value) { return value + 1; },\n  resultSelector(value) { return value * 1000; }\n});\n\nresult.subscribe({\n  next: value => console.log(value),\n  complete: () => console.log('Complete!') // This will never run\n});\n\n// Logs:\n// 0\n// 1000\n// 2000\n// 3000\n// ...and never stops.\n</code-example>\n\n</div>\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>(options: GenerateBaseOptions&#x3C;S>): Observable&#x3C;S></code-example>\n\n\n<div class=\"short-description\">\n  <p>Generates an observable sequence by running a state-driven loop\nproducing the sequence's elements, using the specified scheduler\nto send out observer messages.\nThe overload accepts options object that might contain initial state, iterate,\ncondition and scheduler.</p>\n\n</div>\n\n<h4 class=\"no-anchor\" id=\"parameters-3\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"options\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>GenerateBaseOptions&#x3C;S></code></td>\n      <td class=\"param-description\">\n              <p>Object that must contain initialState, iterate and might contain condition and scheduler.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns-3\">Returns</h4>\n<p><code>Observable&#x3C;S></code>: The generated sequence.</p>\n\n\n\n\n\n\n<div class=\"description\">\n  <p><img src=\"/assets/images/marble-diagrams/generate.png\" width=\"100%\" alt=\"generate marble diagram\"></p>\n<h2 id=\"examples-2\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/generate#examples-2\"><i class=\"material-icons\">link</i></a></h2>\n<p>Use options object with condition function</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a> } from 'rxjs';\n\nconst result = <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>({\n  initialState: 0,\n  condition: x => x &#x3C; 3,\n  iterate: x => x + 1\n});\n\nresult.subscribe({\n  next: value => console.log(value),\n  complete: () => console.log('Complete!')\n});\n\n// Logs:\n// 0\n// 1\n// 2\n// 'Complete!'\n</code-example>\n\n</div>\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>(options: GenerateOptions&#x3C;T, S>): Observable&#x3C;T></code-example>\n\n\n<div class=\"short-description\">\n  <p>Generates an observable sequence by running a state-driven loop\nproducing the sequence's elements, using the specified scheduler\nto send out observer messages.\nThe overload accepts options object that might contain initial state, iterate,\ncondition, result selector and scheduler.</p>\n\n</div>\n\n<h4 class=\"no-anchor\" id=\"parameters-4\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"options\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>GenerateOptions&#x3C;T, S></code></td>\n      <td class=\"param-description\">\n              <p>Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns-4\">Returns</h4>\n<p><code>Observable&#x3C;T></code>: The generated sequence.</p>\n\n\n\n\n\n\n<div class=\"description\">\n  <p><img src=\"/assets/images/marble-diagrams/generate.png\" width=\"100%\" alt=\"generate marble diagram\"></p>\n<h2 id=\"examples-3\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/generate#examples-3\"><i class=\"material-icons\">link</i></a></h2>\n<p>Use options object with condition and iterate function</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a> } from 'rxjs';\n\nconst result = <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>({\n  initialState: 0,\n  condition: x => x &#x3C; 3,\n  iterate: x => x + 1,\n  resultSelector: x => x\n});\n\nresult.subscribe({\n  next: value => console.log(value),\n  complete: () => console.log('Complete!')\n});\n\n// Logs:\n// 0\n// 1\n// 2\n// 'Complete!'\n</code-example>\n\n</div>\n    </td>\n  </tr>\n  \n  </tbody></table>\n</section>\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/class/Scheduler\n - api/index/const/asapScheduler\n - api/index/const/asyncScheduler\n - api/index/function/generate#examples\n - api/index/function/generate#examples-1\n - api/index/function/generate#examples-2\n - api/index/function/generate#examples-3\n - api/index/function/generate#generate\n - api/index/function/generate#overloads\n - api/index/interface/SchedulerLike\n - https://github.com/ReactiveX/rxjs/edit/master/src/internal/observable/generate.ts?message=docs(index)%3A%20describe%20your%20change...#L335-L387\n - https://github.com/ReactiveX/rxjs/tree/8.0.0-alpha.14/src/internal/observable/generate.ts#L335-L387\n-->"
}