{
  "id": "api/index/function/timer",
  "title": "timer",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/ReactiveX/rxjs/edit/master/src/internal/observable/timer.ts?message=docs(index)%3A%20describe%20your%20change...#L133-L199\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/ReactiveX/rxjs/tree/8.0.0-alpha.14/src/internal/observable/timer.ts#L133-L199\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/timer\", \"name\": \"timer\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"timer\">timer<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/timer#timer\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(dueTime: number | Date = 0, intervalOrScheduler?: number | <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a>, scheduler: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a> = <a href=\"api/index/const/asyncScheduler\" class=\"code-anchor\">asyncScheduler</a>): Observable&#x3C;number></code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"dueTime\"></a>\n        <code>dueTime</code>\n      </td>\n      <td class=\"param-type\"><code>number | Date</code></td>\n      <td class=\"param-description\">\n              <p>Optional. Default is <code>0</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"intervalOrScheduler\"></a>\n        <code>intervalOrScheduler</code>\n      </td>\n      <td class=\"param-type\"><code>number | <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a></code></td>\n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"scheduler\"></a>\n        <code>scheduler</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a></code></td>\n      <td class=\"param-description\">\n              <p>Optional. Default is <code><a href=\"api/index/const/asyncScheduler\" class=\"code-anchor\">asyncScheduler</a></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns\">Returns</h4>\n<p><code>Observable&#x3C;number></code></p>\n\n\n\n\n\n\n\n\n\n  \n\n\n<section class=\"overloads\">\n  <h2 id=\"overloads\">Overloads<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/timer#overloads\"><i class=\"material-icons\">link</i></a></h2>\n  <table>\n  \n  <tbody><tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(due: number | Date, scheduler?: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a>): Observable&#x3C;0></code-example>\n\n\n<div class=\"short-description\">\n  <p>Creates an observable that will wait for a specified time period, or exact date, before\nemitting the number 0.</p>\n\n</div>\n\n<h4 class=\"no-anchor\" id=\"parameters-1\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"due\"></a>\n        <code>due</code>\n      </td>\n      <td class=\"param-type\"><code>number | Date</code></td>\n      <td class=\"param-description\">\n      <p>        If a <code>number</code>, the amount of time in milliseconds to wait before emitting.\nIf a <code>Date</code>, the exact time at which to emit.</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"scheduler\"></a>\n        <code>scheduler</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a></code></td>\n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>The scheduler to use to schedule the delay. Defaults to <a href=\"api/index/const/asyncScheduler\"><code>asyncScheduler</code></a>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns-1\">Returns</h4>\n<p><code>Observable&#x3C;0></code></p>\n\n\n\n\n\n\n<div class=\"description\">\n  <p><span class=\"informal\">Used to emit a notification after a delay.</span></p>\n<p>This observable is useful for creating delays in code, or racing against other values\nfor ad-hoc timeouts.</p>\n<p>The <code><a href=\"api/index/function/delay\" class=\"code-anchor\">delay</a></code> is specified by default in milliseconds, however providing a custom scheduler could\ncreate a different behavior.</p>\n<h2 id=\"examples\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/timer#examples\"><i class=\"material-icons\">link</i></a></h2>\n<p>Wait 3 seconds and start another observable</p>\n<p>You might want to use <code><a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a></code> to delay subscription to an\nobservable by a set amount of time. Here we use a timer with\n<a href=\"api/index/function/concatMapTo\"><code>concatMapTo</code></a> or <a href=\"api/index/function/concatMap\"><code>concatMap</code></a> in order to wait\na few seconds and start a subscription to a source.</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/concatMap\" class=\"code-anchor\">concatMap</a> } from 'rxjs';\n\n// This could be any observable\nconst source = <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(1, 2, 3);\n\n<a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(3000)\n  .pipe(<a href=\"api/index/function/concatMap\" class=\"code-anchor\">concatMap</a>(() => source))\n  .subscribe(console.log);\n</code-example>\n<p>Take all values until the start of the next minute</p>\n<p>Using a <code>Date</code> as the trigger for the first emission, you can\ndo things like wait until midnight to fire an event, or in this case,\nwait until a new minute starts (chosen so the example wouldn't take\ntoo long to run) in order to stop watching a stream. Leveraging\n<a href=\"api/index/function/takeUntil\"><code>takeUntil</code></a>.</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>, <a href=\"api/index/function/takeUntil\" class=\"code-anchor\">takeUntil</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a> } from 'rxjs';\n\n// Build a Date object that marks the\n// next minute.\nconst currentDate = new Date();\nconst startOfNextMinute = new Date(\n  currentDate.getFullYear(),\n  currentDate.getMonth(),\n  currentDate.getDate(),\n  currentDate.getHours(),\n  currentDate.getMinutes() + 1\n);\n\n// This could be any observable stream\nconst source = <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000);\n\nconst result = source.pipe(\n  <a href=\"api/index/function/takeUntil\" class=\"code-anchor\">takeUntil</a>(<a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(startOfNextMinute))\n);\n\nresult.subscribe(console.log);\n</code-example>\n<h3 id=\"known-limitations\">Known Limitations<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/timer#known-limitations\"><i class=\"material-icons\">link</i></a></h3>\n<ul>\n<li>\n<p>The <a href=\"api/index/const/asyncScheduler\"><code>asyncScheduler</code></a> uses <code>setTimeout</code> which has limitations for how far in the future it can be scheduled.</p>\n</li>\n<li>\n<p>If a <code>scheduler</code> is provided that returns a timestamp other than an epoch from <code>now()</code>, and\na <code>Date</code> object is passed to the <code>dueTime</code> argument, the calculation for when the first emission\nshould occur will be incorrect. In this case, it would be best to do your own calculations\nahead of time, and pass a <code>number</code> in as the <code>dueTime</code>.</p>\n</li>\n</ul>\n\n</div>\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(startDue: number | Date, intervalDuration: number, scheduler?: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a>): Observable&#x3C;number></code-example>\n\n\n<div class=\"short-description\">\n  <p>Creates an observable that starts an interval after a specified delay, emitting incrementing numbers -- starting at <code>0</code> --\non each interval afterwards.</p>\n\n</div>\n\n<h4 class=\"no-anchor\" id=\"parameters-2\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"startDue\"></a>\n        <code>startDue</code>\n      </td>\n      <td class=\"param-type\"><code>number | Date</code></td>\n      <td class=\"param-description\">\n      <p>        If a <code>number</code>, is the time to wait before starting the interval.\nIf a <code>Date</code>, is the exact time at which to start the interval.</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"intervalDuration\"></a>\n        <code>intervalDuration</code>\n      </td>\n      <td class=\"param-type\"><code>number</code></td>\n      <td class=\"param-description\">\n      <p>        The delay between each value emitted in the interval. Passing a\nnegative number here will result in immediate completion after the first value is emitted, as though\nno <code>intervalDuration</code> was passed at all.</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"scheduler\"></a>\n        <code>scheduler</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a></code></td>\n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>The scheduler to use to schedule the delay. Defaults to <a href=\"api/index/const/asyncScheduler\"><code>asyncScheduler</code></a>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns-2\">Returns</h4>\n<p><code>Observable&#x3C;number></code></p>\n\n\n\n\n\n\n<div class=\"description\">\n  <p>The <code><a href=\"api/index/function/delay\" class=\"code-anchor\">delay</a></code> and <code>intervalDuration</code> are specified by default in milliseconds, however providing a custom scheduler could\ncreate a different behavior.</p>\n<h2 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/timer#example\"><i class=\"material-icons\">link</i></a></h2>\n<h3 id=\"start-an-interval-that-starts-right-away\">Start an interval that starts right away<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/timer#start-an-interval-that-starts-right-away\"><i class=\"material-icons\">link</i></a></h3>\n<p>Since <a href=\"api/index/function/interval\"><code>interval</code></a> waits for the passed delay before starting,\nsometimes that's not ideal. You may want to start an interval immediately.\n<code><a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a></code> works well for this. Here we have both side-by-side so you can\nsee them in comparison.</p>\n<p>Note that this observable will never complete.</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a> } from 'rxjs';\n\n<a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(0, 1000).subscribe(n => console.log('<a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>', n));\n<a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000).subscribe(n => console.log('<a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>', n));\n</code-example>\n<h3 id=\"known-limitations-1\">Known Limitations<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/timer#known-limitations-1\"><i class=\"material-icons\">link</i></a></h3>\n<ul>\n<li>\n<p>The <a href=\"api/index/const/asyncScheduler\"><code>asyncScheduler</code></a> uses <code>setTimeout</code> which has limitations for how far in the future it can be scheduled.</p>\n</li>\n<li>\n<p>If a <code>scheduler</code> is provided that returns a timestamp other than an epoch from <code>now()</code>, and\na <code>Date</code> object is passed to the <code>dueTime</code> argument, the calculation for when the first emission\nshould occur will be incorrect. In this case, it would be best to do your own calculations\nahead of time, and pass a <code>number</code> in as the <code>startDue</code>.</p>\n</li>\n</ul>\n\n</div>\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\"> <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(dueTime: number | Date, unused: undefined, scheduler?: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a>): Observable&#x3C;0></code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters-3\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"dueTime\"></a>\n        <code>dueTime</code>\n      </td>\n      <td class=\"param-type\"><code>number | Date</code></td>\n      <td class=\"param-description\">\nn      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"unused\"></a>\n        <code>unused</code>\n      </td>\n      <td class=\"param-type\"><code>undefined</code></td>\n      <td class=\"param-description\">\nn      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"scheduler\"></a>\n        <code>scheduler</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a></code></td>\n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns-3\">Returns</h4>\n<p><code>Observable&#x3C;0></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  </tbody></table>\n</section>\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index\n - api/index/function/combineLatest\n - api/index/function/concat\n - api/index/function/finalize\n - api/index/function/forkJoin\n - api/index/function/interval\n - api/index/function/merge\n - api/index/function/range\n - api/index/function/repeat\n - api/index/function/retryWhen\n - api/index/function/share\n - api/index/function/startWith\n - api/index/function/throwError\n - api/index/function/throwIfEmpty\n - api/index/function/timeout\n - api/index/function/withLatestFrom\n - api/operators/finalize\n - api/operators/repeat\n - api/operators/retryWhen\n - api/operators/share\n - api/operators/startWith\n - api/operators/throwIfEmpty\n - api/operators/timeout\n - api/operators/withLatestFrom\n - deprecations/multicasting\n - guide/operators\n - guide/scheduler\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/const/asyncScheduler\n - api/index/function/concatMap\n - api/index/function/concatMapTo\n - api/index/function/delay\n - api/index/function/interval\n - api/index/function/of\n - api/index/function/takeUntil\n - api/index/function/timer#example\n - api/index/function/timer#examples\n - api/index/function/timer#known-limitations\n - api/index/function/timer#known-limitations-1\n - api/index/function/timer#overloads\n - api/index/function/timer#start-an-interval-that-starts-right-away\n - api/index/function/timer#timer\n - api/index/interface/SchedulerLike\n - https://github.com/ReactiveX/rxjs/edit/master/src/internal/observable/timer.ts?message=docs(index)%3A%20describe%20your%20change...#L133-L199\n - https://github.com/ReactiveX/rxjs/tree/8.0.0-alpha.14/src/internal/observable/timer.ts#L133-L199\n-->"
}